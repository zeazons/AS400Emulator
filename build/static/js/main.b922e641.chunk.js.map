{"version":3,"sources":["components/Emulator/EmulatorView.jsx","components/Emulator/controler.js","components/Emulator/index.jsx","components/FieldsMapping/index.jsx","components/ListMapping/index.jsx","components/ScreenMapping/index.jsx","index.js"],"names":["EmulatorView","props","id","readOnly","className","getHighlightDefault","rowSize","colSize","textHighlight","i","j","getIndexByRowCol","row","setSelectionRange","elStr","selectionStart","selectionEnd","elScreen","$","start","end","createTextRange","range","collapse","moveEnd","moveStart","select","getRowNumberByIndex","index","val","substr","split","length","getColNumberByIndex","getStartSelection","startIndex","prop","col","getEndSelection","endIndex","getSelectionRange","substring","setAS400Cursor","data","pos","posStr","posArr","parseInt","getAS400Cursor","markAllCheckStringOnScreen","markListData","elHighlight","text","innerHTML","_","isEmpty","mark1","mark2","mark3","html","Emulator","markAllCheckString","state","clearAllMarkChackString","setState","markList","markStringChackString","markType","highlight","newMarkList","replace","clearMarkString","highlightList","lastSelection","rows","cols","this","style","cursor","attr","elScreenTemp","elStyle","initScreen","styleParams","textStyle","character","styleCharacter","isEmptyObject","toLowerCase","setAs400Style","Component","defaultProps","Date","getTime","MARK_1","FieldsMapping","onMouseUp","callbackFn","mouseup","event","onDoubleClick","dblclick","onSelect","target","startPosition","getFieldHighlight","setFieldHighlight","clearFieldHighlight","getLastSelection","args","apply","propTypes","PropTypes","object","func","MARK_3","ListMapping","getListHighlight","setListHighlight","clearListHighlight","ScreenMapping","onKeyDown","keydown","getHighlight","setHighlight","clearHighlight","getHighlightList","setHighlightList","clearHighlightList"],"mappings":"4PAuBeA,EArBM,SAAAC,GAAU,IACrBC,EAAiBD,EAAjBC,GAAIC,EAAaF,EAAbE,SAEZ,OACE,yBAAKC,UAAU,mBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAS,UAAKF,EAAL,sBACd,yBAAKE,UAAS,UAAKF,EAAL,kBACd,8BACEC,SAAUA,IAAsB,EAChCC,UAAS,UAAKF,EAAL,mBAEX,8BACEC,SAAUA,IAAsB,EAChCC,UAAS,UAAKF,EAAL,2B,gBCbNG,EAAsB,SAACC,EAASC,GAE3C,IADA,IAAIC,EAAgB,GACXC,EAAI,EAAGA,EAAIH,EAASG,GAAK,EAAG,CACnC,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAASG,GAAK,EAChCF,GAAiB,IAEnBA,GAAiB,KAEnB,OAAOA,GAGIG,EAAmB,SAACC,EAAKL,GAAN,OAClB,IAAXK,EAAM,GAAUL,EAAUK,EAAM,GAEtBC,EAAoB,SAACC,EAAOC,EAAgBC,GACvD,IAAMC,EAAWC,IAAE,IAAD,OAAKJ,EAAL,kBAA2B,GAEzCK,EAAQJ,EACRK,EAAMJ,EAMV,GAJAG,GAAS,EACTC,GAAO,EAGHH,EAASJ,kBACXI,EAASJ,kBAAkBM,EAAOC,QAC7B,GAAIH,EAASI,gBAAiB,CACnC,IAAMC,EAAQL,EAASI,kBACvBC,EAAMC,UAAS,GACfD,EAAME,QAAQ,YAAaJ,GAC3BE,EAAMG,UAAU,YAAaN,GAC7BG,EAAMI,WAgCJC,EAAsB,SAACb,EAAOc,GAElC,OADiBV,IAAE,IAAD,OAAKJ,EAAL,kBAGfe,MACAC,OAAO,EAAGF,GACVG,MAAM,MAAMC,OAAS,GAIpBC,EAAsB,SAACnB,EAAOc,EAAOrB,GACzC,IAAMK,EAAMe,EAAoBb,EAAOc,GAGvC,OAAIA,IAAUrB,GAAWK,EAAM,GAAKA,EAC3BL,GAHIqB,EAAQhB,GAAOL,GAajB2B,EAAoB,SAACpB,EAAOP,GACvC,IACM4B,EADWjB,IAAE,IAAD,OAAKJ,EAAL,kBACUsB,KAAK,kBAMjC,MAAO,CACLxB,IAL6Be,EAAoBb,EAAOqB,GAAc,EAMtEE,IAJAJ,EAAoBnB,EAAOqB,EAAY5B,GAAW,IAQzC+B,EAAkB,SAACxB,EAAOP,GACrC,IACMgC,EADWrB,IAAE,IAAD,OAAKJ,EAAL,kBACQsB,KAAK,gBAK/B,MAAO,CACLxB,IAL2Be,EAAoBb,EAAOyB,GAAY,EAMlEF,IAJAJ,EAAoBnB,EAAOyB,EAAUhC,GAAW,IAQvCiC,EAAoB,SAAC1B,EAAOC,EAAgBC,GACvD,IAAMC,EAAWC,IAAE,IAAD,OAAKJ,EAAL,kBAElB,OAAIC,IAAmBC,EACHC,EAASY,MAAMY,UAAU1B,EAAgBC,GAGtD,IAgDI0B,EAAiB,SAAC5B,EAAO6B,GACpC,IAAMC,EA7HsB,SAAAC,GAC5B,IAAMC,EAASD,EAAOd,MAAM,KAE5B,MAAO,CACLnB,IAAKmC,SAASD,EAAO,IACrBT,IAAKU,SAASD,EAAO,KAwHXE,CAAeL,GAErBf,EAAQjB,EAAiBiC,EAAIhC,IAAKgC,EAAIP,KAE5CxB,EAAkBC,EAAOc,EAAOA,IAGrBqB,EAA6B,SAAC/C,EAAIgD,GAK7C,IAJA,IAAMC,EAAcjC,IAAE,IAAD,OAAKhB,EAAL,qBACfkD,EAAOD,EAAY,GAAGE,UACxB7C,EAAgB,GAEXC,EAAI,EAAGA,EAAI2C,EAAKpB,OAAQvB,GAAK,EAEjC6C,IAAEC,QAAQL,EAAaM,QACxB/C,IAAME,EAAiBuC,EAAaM,MAAM5C,IAAKsC,EAAaM,MAAMnB,KAQjEiB,IAAEC,QAAQL,EAAaM,QACxB/C,IACAE,EAAiBuC,EAAaM,MAAM5C,IAAKsC,EAAaM,MAAMnB,KAC5Da,EAAaM,MAAMJ,KAAKpB,OACxB,EAICsB,IAAEC,QAAQL,EAAaO,QACxBhD,IAAME,EAAiBuC,EAAaO,MAAM7C,IAAKsC,EAAaO,MAAMpB,KAQjEiB,IAAEC,QAAQL,EAAaO,QACxBhD,IACAE,EAAiBuC,EAAaO,MAAM7C,IAAKsC,EAAaO,MAAMpB,KAC5Da,EAAaO,MAAML,KAAKpB,OACxB,EAICsB,IAAEC,QAAQL,EAAaQ,QACxBjD,IAAME,EAAiBuC,EAAaQ,MAAM9C,IAAKsC,EAAaQ,MAAMrB,KAQjEiB,IAAEC,QAAQL,EAAaQ,QACxBjD,IACAE,EAAiBuC,EAAaQ,MAAM9C,IAAKsC,EAAaQ,MAAMrB,KAC5Da,EAAaQ,MAAMN,KAAKpB,OACxB,EAIAxB,GAAiB4C,EAAK3C,GAFtBD,GAAa,UAAO4C,EAAK3C,GAAZ,mBAZTyC,EAAaQ,MAAMN,KAAKpB,OAAS,EACnCxB,GAAa,wBAAqB4C,EAAK3C,GAA1B,mBAEbD,GAAa,wBAAqB4C,EAAK3C,IARzCD,GAAa,UAAO4C,EAAK3C,GAAZ,mBAZTyC,EAAaO,MAAML,KAAKpB,OAAS,EACnCxB,GAAa,wBAAqB4C,EAAK3C,GAA1B,mBAEbD,GAAa,wBAAqB4C,EAAK3C,IARzCD,GAAa,UAAO4C,EAAK3C,GAAZ,mBAZTyC,EAAaM,MAAMJ,KAAKpB,OAAS,EACnCxB,GAAa,wBAAqB4C,EAAK3C,GAA1B,mBAEbD,GAAa,wBAAqB4C,EAAK3C,IAiD7C0C,EAAYQ,KAAKnD,ICnOboD,G,kBACJ,WAAY3D,GAAQ,IAAD,8BACjB,4CAAMA,KAuBR4D,mBAAqB,SAAAX,GAAiB,IAC5BhD,EAAO,EAAK4D,MAAZ5D,GACR,EAAK6D,wBAAwB7D,GAC7B,EAAK8D,SAAS,CACZC,SAAUf,IAGZD,EAA2B/C,EAAIgD,IA/Bd,EAkCnBa,wBAA0B,SAAAjD,GAAU,IAAD,EACJ,EAAKgD,MAA1BxD,EADyB,EACzBA,QAASC,EADgB,EAChBA,QACGW,IAAE,IAAD,OAAKJ,EAAL,qBACT6C,KAAKtD,EAAoBC,EAASC,IAE9C,EAAKyD,SAAS,CACZC,SAAU,MAxCK,EA4CnBC,sBAAwB,SAACC,EAAUC,GACjC,IAAIC,EACEJ,EAAW,EAAKH,MAAMG,SAE5BI,EAAW,eACNJ,EADM,eAERE,EAASG,QAAQ,IAAK,IAAMF,IAG/B,EAAKJ,SAAS,CAAEC,SAAUI,IAC1B,EAAKR,mBAAmBQ,IAtDP,EAyDnBE,gBAAkB,SAAAJ,GAChB,IAAIE,EACEJ,EAAW,EAAKH,MAAMG,SAG5BI,EAAW,eACNJ,EADM,eAERE,EAASG,QAAQ,IAAK,IAJR,KAOjB,EAAKN,SAAS,CAAEC,SAAUI,IAC1B,EAAKR,mBAAmBQ,IAjExB,EAAKP,MAAQ,CACX5D,GAAID,EAAMC,GACV+D,SAAUhE,EAAMuE,cAChBC,cAAe,CACbtC,WAAY,EACZI,SAAU,GAEZjC,QAASL,EAAMyE,KACfnE,QAASN,EAAM0E,MAXA,E,iFAeE,IDiHQ7D,EAAO6B,ECjHhB,EAC8BiC,KAAK3E,MAA7CC,EADU,EACVA,GAAIwE,EADM,EACNA,KAAMC,EADA,EACAA,KAAMvB,EADN,EACMA,KAAMyB,EADZ,EACYA,MAAOC,EADnB,EACmBA,QD+Ff,SAAChE,EAAOR,EAASC,GACzC,IAAMU,EAAWC,IAAE,IAAD,OAAKJ,EAAL,kBAClBG,EAAS8D,KAAK,OAAQzE,GACtBW,EAAS8D,KAAK,OAAQxE,GAEtB,IAAMyE,EAAe9D,IAAE,IAAD,OAAKJ,EAAL,uBACtBkE,EAAaD,KAAK,OAAQzE,GAC1B0E,EAAaD,KAAK,OAAQxE,GAE1B,IAAM0E,EAAU/D,IAAE,IAAD,OAAKJ,EAAL,iBACjBmE,EAAQF,KAAK,OAAQzE,GACrB2E,EAAQF,KAAK,OAAQxE,GAEDW,IAAE,IAAD,OAAKJ,EAAL,qBACT6C,KAAKtD,EAAoBC,EAASC,IC3G5C2E,CAAWhF,EAAIwE,EAAMC,GD8GM7D,EC7GZZ,ED6GmByC,EC7GfS,ED8GJlC,IAAE,IAAD,OAAKJ,EAAL,kBACTe,IAAIc,GAGc,SAAC7B,EAAOsC,EAAM+B,GAMzC,IALA,IAAMF,EAAU/D,IAAE,IAAD,OAAKJ,EAAL,iBAEb+D,EAAQM,EAERC,EAAY,GACP3E,EAAI,EAAGA,EAAI2C,EAAKpB,OAAQvB,GAAK,EAAG,CACvC,IAAM4E,EAAYjC,EAAK3C,GACjB6E,EAAiBT,EAAMpE,GAEN,MAAnB6E,GAA2BpE,IAAEqE,cAAcD,GAM7CF,GAAaC,EALbD,GAAaC,EAAUf,QACrBe,EADW,iBAEDC,EAAeE,cAFd,4BAE+CF,EAAeE,cAF9D,YASjBtE,IAAE+D,GAAStB,KAAKyB,GCrIdK,CAAcvF,EAAIkD,EAAMyB,GACxBnC,EAAexC,EAAI4E,K,+BAkDX,IAAD,EACkBF,KAAK3E,MAAtBC,EADD,EACCA,GAAIC,EADL,EACKA,SACZ,OAAO,kBAAC,EAAD,CAAcD,GAAIA,EAAIC,SAAUA,Q,GA1EpBuF,cAAjB9B,EA8EG+B,aAAe,CACpBzF,IAAI,IAAI0F,MAAOC,UACfnB,KAAM,GACNC,KAAM,GACNvB,KACE,6vDACFyB,MACE,8vDACFC,OAAQ,MACR3E,UAAU,GAcCyD,Q,uBC5GTkC,EAAS,SAEFC,EAAb,2MAaEC,UAAY,SAAAC,GAAe,IACjB/F,EAAO,EAAK4D,MAAZ5D,GACSgB,IAAE,IAAD,OAAKhB,EAAL,kBAETgG,SAAQ,SAAAC,GAEfF,EAAWE,GACX,EAAKpC,wBAAwB7D,OApBnC,EAwBEkG,cAAgB,SAAAH,GAAe,IACrB/F,EAAO,EAAK4D,MAAZ5D,GACSgB,IAAE,IAAD,OAAKhB,EAAL,kBAETmG,UAAS,SAAAF,GAGhBF,EAAWE,OA/BjB,EAmCEG,SAAW,WAAO,IAAD,EACS,EAAKxC,MAArB5D,EADO,EACPA,GAAIK,EADG,EACHA,QACKW,IAAE,IAAD,OAAKhB,EAAL,kBAETwB,QAAO,SAAAyE,GAEd,IAAMhF,EAAQgF,EAAMI,OAAOxF,eACrBK,EAAM+E,EAAMI,OAAOvF,aACnBwF,EAAgBtE,EAAkBhC,EAAIK,GAEtCoC,EAAO,CACXS,KAAMZ,EAAkBtC,EAAIiB,EAAOC,GACnCR,IAAK4F,EAAc5F,IACnByB,IAAKmE,EAAcnE,KAGrB,EAAK2B,SAAS,CACZS,cAAe,CACbrB,KAAMZ,EAAkBtC,EAAIiB,EAAOC,GACnCR,IAAK4F,EAAc5F,IACnByB,IAAKmE,EAAcnE,OAIvB,EAAK6B,sBAAsB4B,EAAQnD,OA3DzC,EAoEE8D,kBAAoB,WAClB,OAAO,EAAK3C,MAAMG,SAAS6B,EAAOxB,QAAQ,IAAK,MArEnD,EAwEEoC,kBAAoB,SAAAtC,GAClB,EAAKF,sBAAsB4B,EAAQ1B,IAzEvC,EA4EEuC,oBAAsB,WACpB,OAAO,EAAKpC,gBAAgBuB,IA7EhC,EAgFEc,iBAAmB,WACjB,OAAO,EAAK9C,MAAMW,eAjFtB,mFAC8B,IAAD,uBAANoC,EAAM,yBAANA,EAAM,gBACzB,+DAAwBC,MAAMlC,KAAMiC,GAEpCjC,KAAKf,mBAAmBe,KAAK3E,MAAMmE,WAHV,MAKYQ,KAAK3E,MAAlCmG,EALiB,EAKjBA,cAAeJ,EALE,EAKFA,UAEvBpB,KAAK0B,WACL1B,KAAKoB,UAAUA,GACfpB,KAAKwB,cAAcA,KAVvB,+BAoFY,IACAlG,EAAO0E,KAAK3E,MAAZC,GACR,OAAO,kBAAC,EAAD,CAAcA,GAAIA,EAAIC,UAAQ,QAtFzC,GAAmCyD,GAAtBmC,EA0FJJ,aAAe,CACpBvB,UAAW,IAIf2B,EAAcgB,UAAY,CACxBvC,cAAewC,IAAUC,OACzBb,cAAeY,IAAUE,KACzBlB,UAAWgB,IAAUE,MAGRnB,QCvGTD,EAAS,SACTqB,EAAS,SAEFC,EAAb,2MAaEpB,UAAY,SAAAC,GAAe,IACjB/F,EAAO,EAAK4D,MAAZ5D,GACSgB,IAAE,IAAD,OAAKhB,EAAL,kBAETgG,SAAQ,SAAAC,GAEfF,EAAWE,GACX,EAAKpC,wBAAwB7D,OApBnC,EAwBEkG,cAAgB,SAAAH,GAAe,IACrB/F,EAAO,EAAK4D,MAAZ5D,GACSgB,IAAE,IAAD,OAAKhB,EAAL,kBAETmG,UAAS,SAAAF,GAGhBF,EAAWE,OA/BjB,EAmCEG,SAAW,WAAO,IAAD,EACS,EAAKxC,MAArB5D,EADO,EACPA,GAAIK,EADG,EACHA,QACKW,IAAE,IAAD,OAAKhB,EAAL,kBAETwB,QAAO,SAAAyE,GAEd,IAAMhF,EAAQgF,EAAMI,OAAOxF,eACrBK,EAAM+E,EAAMI,OAAOvF,aACnBwF,EAAgBtE,EAAkBhC,EAAIK,GAEtCoC,EAAO,CACXS,KAAMZ,EAAkBtC,EAAIiB,EAAOC,GACnCR,IAAK4F,EAAc5F,IACnByB,IAAKmE,EAAcnE,KAGrB,EAAK2B,SAAS,CACZS,cAAe,CACbrB,KAAMZ,EAAkBtC,EAAIiB,EAAOC,GACnCR,IAAK4F,EAAc5F,IACnByB,IAAKmE,EAAcnE,OAInBM,EAAKS,KAAKpB,OAASzB,EACrB,EAAK2D,sBAAsBiD,EAAQxE,GACb,IAAbA,EAAKN,KAAaM,EAAKS,KAAKpB,QAAUzB,GAC/C,EAAK2D,sBAAsB4B,EAAQnD,OA9D3C,EAwEE0E,iBAAmB,WACjB,IAAMlD,EAAW2B,EACjB,OAAO,EAAKhC,MAAMG,SAASE,EAASG,QAAQ,IAAK,MA1ErD,EA6EEgD,iBAAmB,SAAAlD,GACjB,EAAKF,sBAAsB4B,EAAQ1B,IA9EvC,EAiFEmD,mBAAqB,WACnB,OAAO,EAAKhD,gBAAgBuB,IAlFhC,EAqFEW,kBAAoB,WAClB,OAAO,EAAK3C,MAAMG,SAASkD,EAAO7C,QAAQ,IAAK,MAtFnD,EAyFEoC,kBAAoB,SAAAtC,GAClB,EAAKF,sBAAsBiD,EAAQ/C,IA1FvC,EA6FEuC,oBAAsB,WACpB,OAAO,EAAKpC,gBAAgB4C,IA9FhC,EAiGEP,iBAAmB,WACjB,OAAO,EAAK9C,MAAMW,eAlGtB,mFAC8B,IAAD,uBAANoC,EAAM,yBAANA,EAAM,gBACzB,+DAAwBC,MAAMlC,KAAMiC,GAEpCjC,KAAKf,mBAAmBe,KAAK3E,MAAMmE,WAHV,MAKYQ,KAAK3E,MAAlCmG,EALiB,EAKjBA,cAAeJ,EALE,EAKFA,UAEvBpB,KAAK0B,WACL1B,KAAKoB,UAAUA,GACfpB,KAAKwB,cAAcA,KAVvB,+BAqGY,IACAlG,EAAO0E,KAAK3E,MAAZC,GACR,OAAO,kBAAC,EAAD,CAAcA,GAAIA,EAAIC,UAAQ,QAvGzC,GAAiCyD,GAApBwD,EA2GJzB,aAAe,CACpBvB,UAAW,IAIfgD,EAAYL,UAAY,CACtBvC,cAAewC,IAAUC,OACzBb,cAAeY,IAAUE,KACzBlB,UAAWgB,IAAUE,MAGRE,QCnHFI,EAAb,2MAcExB,UAAY,SAAAC,GAAe,IACjB/F,EAAO,EAAK4D,MAAZ5D,GACSgB,IAAE,IAAD,OAAKhB,EAAL,kBAETgG,SAAQ,SAAAC,GAEfF,EAAWE,GACX,EAAKpC,wBAAwB7D,OArBnC,EAyBEuH,UAAY,WAAO,IAAD,EACQ,EAAK3D,MAArB5D,EADQ,EACRA,GAAIK,EADI,EACJA,QACKW,IAAE,IAAD,OAAKhB,EAAL,kBAETwH,SAAQ,SAAAvB,GAEQjE,EAAkBhC,EAAIK,GACxB+B,EAAgBpC,EAAIK,OAhC/C,EA6CE6F,cAAgB,SAAAH,GAAe,IACrB/F,EAAO,EAAK4D,MAAZ5D,GACSgB,IAAE,IAAD,OAAKhB,EAAL,kBAETmG,UAAS,SAAAF,GAEhBF,EAAWE,OAnDjB,EAuDEG,SAAW,WAAO,IAAD,EACS,EAAKxC,MAArB5D,EADO,EACPA,GAAIK,EADG,EACHA,QACKW,IAAE,IAAD,OAAKhB,EAAL,kBAETwB,QAAO,SAAAyE,GAEd,IAAMhF,EAAQgF,EAAMI,OAAOxF,eACrBK,EAAM+E,EAAMI,OAAOvF,aACnBwF,EAAgBtE,EAAkBhC,EAAIK,GAE5C,EAAKyD,SAAS,CACZS,cAAe,CACbrB,KAAMZ,EAAkBtC,EAAIiB,EAAOC,GACnCR,IAAK4F,EAAc5F,IACnByB,IAAKmE,EAAcnE,WArE7B,EAgFEsF,aAAe,SAAAxD,GACb,OAAO,EAAKL,MAAMG,SAASE,EAASG,QAAQ,IAAK,MAjFrD,EAoFEsD,aAAe,SAACzD,EAAUC,GACxB,EAAKF,sBAAsBC,EAAUC,IArFzC,EAwFEyD,eAAiB,SAAA1D,GACf,OAAO,EAAKI,gBAAgBJ,IAzFhC,EA4FE2D,iBAAmB,WACjB,OAAO,EAAKhE,MAAMG,UA7FtB,EAgGE8D,iBAAmB,SAAAvD,GACjB,EAAKX,mBAAmBW,IAjG5B,EAoGEwD,mBAAqB,WACnB,EAAKjE,wBAAwB,EAAK9D,MAAMC,KArG5C,EAwGE0G,iBAAmB,WACjB,OAAO,EAAK9C,MAAMW,eAzGtB,mFAC8B,IAAD,uBAANoC,EAAM,yBAANA,EAAM,gBACzB,+DAAwBC,MAAMlC,KAAMiC,GAEpCjC,KAAKf,mBAAmBe,KAAK3E,MAAMmE,WAHV,MAKYQ,KAAK3E,MAAlCmG,EALiB,EAKjBA,cAAeJ,EALE,EAKFA,UAEvBpB,KAAK0B,WACL1B,KAAK6C,YACL7C,KAAKoB,UAAUA,GACfpB,KAAKwB,cAAcA,KAXvB,+BA4GY,IAAD,EACkBxB,KAAK3E,MAAtBC,EADD,EACCA,GAAIC,EADL,EACKA,SACZ,OAAO,kBAAC,EAAD,CAAcD,GAAIA,EAAIC,SAAUA,QA9G3C,GAAmCyD,GAAtB4D,EAkHJ7B,aAAe,CACpBvB,UAAW,IAIfoD,EAAcT,UAAY,CACxBvC,cAAewC,IAAUC,OACzBb,cAAeY,IAAUE,KACzBlB,UAAWgB,IAAUE,MAGRM,QCvIA,WAAC5D,EAAUmC,EAAeqB,EAAaI,K","file":"static/js/main.b922e641.chunk.js","sourcesContent":["import React from \"react\";\n\nconst EmulatorView = props => {\n  const { id, readOnly } = props;\n\n  return (\n    <div className=\"as400-container\">\n      <div className=\"screen\">\n        <div className={`${id} as400-highlight`}></div>\n        <div className={`${id} as400-style`}></div>\n        <textarea\n          readOnly={readOnly ? readOnly : false}\n          className={`${id} as400-screen`}\n        ></textarea>\n        <textarea\n          readOnly={readOnly ? readOnly : false}\n          className={`${id} as400-screen-temp`}\n        ></textarea>\n      </div>\n    </div>\n  );\n};\n\nexport default EmulatorView;\n","import $ from \"jquery\";\nimport _ from \"lodash\";\n\nexport const getHighlightDefault = (rowSize, colSize) => {\n  let textHighlight = \"\";\n  for (let i = 0; i < rowSize; i += 1) {\n    for (let j = 0; j < colSize; j += 1) {\n      textHighlight += \".\";\n    }\n    textHighlight += \"\\n\";\n  }\n  return textHighlight;\n};\n\nexport const getIndexByRowCol = (row, colSize) =>\n  (row - 1) * 80 + colSize + row - 2;\n\nexport const setSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`)[0];\n\n  let start = selectionStart;\n  let end = selectionEnd;\n\n  start -= 1;\n  end -= 1;\n\n  // elScreen.focus();\n  if (elScreen.setSelectionRange) {\n    elScreen.setSelectionRange(start, end);\n  } else if (elScreen.createTextRange) {\n    const range = elScreen.createTextRange();\n    range.collapse(true);\n    range.moveEnd(\"character\", end);\n    range.moveStart(\"character\", start);\n    range.select();\n  }\n};\n\n// const clearHighlight = (elStr, markType) => {\n//   const elHighlight = $(`.${elStr}.as400-highlight`);\n//   let newHighlight = elHighlight.html();\n\n//   newHighlight = newHighlight\n//     .replace(`<as400-${markType}>`, \"\")\n//     .replace(`</as400-${markType}>`, \"\");\n\n//   elHighlight.html(newHighlight);\n// };\n\nexport const getAS400Cursor = posStr => {\n  const posArr = posStr.split(\",\");\n\n  return {\n    row: parseInt(posArr[0]),\n    col: parseInt(posArr[1])\n  };\n};\n\n// const convertRowColNumber = posStr => {\n//   const posArr = posStr.trim().split(\",\");\n//   return {\n//     row: posArr[0],\n//     col: posArr[1]\n//   };\n// };\n\nconst getRowNumberByIndex = (elStr, index) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  return (\n    elScreen\n    .val()\n    .substr(0, index)\n    .split(\"\\n\").length - 1\n  );\n};\n\nconst getColNumberByIndex = (elStr, index, colSize) => {\n  const row = getRowNumberByIndex(elStr, index);\n  const col = (index - row) % colSize;\n\n  if (index === colSize * (row + 1) + row) {\n    return colSize;\n  }\n  return col;\n};\n\nexport const setIndexByRowCol = (elStr, row, col) => {\n  const index = getIndexByRowCol(row, col);\n  setSelectionRange(elStr, index, index);\n};\n\nexport const getStartSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const startIndex = elScreen.prop(\"selectionStart\");\n\n  const rowSelectionStartIndex = getRowNumberByIndex(elStr, startIndex) + 1;\n  const colSelectionStartIndex =\n    getColNumberByIndex(elStr, startIndex, colSize) + 1;\n\n  return {\n    row: rowSelectionStartIndex,\n    col: colSelectionStartIndex\n  };\n};\n\nexport const getEndSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const endIndex = elScreen.prop(\"selectionEnd\");\n  const rowSelectionEndIndex = getRowNumberByIndex(elStr, endIndex) + 1;\n  const colSelectionEndIndex =\n    getColNumberByIndex(elStr, endIndex, colSize) + 1;\n\n  return {\n    row: rowSelectionEndIndex,\n    col: colSelectionEndIndex\n  };\n};\n\nexport const getSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n\n  if (selectionStart !== selectionEnd) {\n    const selection = elScreen.val().substring(selectionStart, selectionEnd);\n    return selection;\n  }\n  return \"\";\n};\n\nexport const initScreen = (elStr, rowSize, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.attr(\"rows\", rowSize);\n  elScreen.attr(\"cols\", colSize);\n\n  const elScreenTemp = $(`.${elStr}.as400-screen-temp`);\n  elScreenTemp.attr(\"rows\", rowSize);\n  elScreenTemp.attr(\"cols\", colSize);\n\n  const elStyle = $(`.${elStr}.as400-style`);\n  elStyle.attr(\"rows\", rowSize);\n  elStyle.attr(\"cols\", colSize);\n\n  const elHighlight = $(`.${elStr}.as400-highlight`);\n  elHighlight.html(getHighlightDefault(rowSize, colSize));\n};\n\nexport const setAs400Screen = (elStr, data) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.val(data);\n};\n\nexport const setAs400Style = (elStr, text, styleParams) => {\n  const elStyle = $(`.${elStr}.as400-style`);\n\n  let style = styleParams;\n\n  let textStyle = \"\";\n  for (let i = 0; i < text.length; i += 1) {\n    const character = text[i];\n    const styleCharacter = style[i];\n\n    if (styleCharacter !== \".\" && !$.isEmptyObject(styleCharacter)) {\n      textStyle += character.replace(\n        character,\n        `<as400-${styleCharacter.toLowerCase()}-style>$&</as400-${styleCharacter.toLowerCase()}-style>`\n      );\n    } else {\n      textStyle += character;\n    }\n  }\n\n  $(elStyle).html(textStyle);\n};\n\nexport const setAS400Cursor = (elStr, data) => {\n  const pos = getAS400Cursor(data);\n\n  const index = getIndexByRowCol(pos.row, pos.col);\n\n  setSelectionRange(elStr, index, index);\n};\n\nexport const markAllCheckStringOnScreen = (id, markListData) => {\n  const elHighlight = $(`.${id}.as400-highlight`);\n  const text = elHighlight[0].innerHTML;\n  let textHighlight = \"\";\n\n  for (let i = 0; i < text.length; i += 1) {\n    if (\n      !_.isEmpty(markListData.mark1) &&\n      i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col)\n    ) {\n      if (markListData.mark1.text.length < 2) {\n        textHighlight += `<as400-mark-1>${text[i]}</as400-mark-1>`;\n      } else {\n        textHighlight += `<as400-mark-1>${text[i]}`;\n      }\n    } else if (\n      !_.isEmpty(markListData.mark1) &&\n      i ===\n      getIndexByRowCol(markListData.mark1.row, markListData.mark1.col) +\n      markListData.mark1.text.length -\n      1\n    ) {\n      textHighlight += `${text[i]}</as400-mark-1>`;\n    } else if (\n      !_.isEmpty(markListData.mark2) &&\n      i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col)\n    ) {\n      if (markListData.mark2.text.length < 2) {\n        textHighlight += `<as400-mark-2>${text[i]}</as400-mark-2>`;\n      } else {\n        textHighlight += `<as400-mark-2>${text[i]}`;\n      }\n    } else if (\n      !_.isEmpty(markListData.mark2) &&\n      i ===\n      getIndexByRowCol(markListData.mark2.row, markListData.mark2.col) +\n      markListData.mark2.text.length -\n      1\n    ) {\n      textHighlight += `${text[i]}</as400-mark-2>`;\n    } else if (\n      !_.isEmpty(markListData.mark3) &&\n      i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col)\n    ) {\n      if (markListData.mark3.text.length < 2) {\n        textHighlight += `<as400-mark-3>${text[i]}</as400-mark-3>`;\n      } else {\n        textHighlight += `<as400-mark-3>${text[i]}`;\n      }\n    } else if (\n      !_.isEmpty(markListData.mark3) &&\n      i ===\n      getIndexByRowCol(markListData.mark3.row, markListData.mark3.col) +\n      markListData.mark3.text.length -\n      1\n    ) {\n      textHighlight += `${text[i]}</as400-mark-3>`;\n    } else {\n      textHighlight += text[i];\n    }\n  }\n\n  elHighlight.html(textHighlight);\n};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\n\nimport EmulatorView from \"./EmulatorView\";\nimport {\n  initScreen,\n  setAs400Screen,\n  setAs400Style,\n  setAS400Cursor,\n  markAllCheckStringOnScreen,\n  getHighlightDefault\n} from \"./controler\";\n\nimport \"./css/style.css\";\n\nclass Emulator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList,\n      lastSelection: {\n        startIndex: 0,\n        endIndex: 0\n      },\n      rowSize: props.rows,\n      colSize: props.cols\n    };\n  }\n\n  componentDidMount() {\n    const { id, rows, cols, text, style, cursor } = this.props;\n\n    initScreen(id, rows, cols);\n    setAs400Screen(id, text);\n    setAs400Style(id, text, style);\n    setAS400Cursor(id, cursor);\n  }\n\n  markAllCheckString = markListData => {\n    const { id } = this.state;\n    this.clearAllMarkChackString(id);\n    this.setState({\n      markList: markListData\n    });\n\n    markAllCheckStringOnScreen(id, markListData);\n  };\n\n  clearAllMarkChackString = elStr => {\n    const { rowSize, colSize } = this.state;\n    const elHighlight = $(`.${elStr}.as400-highlight`);\n    elHighlight.html(getHighlightDefault(rowSize, colSize));\n\n    this.setState({\n      markList: {}\n    });\n  };\n\n  markStringChackString = (markType, highlight) => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: highlight\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  clearMarkString = markType => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n    const markData = {};\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: markData\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  render() {\n    const { id, readOnly } = this.props;\n    return <EmulatorView id={id} readOnly={readOnly} />;\n  }\n\n  // Set default props\n  static defaultProps = {\n    id: new Date().getTime(),\n    rows: 24,\n    cols: 80,\n    text:\n      \"                                                                                \\n                                                                            \\n                                                                            \\n                                                                            \\n                                                                            \\n================================================================================\\n********************************************************************************\\n================================================================================\\n                                                                                \\n  ######  ##       ##  ##    ##  ##      ########  ########  ########  #######  \\n  ##      ###     ###  ##    ##  ##      ##    ##     ##     ##    ##  ##   ##  \\n  ######  ####   ####  ##    ##  ##      ########     ##     ##    ##  #######  \\n  ##      ## ## ## ##  ##    ##  ##      ##    ##     ##     ##    ##  ##  ##   \\n  ######  ##  ###  ##  ########  ######  ##    ##     ##     ########  ##   ##  \\n                                                                                \\n================================================================================\\n********************************************************************************\\n================================================================================\\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \",\n    style:\n      \"................................................................................\\n............................................................................\\n............................................................................\\n............................................................................\\n............................................................................\\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\\n................................................................................\\n  GGGGGG  GG       GG  GG    GG  GG      GGGGGGGG  GGGGGGGG  GGGGGGGG  GGGGGGG  \\n  GG      GGG     GGG  GG    GG  GG      GG    GG     GG     GG    GG  GG   GG  \\n  GGGGGG  GGGG   GGGG  GG    GG  GG      GGGGGGGG     GG     GG    GG  GGGGGGG  \\n  GG      GG GG GG GG  GG    GG  GG      GG    GG     GG     GG    GG  GG  GG   \\n  GGGGGG  GG  GGG  GG  GGGGGGGG  GGGGGG  GG    GG     GG     GGGGGGGG  GG   GG  \\n................................................................................\\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\\n................................................................................\\n................................................................................\\n................................................................................\\n.................................................................................\",\n    cursor: \"0,0\",\n    readOnly: false\n  };\n}\n\nEmulator.propTypes = {\n  id: PropTypes.string,\n  rows: PropTypes.number,\n  cols: PropTypes.number,\n  text: PropTypes.string,\n  style: PropTypes.string,\n  cursor: PropTypes.string,\n  readOnly: PropTypes.bool\n};\n\nexport default Emulator;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\n\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\n\nimport { getSelectionRange, getStartSelection } from \"../Emulator/controler\";\n\nconst MARK_1 = \"mark-1\";\n\nexport class FieldsMapping extends Emulator {\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n\n    this.markAllCheckString(this.props.highlight);\n\n    const { onDoubleClick, onMouseUp } = this.props;\n\n    this.onSelect();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  onMouseUp = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.mouseup(event => {\n      // console.log(`| ========== ${event.type} ========== | `);\n      callbackFn(event);\n      this.clearAllMarkChackString(id);\n    });\n  };\n\n  onDoubleClick = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.dblclick(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n\n      callbackFn(event);\n    });\n  };\n\n  onSelect = () => {\n    const { id, colSize } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.select(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      const start = event.target.selectionStart;\n      const end = event.target.selectionEnd;\n      const startPosition = getStartSelection(id, colSize);\n\n      const data = {\n        text: getSelectionRange(id, start, end),\n        row: startPosition.row,\n        col: startPosition.col\n      };\n\n      this.setState({\n        lastSelection: {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        }\n      });\n\n      this.markStringChackString(MARK_1, data);\n    });\n  };\n\n  /**\n   * ==================\n   *  provide function\n   * ==================\n   */\n  getFieldHighlight = () => {\n    return this.state.markList[MARK_1.replace(\"-\", \"\")];\n  };\n\n  setFieldHighlight = highlight => {\n    this.markStringChackString(MARK_1, highlight);\n  };\n\n  clearFieldHighlight = () => {\n    return this.clearMarkString(MARK_1);\n  };\n\n  getLastSelection = () => {\n    return this.state.lastSelection;\n  };\n\n  render() {\n    const { id } = this.props;\n    return <EmulatorView id={id} readOnly />;\n  }\n\n  // Set default props\n  static defaultProps = {\n    highlight: {}\n  };\n}\n\nFieldsMapping.propTypes = {\n  highlightList: PropTypes.object,\n  onDoubleClick: PropTypes.func,\n  onMouseUp: PropTypes.func\n};\n\nexport default FieldsMapping;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\n\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\n\nimport { getSelectionRange, getStartSelection } from \"../Emulator/controler\";\n\nconst MARK_1 = \"mark-1\";\nconst MARK_3 = \"mark-3\";\n\nexport class ListMapping extends Emulator {\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n\n    this.markAllCheckString(this.props.highlight);\n\n    const { onDoubleClick, onMouseUp } = this.props;\n\n    this.onSelect();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  onMouseUp = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.mouseup(event => {\n      // console.log(`| ========== ${event.type} ========== | `);\n      callbackFn(event);\n      this.clearAllMarkChackString(id);\n    });\n  };\n\n  onDoubleClick = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.dblclick(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n\n      callbackFn(event);\n    });\n  };\n\n  onSelect = () => {\n    const { id, colSize } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.select(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      const start = event.target.selectionStart;\n      const end = event.target.selectionEnd;\n      const startPosition = getStartSelection(id, colSize);\n\n      const data = {\n        text: getSelectionRange(id, start, end),\n        row: startPosition.row,\n        col: startPosition.col\n      };\n\n      this.setState({\n        lastSelection: {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        }\n      });\n\n      if (data.text.length < colSize) {\n        this.markStringChackString(MARK_3, data);\n      } else if (data.col === 1 && data.text.length >= colSize) {\n        this.markStringChackString(MARK_1, data);\n      }\n    });\n  };\n\n  /**\n   * ==================\n   *  provide function\n   * ==================\n   */\n  getListHighlight = () => {\n    const markType = MARK_1;\n    return this.state.markList[markType.replace(\"-\", \"\")];\n  };\n\n  setListHighlight = highlight => {\n    this.markStringChackString(MARK_1, highlight);\n  };\n\n  clearListHighlight = () => {\n    return this.clearMarkString(MARK_1);\n  };\n\n  getFieldHighlight = () => {\n    return this.state.markList[MARK_3.replace(\"-\", \"\")];\n  };\n\n  setFieldHighlight = highlight => {\n    this.markStringChackString(MARK_3, highlight);\n  };\n\n  clearFieldHighlight = () => {\n    return this.clearMarkString(MARK_3);\n  };\n\n  getLastSelection = () => {\n    return this.state.lastSelection;\n  };\n\n  render() {\n    const { id } = this.props;\n    return <EmulatorView id={id} readOnly />;\n  }\n\n  // Set default props\n  static defaultProps = {\n    highlight: {}\n  };\n}\n\nListMapping.propTypes = {\n  highlightList: PropTypes.object,\n  onDoubleClick: PropTypes.func,\n  onMouseUp: PropTypes.func\n};\n\nexport default ListMapping;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\n\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\n\nimport {\n  getIndexByRowCol,\n  getSelectionRange,\n  setSelectionRange,\n  getStartSelection,\n  getEndSelection\n} from \"../Emulator/controler\";\n\nexport class ScreenMapping extends Emulator {\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n\n    this.markAllCheckString(this.props.highlight);\n\n    const { onDoubleClick, onMouseUp } = this.props;\n\n    this.onSelect();\n    this.onKeyDown();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  onMouseUp = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.mouseup(event => {\n      // console.log(`| ========== ${event.type} ========== | `);\n      callbackFn(event);\n      this.clearAllMarkChackString(id);\n    });\n  };\n\n  onKeyDown = () => {\n    const { id, colSize } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.keydown(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      const startSelection = getStartSelection(id, colSize);\n      const endSelection = getEndSelection(id, colSize);\n\n      const flag = \"field\";\n      // const flag = 'list';\n      if (flag === \"list\") {\n        const selectionStart = getIndexByRowCol(startSelection.row, 0) + 1;\n        const selectionEnd = getIndexByRowCol(endSelection.row, colSize) + 2;\n\n        setSelectionRange(id, selectionStart, selectionEnd);\n      }\n    });\n  };\n\n  onDoubleClick = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.dblclick(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      callbackFn(event);\n    });\n  };\n\n  onSelect = () => {\n    const { id, colSize } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.select(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      const start = event.target.selectionStart;\n      const end = event.target.selectionEnd;\n      const startPosition = getStartSelection(id, colSize);\n\n      this.setState({\n        lastSelection: {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        }\n      });\n    });\n  };\n\n  /**\n   * ==================\n   *  provide function\n   * ==================\n   */\n  getHighlight = markType => {\n    return this.state.markList[markType.replace(\"-\", \"\")];\n  };\n\n  setHighlight = (markType, highlight) => {\n    this.markStringChackString(markType, highlight);\n  };\n\n  clearHighlight = markType => {\n    return this.clearMarkString(markType);\n  };\n\n  getHighlightList = () => {\n    return this.state.markList;\n  };\n\n  setHighlightList = highlightList => {\n    this.markAllCheckString(highlightList);\n  };\n\n  clearHighlightList = () => {\n    this.clearAllMarkChackString(this.props.id);\n  };\n\n  getLastSelection = () => {\n    return this.state.lastSelection;\n  };\n\n  render() {\n    const { id, readOnly } = this.props;\n    return <EmulatorView id={id} readOnly={readOnly} />;\n  }\n\n  // Set default props\n  static defaultProps = {\n    highlight: {}\n  };\n}\n\nScreenMapping.propTypes = {\n  highlightList: PropTypes.object,\n  onDoubleClick: PropTypes.func,\n  onMouseUp: PropTypes.func\n};\n\nexport default ScreenMapping;\n","import Emulator from \"./components/Emulator\";\nimport FieldsMapping from \"./components/FieldsMapping\";\nimport ListMapping from \"./components/ListMapping\";\nimport ScreenMapping from \"./components/ScreenMapping\";\n\nexport default [Emulator, FieldsMapping, ListMapping, ScreenMapping];\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}