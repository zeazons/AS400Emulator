{"version":3,"sources":["components/Emulator/EmulatorView.jsx","components/Emulator/controler.js","components/Emulator/index.jsx","pages/Emulator/index.jsx","components/ScreenMapping/index.jsx","pages/ScreenMapping/index.jsx","components/FieldsMapping/index.jsx","pages/FieldsMapping/index.jsx","components/ListMapping/index.jsx","pages/ListMapping/index.jsx","App.js","serviceWorker.js","index.js"],"names":["EmulatorView","props","id","readOnly","className","getHighlightDefault","rowSize","colSize","textHighlight","i","j","getIndexByRowCol","row","setSelectionRange","elStr","selectionStart","selectionEnd","elScreen","$","start","end","createTextRange","range","collapse","moveEnd","moveStart","select","getAS400Cursor","posStr","posArr","split","parseInt","col","getRowNumberByIndex","index","val","substr","length","getColNumberByIndex","getStartSelection","startIndex","prop","getEndSelection","endIndex","getSelectionRange","substring","setAs400Screen","data","setAs400Style","text","styleParams","elStyle","style","textStyle","character","styleCharacter","isEmptyObject","replace","toLowerCase","html","setAS400Cursor","pos","markAllCheckStringOnScreen","markListData","elHighlight","innerHTML","_","isEmpty","mark1","mark2","mark3","Emulator","markAllCheckString","state","clearAllMarkChackString","setState","markList","markStringChackString","markType","highlight","newMarkList","clearMarkString","highlightList","lastSelection","rows","cols","this","cursor","attr","elScreenTemp","initScreen","Component","defaultProps","Date","getTime","screen","Text","Style","Cursor","DemoEmulator","ScreenMapping","onMouseUp","callbackFn","mouseup","event","onKeyDown","keydown","onDoubleClick","dblclick","onSelect","target","startPosition","getHighlight","setHighlight","clearHighlight","getHighlightList","setHighlightList","clearHighlightList","getLastSelection","args","apply","propTypes","PropTypes","object","func","onDblClickHandler","eventKey","key","keyCode","selected","dataForApi","HEADER","tokenId","requestId","deviceId","DATA","Event","KeyValue","Axios","method","url","JSON","stringify","headers","then","response","fields","Fields","selection","forEach","f","Math","abs","EndRow","StartRow","StartCol","EndCol","catch","console","log","onMouseUpHandler","preventDefault","ScreenMappingPage","smRef","React","createRef","ref","onClick","current","MARK_1","FieldsMapping","getFieldHighlight","setFieldHighlight","clearFieldHighlight","FieldsMappingPage","MARK_3","ListMapping","getListHighlight","setListHighlight","clearListHighlight","startSelection","endSelection","ListMappingPage","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f68ed3d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst EmulatorView = props => {\n  const { id, readOnly } = props;\n\n  return (\n    <div className=\"as400-container\">\n      <div className=\"screen\">\n        <div className={`${id} as400-highlight`}></div>\n        <div className={`${id} as400-style`}></div>\n        <textarea\n          readOnly={readOnly ? readOnly : false}\n          className={`${id} as400-screen`}\n        ></textarea>\n        <textarea\n          readOnly={readOnly ? readOnly : false}\n          className={`${id} as400-screen-temp`}\n        ></textarea>\n      </div>\n    </div>\n  );\n};\n\nexport default EmulatorView;\n","import $ from \"jquery\";\nimport _ from \"lodash\";\n\nexport const getHighlightDefault = (rowSize, colSize) => {\n  let textHighlight = \"\";\n  for (let i = 0; i < rowSize; i += 1) {\n    for (let j = 0; j < colSize; j += 1) {\n      textHighlight += \".\";\n    }\n    textHighlight += \"\\n\";\n  }\n  return textHighlight;\n};\n\nexport const getIndexByRowCol = (row, colSize) =>\n  (row - 1) * 80 + colSize + row - 2;\n\nexport const setSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`)[0];\n\n  let start = selectionStart;\n  let end = selectionEnd;\n\n  start -= 1;\n  end -= 1;\n\n  // elScreen.focus();\n  if (elScreen.setSelectionRange) {\n    elScreen.setSelectionRange(start, end);\n  } else if (elScreen.createTextRange) {\n    const range = elScreen.createTextRange();\n    range.collapse(true);\n    range.moveEnd(\"character\", end);\n    range.moveStart(\"character\", start);\n    range.select();\n  }\n};\n\n// const clearHighlight = (elStr, markType) => {\n//   const elHighlight = $(`.${elStr}.as400-highlight`);\n//   let newHighlight = elHighlight.html();\n\n//   newHighlight = newHighlight\n//     .replace(`<as400-${markType}>`, \"\")\n//     .replace(`</as400-${markType}>`, \"\");\n\n//   elHighlight.html(newHighlight);\n// };\n\nexport const getAS400Cursor = posStr => {\n  const posArr = posStr.split(\",\");\n\n  return {\n    row: parseInt(posArr[0]),\n    col: parseInt(posArr[1])\n  };\n};\n\n// const convertRowColNumber = posStr => {\n//   const posArr = posStr.trim().split(\",\");\n//   return {\n//     row: posArr[0],\n//     col: posArr[1]\n//   };\n// };\n\nconst getRowNumberByIndex = (elStr, index) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  return (\n    elScreen\n    .val()\n    .substr(0, index)\n    .split(\"\\n\").length - 1\n  );\n};\n\nconst getColNumberByIndex = (elStr, index, colSize) => {\n  const row = getRowNumberByIndex(elStr, index);\n  const col = (index - row) % colSize;\n\n  if (index === colSize * (row + 1) + row) {\n    return colSize;\n  }\n  return col;\n};\n\nexport const setIndexByRowCol = (elStr, row, col) => {\n  const index = getIndexByRowCol(row, col);\n  setSelectionRange(elStr, index, index);\n};\n\nexport const getStartSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const startIndex = elScreen.prop(\"selectionStart\");\n\n  const rowSelectionStartIndex = getRowNumberByIndex(elStr, startIndex) + 1;\n  const colSelectionStartIndex =\n    getColNumberByIndex(elStr, startIndex, colSize) + 1;\n\n  return {\n    row: rowSelectionStartIndex,\n    col: colSelectionStartIndex\n  };\n};\n\nexport const getEndSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const endIndex = elScreen.prop(\"selectionEnd\");\n  const rowSelectionEndIndex = getRowNumberByIndex(elStr, endIndex) + 1;\n  const colSelectionEndIndex =\n    getColNumberByIndex(elStr, endIndex, colSize) + 1;\n\n  return {\n    row: rowSelectionEndIndex,\n    col: colSelectionEndIndex\n  };\n};\n\nexport const getSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n\n  if (selectionStart !== selectionEnd) {\n    const selection = elScreen.val().substring(selectionStart, selectionEnd);\n    return selection;\n  }\n  return \"\";\n};\n\nexport const initScreen = (elStr, rowSize, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.attr(\"rows\", rowSize);\n  elScreen.attr(\"cols\", colSize);\n\n  const elScreenTemp = $(`.${elStr}.as400-screen-temp`);\n  elScreenTemp.attr(\"rows\", rowSize);\n  elScreenTemp.attr(\"cols\", colSize);\n\n  const elStyle = $(`.${elStr}.as400-style`);\n  elStyle.attr(\"rows\", rowSize);\n  elStyle.attr(\"cols\", colSize);\n\n  const elHighlight = $(`.${elStr}.as400-highlight`);\n  elHighlight.html(getHighlightDefault(rowSize, colSize));\n};\n\nexport const setAs400Screen = (elStr, data) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.val(data);\n};\n\nexport const setAs400Style = (elStr, text, styleParams) => {\n  const elStyle = $(`.${elStr}.as400-style`);\n\n  let style = styleParams;\n\n  let textStyle = \"\";\n  for (let i = 0; i < text.length; i += 1) {\n    const character = text[i];\n    const styleCharacter = style[i];\n\n    if (styleCharacter !== \".\" && !$.isEmptyObject(styleCharacter)) {\n      textStyle += character.replace(\n        character,\n        `<as400-${styleCharacter.toLowerCase()}-style>$&</as400-${styleCharacter.toLowerCase()}-style>`\n      );\n    } else {\n      textStyle += character;\n    }\n  }\n\n  $(elStyle).html(textStyle);\n};\n\nexport const setAS400Cursor = (elStr, data) => {\n  const pos = getAS400Cursor(data);\n\n  const index = getIndexByRowCol(pos.row, pos.col);\n\n  setSelectionRange(elStr, index, index);\n};\n\nexport const markAllCheckStringOnScreen = (id, markListData) => {\n  const elHighlight = $(`.${id}.as400-highlight`);\n  const text = elHighlight[0].innerHTML;\n  let textHighlight = \"\";\n\n  for (let i = 0; i < text.length; i += 1) {\n    if (\n      !_.isEmpty(markListData.mark1) &&\n      i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col)\n    ) {\n      if (markListData.mark1.text.length < 2) {\n        textHighlight += `<as400-mark-1>${text[i]}</as400-mark-1>`;\n      } else {\n        textHighlight += `<as400-mark-1>${text[i]}`;\n      }\n    } else if (\n      !_.isEmpty(markListData.mark1) &&\n      i ===\n      getIndexByRowCol(markListData.mark1.row, markListData.mark1.col) +\n      markListData.mark1.text.length -\n      1\n    ) {\n      textHighlight += `${text[i]}</as400-mark-1>`;\n    } else if (\n      !_.isEmpty(markListData.mark2) &&\n      i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col)\n    ) {\n      if (markListData.mark2.text.length < 2) {\n        textHighlight += `<as400-mark-2>${text[i]}</as400-mark-2>`;\n      } else {\n        textHighlight += `<as400-mark-2>${text[i]}`;\n      }\n    } else if (\n      !_.isEmpty(markListData.mark2) &&\n      i ===\n      getIndexByRowCol(markListData.mark2.row, markListData.mark2.col) +\n      markListData.mark2.text.length -\n      1\n    ) {\n      textHighlight += `${text[i]}</as400-mark-2>`;\n    } else if (\n      !_.isEmpty(markListData.mark3) &&\n      i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col)\n    ) {\n      if (markListData.mark3.text.length < 2) {\n        textHighlight += `<as400-mark-3>${text[i]}</as400-mark-3>`;\n      } else {\n        textHighlight += `<as400-mark-3>${text[i]}`;\n      }\n    } else if (\n      !_.isEmpty(markListData.mark3) &&\n      i ===\n      getIndexByRowCol(markListData.mark3.row, markListData.mark3.col) +\n      markListData.mark3.text.length -\n      1\n    ) {\n      textHighlight += `${text[i]}</as400-mark-3>`;\n    } else {\n      textHighlight += text[i];\n    }\n  }\n\n  elHighlight.html(textHighlight);\n};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\n\nimport EmulatorView from \"./EmulatorView\";\nimport {\n  initScreen,\n  setAs400Screen,\n  setAs400Style,\n  setAS400Cursor,\n  markAllCheckStringOnScreen,\n  getHighlightDefault\n} from \"./controler\";\n\nimport \"./css/style.css\";\n\nclass Emulator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList,\n      lastSelection: {\n        startIndex: 0,\n        endIndex: 0\n      },\n      rowSize: props.rows,\n      colSize: props.cols\n    };\n  }\n\n  componentDidMount() {\n    const { id, rows, cols, text, style, cursor } = this.props;\n\n    initScreen(id, rows, cols);\n    setAs400Screen(id, text);\n    setAs400Style(id, text, style);\n    setAS400Cursor(id, cursor);\n  }\n\n  markAllCheckString = markListData => {\n    const { id } = this.state;\n    this.clearAllMarkChackString(id);\n    this.setState({\n      markList: markListData\n    });\n\n    markAllCheckStringOnScreen(id, markListData);\n  };\n\n  clearAllMarkChackString = elStr => {\n    const { rowSize, colSize } = this.state;\n    const elHighlight = $(`.${elStr}.as400-highlight`);\n    elHighlight.html(getHighlightDefault(rowSize, colSize));\n\n    this.setState({\n      markList: {}\n    });\n  };\n\n  markStringChackString = (markType, highlight) => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: highlight\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  clearMarkString = markType => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n    const markData = {};\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: markData\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  render() {\n    const { id, readOnly } = this.props;\n    return <EmulatorView id={id} readOnly={readOnly} />;\n  }\n\n  // Set default props\n  static defaultProps = {\n    id: new Date().getTime(),\n    rows: 24,\n    cols: 80,\n    text:\n      \"                                                                                \\n                                                                            \\n                                                                            \\n                                                                            \\n                                                                            \\n================================================================================\\n********************************************************************************\\n================================================================================\\n                                                                                \\n  ######  ##       ##  ##    ##  ##      ########  ########  ########  #######  \\n  ##      ###     ###  ##    ##  ##      ##    ##     ##     ##    ##  ##   ##  \\n  ######  ####   ####  ##    ##  ##      ########     ##     ##    ##  #######  \\n  ##      ## ## ## ##  ##    ##  ##      ##    ##     ##     ##    ##  ##  ##   \\n  ######  ##  ###  ##  ########  ######  ##    ##     ##     ########  ##   ##  \\n                                                                                \\n================================================================================\\n********************************************************************************\\n================================================================================\\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \",\n    style:\n      \"................................................................................\\n............................................................................\\n............................................................................\\n............................................................................\\n............................................................................\\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\\n................................................................................\\n  GGGGGG  GG       GG  GG    GG  GG      GGGGGGGG  GGGGGGGG  GGGGGGGG  GGGGGGG  \\n  GG      GGG     GGG  GG    GG  GG      GG    GG     GG     GG    GG  GG   GG  \\n  GGGGGG  GGGG   GGGG  GG    GG  GG      GGGGGGGG     GG     GG    GG  GGGGGGG  \\n  GG      GG GG GG GG  GG    GG  GG      GG    GG     GG     GG    GG  GG  GG   \\n  GGGGGG  GG  GGG  GG  GGGGGGGG  GGGGGG  GG    GG     GG     GGGGGGGG  GG   GG  \\n................................................................................\\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\\n................................................................................\\n................................................................................\\n................................................................................\\n.................................................................................\",\n    cursor: \"0,0\",\n    readOnly: false\n  };\n}\n\nEmulator.propTypes = {\n  id: PropTypes.string,\n  rows: PropTypes.number,\n  cols: PropTypes.number,\n  text: PropTypes.string,\n  style: PropTypes.string,\n  cursor: PropTypes.string,\n  readOnly: PropTypes.bool\n};\n\nexport default Emulator;\n","import React, { Component } from \"react\";\nimport Emulator from \"../../components/Emulator\";\n\nconst data = {\n  HEADER: {\n    tokenId: \"EWI112233445566\",\n    requestId: \"ABC123456789\",\n    deviceId: \"UUID9988776655\"\n  },\n  DATA: {\n    screen: { rows: 24, cols: 80 },\n    Text:\n      \"                                   Sign On                                      \\n                                               System  . . . . . :   S101CD3M   \\n                                               Subsystem . . . . :   QINTER     \\n                                               Display . . . . . :   QPADEV003R \\n                                                                                \\n                User  . . . . . . . . . . . . . .                               \\n                Password  . . . . . . . . . . . .                               \\n                Program/procedure . . . . . . . .                               \\n                Menu  . . . . . . . . . . . . . .                               \\n                Current library . . . . . . . . .                               \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                        (C) COPYRIGHT IBM CORP. 1980, 2005.     \",\n    Style:\n      \".................................RRRRRRRRRRRRR..................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n.........................................................UUUUUUUUUU.............\\n.........................................................HHHHHHHHHH.............\\n.........................................................UUUUUUUUUU.............\\n.........................................................UUUUUUUUUU.............\\n.........................................................UUUUUUUUUU.............\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\",\n    Cursor: \"5,53\"\n  }\n};\n\nconst id = \"flow\";\nconst { rows, cols } = data.DATA.screen;\nconst { Text: text, Style: style, Cursor: cursor } = data.DATA;\n\nclass DemoEmulator extends Component {\n  render() {\n    return (\n      <Emulator\n        id={id}\n        rows={rows}\n        cols={cols}\n        text={text}\n        style={style}\n        cursor={cursor}\n        // readOnly\n      />\n    );\n  }\n}\nexport default DemoEmulator;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\n\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\n\nimport {\n  getIndexByRowCol,\n  getSelectionRange,\n  setSelectionRange,\n  getStartSelection,\n  getEndSelection\n} from \"../Emulator/controler\";\n\nexport class ScreenMapping extends Emulator {\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n\n    this.markAllCheckString(this.props.highlight);\n\n    const { onDoubleClick, onMouseUp } = this.props;\n\n    this.onSelect();\n    this.onKeyDown();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  onMouseUp = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.mouseup(event => {\n      // console.log(`| ========== ${event.type} ========== | `);\n      callbackFn(event);\n      this.clearAllMarkChackString(id);\n    });\n  };\n\n  onKeyDown = () => {\n    const { id, colSize } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.keydown(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      const startSelection = getStartSelection(id, colSize);\n      const endSelection = getEndSelection(id, colSize);\n\n      const flag = \"field\";\n      // const flag = 'list';\n      if (flag === \"list\") {\n        const selectionStart = getIndexByRowCol(startSelection.row, 0) + 1;\n        const selectionEnd = getIndexByRowCol(endSelection.row, colSize) + 2;\n\n        setSelectionRange(id, selectionStart, selectionEnd);\n      }\n    });\n  };\n\n  onDoubleClick = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.dblclick(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      callbackFn(event);\n    });\n  };\n\n  onSelect = () => {\n    const { id, colSize } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.select(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      const start = event.target.selectionStart;\n      const end = event.target.selectionEnd;\n      const startPosition = getStartSelection(id, colSize);\n\n      this.setState({\n        lastSelection: {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        }\n      });\n    });\n  };\n\n  /**\n   * ==================\n   *  provide function\n   * ==================\n   */\n  getHighlight = markType => {\n    return this.state.markList[markType.replace(\"-\", \"\")];\n  };\n\n  setHighlight = (markType, highlight) => {\n    this.markStringChackString(markType, highlight);\n  };\n\n  clearHighlight = markType => {\n    return this.clearMarkString(markType);\n  };\n\n  getHighlightList = () => {\n    return this.state.markList;\n  };\n\n  setHighlightList = highlightList => {\n    this.markAllCheckString(highlightList);\n  };\n\n  clearHighlightList = () => {\n    this.clearAllMarkChackString(this.props.id);\n  };\n\n  getLastSelection = () => {\n    return this.state.lastSelection;\n  };\n\n  render() {\n    const { id, readOnly } = this.props;\n    return <EmulatorView id={id} readOnly={readOnly} />;\n  }\n\n  // Set default props\n  static defaultProps = {\n    highlight: {}\n  };\n}\n\nScreenMapping.propTypes = {\n  highlightList: PropTypes.object,\n  onDoubleClick: PropTypes.func,\n  onMouseUp: PropTypes.func\n};\n\nexport default ScreenMapping;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\n\nimport ScreenMapping from \"../../components/ScreenMapping\";\n\nimport {\n  setAs400Screen,\n  setAs400Style,\n  getAS400Cursor,\n  setAS400Cursor,\n  getIndexByRowCol,\n  setSelectionRange,\n  getStartSelection\n} from \"../../components/Emulator/controler\";\n\nconst data = {\n  HEADER: {\n    tokenId: \"EWI112233445566\",\n    requestId: \"ABC123456789\",\n    deviceId: \"UUID9988776655\"\n  },\n  DATA: {\n    screen: { rows: 24, cols: 80 },\n    Text:\n      \"                                   Sign On                                      \\n                                               System  . . . . . :   S101CD3M   \\n                                               Subsystem . . . . :   QINTER     \\n                                               Display . . . . . :   QPADEV003R \\n                                                                                \\n                User  . . . . . . . . . . . . . .                               \\n                Password  . . . . . . . . . . . .                               \\n                Program/procedure . . . . . . . .                               \\n                Menu  . . . . . . . . . . . . . .                               \\n                Current library . . . . . . . . .                               \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                        (C) COPYRIGHT IBM CORP. 1980, 2005.     \",\n    Style:\n      \".................................RRRRRRRRRRRRR..................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n.........................................................UUUUUUUUUU.............\\n.........................................................HHHHHHHHHH.............\\n.........................................................UUUUUUUUUU.............\\n.........................................................UUUUUUUUUU.............\\n.........................................................UUUUUUUUUU.............\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\",\n    Cursor: \"5,53\"\n  }\n};\n\nconst id = \"flow2\";\nconst { rows, cols } = data.DATA.screen;\nconst { Text: text, Style: style, Cursor: cursor } = data.DATA;\nconst highlightList = {\n  mark1: {\n    text: \"Sign On\",\n    row: 1,\n    col: 36\n  },\n  mark2: {\n    text: \"User\",\n    row: 6,\n    col: 17\n  },\n  mark3: {\n    text: \"(C) COPYRIGHT IBM CORP. 1980, 2005.\",\n    row: 24,\n    col: 41\n  }\n};\n\nconst MARK1 = \"mark-1\";\nconst MARK2 = \"mark-2\";\nconst MARK3 = \"mark-3\";\n\nconst onDblClickHandler = event => {\n  // console.log(`| ========== ${event.type} ========== |`);\n  let eventKey = event.key;\n  if (event.keyCode >= 8 && event.keyCode < 48) {\n    eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n  }\n  const selected = getStartSelection(id, cols);\n  const dataForApi = {\n    HEADER: {\n      tokenId: \"EWI112233445566\",\n      requestId: \"ABC123456789\",\n      deviceId: \"UUID9988776655\"\n      // requestCount: this.resultCount\n    },\n    DATA: {\n      Event: \"SELECTION\",\n      KeyValue: eventKey,\n      Cursor: `${selected.row},${selected.col}`\n    }\n  };\n\n  Axios({\n    method: \"post\",\n    url: \"http://localhost:8085/emulator\",\n    data: JSON.stringify(dataForApi),\n    headers: { \"Content-Type\": \"application/json\" }\n  })\n    .then(response => {\n      // handle success\n      const data = response.data.DATA;\n\n      setAs400Screen(id, data.Text);\n      setAs400Style(id, data.Text, data.Style);\n      setAS400Cursor(id, data.Cursor);\n\n      const fields = data.Fields;\n      let selection = null;\n\n      const index = getAS400Cursor(data.Cursor);\n      fields.forEach(f => {\n        if (Math.abs(f.EndRow - f.StartRow) === 0) {\n          if (\n            index.col >= f.StartCol &&\n            index.col <= f.EndCol &&\n            f.StartRow === index.row\n          ) {\n            selection = f;\n          }\n        }\n      });\n\n      const selectionStart = getIndexByRowCol(\n        selection.StartRow,\n        selection.StartCol\n      );\n      const selectionEnd = getIndexByRowCol(selection.EndRow, selection.EndCol);\n\n      setSelectionRange(id, selectionStart, selectionEnd);\n    })\n    .catch(response => {\n      // handle error\n      console.log(`response: ${response}`);\n    });\n};\n\nconst onMouseUpHandler = event => {\n  // console.log(`| ========== ${event.type} ========== | `);\n  if (event.keyCode === 9 || (event.keyCode > 111 && event.keyCode !== 123)) {\n    event.preventDefault();\n  }\n\n  let eventKey = event.key;\n  const selected = getStartSelection(id, cols);\n  if (event.keyCode >= 8 && event.keyCode < 48) {\n    eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n  }\n  const dataForApi = {\n    HEADER: {\n      tokenId: \"EWI112233445566\",\n      requestId: \"ABC123456789\",\n      deviceId: \"UUID9988776655\"\n      // requestCount: this.resultCount\n    },\n    DATA: {\n      Event: \"KEYDOWN\",\n      KeyValue: eventKey,\n      Cursor: `${selected.row},${selected.col}`\n    }\n  };\n\n  Axios({\n    method: \"post\",\n    url: \"http://localhost:8085/emulator\",\n    data: JSON.stringify(dataForApi),\n    headers: { \"Content-Type\": \"application/json\" }\n  })\n    .then(response => {\n      // handle success\n      const data = response.data.DATA;\n\n      setAs400Screen(id, data.Text);\n      setAs400Style(id, data.Text, data.Style);\n      setAS400Cursor(id, data.Cursor);\n\n      // this.clearAllMarkChackString(id);\n    })\n    .catch(response => {\n      // handle error\n      console.log(`response: ${response}`);\n    });\n};\n\nclass ScreenMappingPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.smRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <div>\n        <ScreenMapping\n          id={id}\n          ref={this.smRef}\n          rows={rows}\n          cols={cols}\n          text={text}\n          style={style}\n          cursor={cursor}\n          highlight={highlightList}\n          onDoubleClick={onDblClickHandler}\n          onMouseUp={onMouseUpHandler}\n        />\n        <button\n          onClick={() => this.smRef.current.setHighlightList(highlightList)}\n        >\n          highlight list\n        </button>\n        <button\n          onClick={() => {\n            console.log(this.smRef.current.getHighlightList());\n          }}\n        >\n          get mark list\n        </button>\n        <button onClick={() => this.smRef.current.clearHighlightList()}>\n          clear mark list\n        </button>\n        <br />\n        <button\n          onClick={() => {\n            const highlight = this.smRef.current.getLastSelection();\n            this.smRef.current.setHighlight(MARK1, highlight);\n          }}\n        >\n          mark 1\n        </button>\n        <button\n          onClick={() => {\n            console.log(this.smRef.current.getHighlight(MARK1));\n          }}\n        >\n          get mark 1\n        </button>\n        <button\n          onClick={() => {\n            this.smRef.current.clearHighlight(MARK1);\n          }}\n        >\n          clear mark 1\n        </button>\n        <br />\n        <button\n          onClick={() => {\n            const highlight = this.smRef.current.getLastSelection();\n            this.smRef.current.setHighlight(MARK2, highlight);\n          }}\n        >\n          mark 2\n        </button>\n        <button\n          onClick={() => {\n            console.log(this.smRef.current.getHighlight(MARK2));\n          }}\n        >\n          get mark 2\n        </button>\n        <button\n          onClick={() => {\n            this.smRef.current.clearHighlight(MARK2);\n          }}\n        >\n          clear mark 2\n        </button>\n        <br />\n        <button\n          onClick={() => {\n            const highlight = this.smRef.current.getLastSelection();\n            this.smRef.current.setHighlight(MARK3, highlight);\n          }}\n        >\n          mark 3\n        </button>\n        <button\n          onClick={() => {\n            console.log(this.smRef.current.getHighlight(MARK3));\n          }}\n        >\n          get mark 3\n        </button>\n        <button\n          onClick={() => {\n            this.smRef.current.clearHighlight(MARK3);\n          }}\n        >\n          clear mark 3\n        </button>\n      </div>\n    );\n  }\n}\nexport default ScreenMappingPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\n\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\n\nimport { getSelectionRange, getStartSelection } from \"../Emulator/controler\";\n\nconst MARK_1 = \"mark-1\";\n\nexport class FieldsMapping extends Emulator {\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n\n    this.markAllCheckString(this.props.highlight);\n\n    const { onDoubleClick, onMouseUp } = this.props;\n\n    this.onSelect();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  onMouseUp = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.mouseup(event => {\n      // console.log(`| ========== ${event.type} ========== | `);\n      callbackFn(event);\n      this.clearAllMarkChackString(id);\n    });\n  };\n\n  onDoubleClick = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.dblclick(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n\n      callbackFn(event);\n    });\n  };\n\n  onSelect = () => {\n    const { id, colSize } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.select(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      const start = event.target.selectionStart;\n      const end = event.target.selectionEnd;\n      const startPosition = getStartSelection(id, colSize);\n\n      const data = {\n        text: getSelectionRange(id, start, end),\n        row: startPosition.row,\n        col: startPosition.col\n      };\n\n      this.setState({\n        lastSelection: {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        }\n      });\n\n      this.markStringChackString(MARK_1, data);\n    });\n  };\n\n  /**\n   * ==================\n   *  provide function\n   * ==================\n   */\n  getFieldHighlight = () => {\n    return this.state.markList[MARK_1.replace(\"-\", \"\")];\n  };\n\n  setFieldHighlight = highlight => {\n    this.markStringChackString(MARK_1, highlight);\n  };\n\n  clearFieldHighlight = () => {\n    return this.clearMarkString(MARK_1);\n  };\n\n  getLastSelection = () => {\n    return this.state.lastSelection;\n  };\n\n  render() {\n    const { id } = this.props;\n    return <EmulatorView id={id} readOnly />;\n  }\n\n  // Set default props\n  static defaultProps = {\n    highlight: {}\n  };\n}\n\nFieldsMapping.propTypes = {\n  highlightList: PropTypes.object,\n  onDoubleClick: PropTypes.func,\n  onMouseUp: PropTypes.func\n};\n\nexport default FieldsMapping;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\n\nimport FieldsMapping from \"../../components/FieldsMapping\";\n\nimport {\n  setAs400Screen,\n  setAs400Style,\n  getAS400Cursor,\n  setAS400Cursor,\n  getIndexByRowCol,\n  setSelectionRange,\n  getStartSelection,\n  getEndSelection\n} from \"../../components/Emulator/controler\";\n\nconst data = {\n  HEADER: {\n    tokenId: \"EWI112233445566\",\n    requestId: \"ABC123456789\",\n    deviceId: \"UUID9988776655\"\n  },\n  DATA: {\n    screen: { rows: 24, cols: 80 },\n    Text:\n      \"                                   Sign On                                      \\n                                               System  . . . . . :   S101CD3M   \\n                                               Subsystem . . . . :   QINTER     \\n                                               Display . . . . . :   QPADEV003R \\n                                                                                \\n                User  . . . . . . . . . . . . . .                               \\n                Password  . . . . . . . . . . . .                               \\n                Program/procedure . . . . . . . .                               \\n                Menu  . . . . . . . . . . . . . .                               \\n                Current library . . . . . . . . .                               \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                        (C) COPYRIGHT IBM CORP. 1980, 2005.     \",\n    Style:\n      \".................................RRRRRRRRRRRRR..................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n.........................................................UUUUUUUUUU.............\\n.........................................................HHHHHHHHHH.............\\n.........................................................UUUUUUUUUU.............\\n.........................................................UUUUUUUUUU.............\\n.........................................................UUUUUUUUUU.............\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\",\n    Cursor: \"5,53\"\n  }\n};\n\nconst id = \"flow3\";\nconst { rows, cols } = data.DATA.screen;\nconst { Text: text, Style: style, Cursor: cursor } = data.DATA;\nconst highlightList = {\n  mark1: { text: \"          \", row: 6, col: 58 }\n};\n\nconst onDblClickHandler = event => {\n  // console.log(`| ========== ${event.type} ========== |`);\n  let eventKey = event.key;\n  if (event.keyCode >= 8 && event.keyCode < 48) {\n    eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n  }\n  const selected = getStartSelection(id, cols);\n  const dataForApi = {\n    HEADER: {\n      tokenId: \"EWI112233445566\",\n      requestId: \"ABC123456789\",\n      deviceId: \"UUID9988776655\"\n      // requestCount: this.resultCount\n    },\n    DATA: {\n      Event: \"SELECTION\",\n      KeyValue: eventKey,\n      Cursor: `${selected.row},${selected.col}`\n    }\n  };\n\n  Axios({\n    method: \"post\",\n    url: \"http://localhost:8085/emulator\",\n    data: JSON.stringify(dataForApi),\n    headers: { \"Content-Type\": \"application/json\" }\n  })\n    .then(response => {\n      // handle success\n      const data = response.data.DATA;\n\n      setAs400Screen(id, data.Text);\n      setAs400Style(id, data.Text, data.Style);\n      setAS400Cursor(id, data.Cursor);\n\n      //    clearAllMarkChackString(id);\n\n      const fields = data.Fields;\n      let selection = null;\n\n      const index = getAS400Cursor(data.Cursor);\n      fields.forEach(f => {\n        if (Math.abs(f.EndRow - f.StartRow) === 0) {\n          if (\n            index.col >= f.StartCol &&\n            index.col <= f.EndCol &&\n            f.StartRow === index.row\n          ) {\n            selection = f;\n          }\n        }\n      });\n\n      const selectionStart = getIndexByRowCol(\n        selection.StartRow,\n        selection.StartCol\n      );\n      const selectionEnd = getIndexByRowCol(selection.EndRow, selection.EndCol);\n\n      setSelectionRange(id, selectionStart, selectionEnd);\n    })\n    .catch(response => {\n      // handle error\n      console.log(`response: ${response}`);\n    });\n};\n\nconst onMouseUpHandler = event => {\n  // console.log(`| ========== ${event.type} ========== | `);\n  if (event.keyCode === 9 || (event.keyCode > 111 && event.keyCode !== 123)) {\n    event.preventDefault();\n  }\n\n  let eventKey = event.key;\n  const selected = getStartSelection(id, cols);\n  if (event.keyCode >= 8 && event.keyCode < 48) {\n    eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n  }\n  const dataForApi = {\n    HEADER: {\n      tokenId: \"EWI112233445566\",\n      requestId: \"ABC123456789\",\n      deviceId: \"UUID9988776655\"\n      // requestCount: this.resultCount\n    },\n    DATA: {\n      Event: \"KEYDOWN\",\n      KeyValue: eventKey,\n      Cursor: `${selected.row},${selected.col}`\n    }\n  };\n\n  Axios({\n    method: \"post\",\n    url: \"http://localhost:8085/emulator\",\n    data: JSON.stringify(dataForApi),\n    headers: { \"Content-Type\": \"application/json\" }\n  })\n    .then(response => {\n      // console.log(`| ========== ${event.type} ========== | `);\n      const startSelection = getStartSelection(id, cols);\n      const endSelection = getEndSelection(id, cols);\n\n      const flag = \"field\";\n      // const flag = 'list';\n      if (flag === \"list\") {\n        const selectionStart = getIndexByRowCol(startSelection.row, 0) + 1;\n        const selectionEnd = getIndexByRowCol(endSelection.row, cols) + 2;\n\n        setSelectionRange(id, selectionStart, selectionEnd);\n      }\n    })\n    .catch(response => {\n      // handle error\n      console.log(`response: ${response}`);\n    });\n};\n\nclass FieldsMappingPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.smRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <div>\n        <FieldsMapping\n          id={id}\n          ref={this.smRef}\n          rows={rows}\n          cols={cols}\n          text={text}\n          style={style}\n          cursor={cursor}\n          highlight={highlightList}\n          onDoubleClick={onDblClickHandler}\n          onMouseUp={onMouseUpHandler}\n        />\n\n        <button\n          onClick={() => {\n            console.log(this.smRef.current.getFieldHighlight());\n          }}\n        >\n          get field marker\n        </button>\n        <button\n          onClick={() => {\n            this.smRef.current.clearFieldHighlight();\n          }}\n        >\n          clear field marker\n        </button>\n      </div>\n    );\n  }\n}\nexport default FieldsMappingPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\n\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\n\nimport { getSelectionRange, getStartSelection } from \"../Emulator/controler\";\n\nconst MARK_1 = \"mark-1\";\nconst MARK_3 = \"mark-3\";\n\nexport class ListMapping extends Emulator {\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n\n    this.markAllCheckString(this.props.highlight);\n\n    const { onDoubleClick, onMouseUp } = this.props;\n\n    this.onSelect();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  onMouseUp = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.mouseup(event => {\n      // console.log(`| ========== ${event.type} ========== | `);\n      callbackFn(event);\n      this.clearAllMarkChackString(id);\n    });\n  };\n\n  onDoubleClick = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.dblclick(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n\n      callbackFn(event);\n    });\n  };\n\n  onSelect = () => {\n    const { id, colSize } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.select(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      const start = event.target.selectionStart;\n      const end = event.target.selectionEnd;\n      const startPosition = getStartSelection(id, colSize);\n\n      const data = {\n        text: getSelectionRange(id, start, end),\n        row: startPosition.row,\n        col: startPosition.col\n      };\n\n      this.setState({\n        lastSelection: {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        }\n      });\n\n      if (data.text.length < colSize) {\n        this.markStringChackString(MARK_3, data);\n      } else if (data.col === 1 && data.text.length >= colSize) {\n        this.markStringChackString(MARK_1, data);\n      }\n    });\n  };\n\n  /**\n   * ==================\n   *  provide function\n   * ==================\n   */\n  getListHighlight = () => {\n    const markType = MARK_1;\n    return this.state.markList[markType.replace(\"-\", \"\")];\n  };\n\n  setListHighlight = highlight => {\n    this.markStringChackString(MARK_1, highlight);\n  };\n\n  clearListHighlight = () => {\n    return this.clearMarkString(MARK_1);\n  };\n\n  getFieldHighlight = () => {\n    return this.state.markList[MARK_3.replace(\"-\", \"\")];\n  };\n\n  setFieldHighlight = highlight => {\n    this.markStringChackString(MARK_3, highlight);\n  };\n\n  clearFieldHighlight = () => {\n    return this.clearMarkString(MARK_3);\n  };\n\n  getLastSelection = () => {\n    return this.state.lastSelection;\n  };\n\n  render() {\n    const { id } = this.props;\n    return <EmulatorView id={id} readOnly />;\n  }\n\n  // Set default props\n  static defaultProps = {\n    highlight: {}\n  };\n}\n\nListMapping.propTypes = {\n  highlightList: PropTypes.object,\n  onDoubleClick: PropTypes.func,\n  onMouseUp: PropTypes.func\n};\n\nexport default ListMapping;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\n\nimport ListMapping from \"../../components/ListMapping\";\n\nimport {\n  setAs400Screen,\n  setAs400Style,\n  getAS400Cursor,\n  setAS400Cursor,\n  getIndexByRowCol,\n  setSelectionRange,\n  getStartSelection,\n  getEndSelection\n} from \"../../components/Emulator/controler\";\n\nconst data = {\n  HEADER: {\n    tokenId: \"EWI112233445566\",\n    requestId: \"ABC123456789\",\n    deviceId: \"UUID9988776655\"\n  },\n  DATA: {\n    screen: { rows: 24, cols: 80 },\n    Text:\n      \"                                   Sign On                                      \\n                                               System  . . . . . :   S101CD3M   \\n                                               Subsystem . . . . :   QINTER     \\n                                               Display . . . . . :   QPADEV003R \\n                                                                                \\n                User  . . . . . . . . . . . . . .                               \\n                Password  . . . . . . . . . . . .                               \\n                Program/procedure . . . . . . . .                               \\n                Menu  . . . . . . . . . . . . . .                               \\n                Current library . . . . . . . . .                               \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                        (C) COPYRIGHT IBM CORP. 1980, 2005.     \",\n    Style:\n      \".................................RRRRRRRRRRRRR..................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n.........................................................UUUUUUUUUU.............\\n.........................................................HHHHHHHHHH.............\\n.........................................................UUUUUUUUUU.............\\n.........................................................UUUUUUUUUU.............\\n.........................................................UUUUUUUUUU.............\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\",\n    Cursor: \"5,53\"\n  }\n};\n\nconst id = \"flow4\";\nconst { rows, cols } = data.DATA.screen;\nconst { Text: text, Style: style, Cursor: cursor } = data.DATA;\nconst highlightList = {\n  mark1: { text: \"          \", row: 6, col: 58 }\n};\n\nconst onDblClickHandler = event => {\n  // console.log(`| ========== ${event.type} ========== |`);\n  let eventKey = event.key;\n  if (event.keyCode >= 8 && event.keyCode < 48) {\n    eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n  }\n  const selected = getStartSelection(id, cols);\n  const dataForApi = {\n    HEADER: {\n      tokenId: \"EWI112233445566\",\n      requestId: \"ABC123456789\",\n      deviceId: \"UUID9988776655\"\n      // requestCount: this.resultCount\n    },\n    DATA: {\n      Event: \"SELECTION\",\n      KeyValue: eventKey,\n      Cursor: `${selected.row},${selected.col}`\n    }\n  };\n\n  Axios({\n    method: \"post\",\n    url: \"http://localhost:8085/emulator\",\n    data: JSON.stringify(dataForApi),\n    headers: { \"Content-Type\": \"application/json\" }\n  })\n    .then(response => {\n      // handle success\n      const data = response.data.DATA;\n\n      setAs400Screen(id, data.Text);\n      setAs400Style(id, data.Text, data.Style);\n      setAS400Cursor(id, data.Cursor);\n\n      // clearAllMarkChackString(id);\n\n      const fields = data.Fields;\n      let selection = null;\n\n      const index = getAS400Cursor(data.Cursor);\n      fields.forEach(f => {\n        if (Math.abs(f.EndRow - f.StartRow) === 0) {\n          if (\n            index.col >= f.StartCol &&\n            index.col <= f.EndCol &&\n            f.StartRow === index.row\n          ) {\n            selection = f;\n          }\n        }\n      });\n\n      const selectionStart = getIndexByRowCol(\n        selection.StartRow,\n        selection.StartCol\n      );\n      const selectionEnd = getIndexByRowCol(selection.EndRow, selection.EndCol);\n\n      setSelectionRange(id, selectionStart, selectionEnd);\n    })\n    .catch(response => {\n      // handle error\n      console.log(`response: ${response}`);\n    });\n};\n\nconst onMouseUpHandler = event => {\n  // console.log(`| ========== ${event.type} ========== | `);\n  if (event.keyCode === 9 || (event.keyCode > 111 && event.keyCode !== 123)) {\n    event.preventDefault();\n  }\n\n  let eventKey = event.key;\n  const selected = getStartSelection(id, cols);\n  if (event.keyCode >= 8 && event.keyCode < 48) {\n    eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n  }\n  const dataForApi = {\n    HEADER: {\n      tokenId: \"EWI112233445566\",\n      requestId: \"ABC123456789\",\n      deviceId: \"UUID9988776655\"\n      // requestCount: this.resultCount\n    },\n    DATA: {\n      Event: \"KEYDOWN\",\n      KeyValue: eventKey,\n      Cursor: `${selected.row},${selected.col}`\n    }\n  };\n\n  Axios({\n    method: \"post\",\n    url: \"http://localhost:8085/emulator\",\n    data: JSON.stringify(dataForApi),\n    headers: { \"Content-Type\": \"application/json\" }\n  })\n    .then(response => {\n      // console.log(`| ========== ${event.type} ========== | `);\n      const startSelection = getStartSelection(id, cols);\n      const endSelection = getEndSelection(id, cols);\n\n      const selectionStart = getIndexByRowCol(startSelection.row, 0) + 2;\n      const selectionEnd = getIndexByRowCol(endSelection.row, cols) + 2;\n\n      setSelectionRange(id, selectionStart, selectionEnd);\n    })\n    .catch(response => {\n      // handle error\n      console.log(`response: ${response}`);\n    });\n};\n\nclass ListMappingPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.smRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <div>\n        <ListMapping\n          id={id}\n          ref={this.smRef}\n          rows={rows}\n          cols={cols}\n          text={text}\n          style={style}\n          cursor={cursor}\n          highlight={highlightList}\n          onDoubleClick={onDblClickHandler}\n          onMouseUp={onMouseUpHandler}\n        />\n\n        <button\n          onClick={() => {\n            console.log(this.smRef.current.getListHighlight());\n          }}\n        >\n          get list marker\n        </button>\n        <button\n          onClick={() => {\n            this.smRef.current.clearListHighlight();\n          }}\n        >\n          clear list marker\n        </button>\n        {/* \n        <button\n          onClick={() => {\n            const highlight = this.smRef.current.getLastSelection();\n            this.smRef.current.setFieldHighlight(highlight);\n          }}\n        >\n          mark list\n        </button> */}\n\n        <button\n          onClick={() => {\n            console.log(this.smRef.current.getFieldHighlight());\n          }}\n        >\n          get field marker\n        </button>\n        <button\n          onClick={() => {\n            this.smRef.current.clearFieldHighlight();\n          }}\n        >\n          clear field marker\n        </button>\n      </div>\n    );\n  }\n}\nexport default ListMappingPage;\n","import React from \"react\";\n\nimport Emulator from \"./pages/Emulator\";\nimport ScreenMapping from \"./pages/ScreenMapping\";\nimport FieldsMapping from \"./pages/FieldsMapping\";\nimport ListMapping from \"./pages/ListMapping\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Emulator />\n      <br />\n      <ScreenMapping />\n      <br />\n      <FieldsMapping />\n      <br />\n      <ListMapping />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}