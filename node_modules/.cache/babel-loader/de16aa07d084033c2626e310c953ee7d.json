{"ast":null,"code":"var _jsxFileName = \"/Users/jutawuth/git/emulator/src/components/ScreenMapping/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\nimport _ from \"lodash\";\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\nconst MARK_1 = \"mark-1\";\nconst MARK_2 = \"mark-2\";\nconst MARK_3 = \"mark-3\";\nexport class ScreenMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.setHighlight = (markType, highlight) => {\n      this.markStringChackString(markType, highlight);\n    };\n\n    this.getHighlight = markType => {\n      return this.state.markList[markType.replace(\"-\", \"\")];\n    };\n\n    this.clearHighlight = markType => {\n      return this.clearMarkString(markType);\n    };\n\n    this.setHighlightList = highlightList => {\n      this.markAllCheckString(highlightList);\n    };\n\n    this.clearHighlightList = () => {\n      this.clearAllMarkChackString(this.props.id);\n    };\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n    this.markAllCheckString(this.props.highlight);\n  }\n\n  render() {\n    const _this$props = this.props,\n          id = _this$props.id,\n          readOnly = _this$props.readOnly;\n    return React.createElement(EmulatorView, {\n      id: id,\n      readOnly: readOnly,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  } // Set default props\n\n\n}\nScreenMapping.defaultProps = {\n  highlight: {}\n};\nScreenMapping.propTypes = {\n  highlight: PropTypes.object\n};\nexport default ScreenMapping;","map":{"version":3,"sources":["/Users/jutawuth/git/emulator/src/components/ScreenMapping/index.jsx"],"names":["React","PropTypes","$","_","Emulator","EmulatorView","MARK_1","MARK_2","MARK_3","ScreenMapping","constructor","props","setHighlight","markType","highlight","markStringChackString","getHighlight","state","markList","replace","clearHighlight","clearMarkString","setHighlightList","highlightList","markAllCheckString","clearHighlightList","clearAllMarkChackString","id","componentDidMount","args","apply","render","readOnly","defaultProps","propTypes","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAEA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,MAAM,GAAG,QAAf;AAEA,OAAO,MAAMC,aAAN,SAA4BL,QAA5B,CAAqC;AAC1CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,YAfmB,GAeJ,CAACC,QAAD,EAAWC,SAAX,KAAyB;AACtC,WAAKC,qBAAL,CAA2BF,QAA3B,EAAqCC,SAArC;AACD,KAjBkB;;AAAA,SAmBnBE,YAnBmB,GAmBJH,QAAQ,IAAI;AACzB,aAAO,KAAKI,KAAL,CAAWC,QAAX,CAAoBL,QAAQ,CAACM,OAAT,CAAiB,GAAjB,EAAsB,EAAtB,CAApB,CAAP;AACD,KArBkB;;AAAA,SAuBnBC,cAvBmB,GAuBFP,QAAQ,IAAI;AAC3B,aAAO,KAAKQ,eAAL,CAAqBR,QAArB,CAAP;AACD,KAzBkB;;AAAA,SA2BnBS,gBA3BmB,GA2BAC,aAAa,IAAI;AAClC,WAAKC,kBAAL,CAAwBD,aAAxB;AACD,KA7BkB;;AAAA,SA+BnBE,kBA/BmB,GA+BE,MAAM;AACzB,WAAKC,uBAAL,CAA6B,KAAKf,KAAL,CAAWgB,EAAxC;AACD,KAjCkB;;AAGjB,SAAKV,KAAL,GAAa;AACXU,MAAAA,EAAE,EAAEhB,KAAK,CAACgB,EADC;AAEXT,MAAAA,QAAQ,EAAEP,KAAK,CAACY;AAFL,KAAb;AAID;;AAEDK,EAAAA,iBAAiB,CAAC,GAAGC,IAAJ,EAAU;AACzB,UAAMD,iBAAN,CAAwBE,KAAxB,CAA8B,IAA9B,EAAoCD,IAApC;AAEA,SAAKL,kBAAL,CAAwB,KAAKb,KAAL,CAAWG,SAAnC;AACD;;AAsBDiB,EAAAA,MAAM,GAAG;AAAA,wBACkB,KAAKpB,KADvB;AAAA,UACCgB,EADD,eACCA,EADD;AAAA,UACKK,QADL,eACKA,QADL;AAEP,WAAO,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAEL,EAAlB;AAAsB,MAAA,QAAQ,EAAEK,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAvCyC,CAwC1C;;;AAxC0C;AAA/BvB,a,CAyCJwB,Y,GAAe;AACpBnB,EAAAA,SAAS,EAAE;AADS,C;AAKxBL,aAAa,CAACyB,SAAd,GAA0B;AACxBpB,EAAAA,SAAS,EAAEb,SAAS,CAACkC;AADG,CAA1B;AAIA,eAAe1B,aAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport $ from \"jquery\";\nimport _ from \"lodash\";\n\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\n\nconst MARK_1 = \"mark-1\";\nconst MARK_2 = \"mark-2\";\nconst MARK_3 = \"mark-3\";\n\nexport class ScreenMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n\n    this.markAllCheckString(this.props.highlight);\n  }\n\n  setHighlight = (markType, highlight) => {\n    this.markStringChackString(markType, highlight);\n  };\n\n  getHighlight = markType => {\n    return this.state.markList[markType.replace(\"-\", \"\")];\n  };\n\n  clearHighlight = markType => {\n    return this.clearMarkString(markType);\n  };\n\n  setHighlightList = highlightList => {\n    this.markAllCheckString(highlightList);\n  };\n\n  clearHighlightList = () => {\n    this.clearAllMarkChackString(this.props.id);\n  };\n\n  render() {\n    const { id, readOnly } = this.props;\n    return <EmulatorView id={id} readOnly={readOnly} />;\n  }\n  // Set default props\n  static defaultProps = {\n    highlight: {}\n  };\n}\n\nScreenMapping.propTypes = {\n  highlight: PropTypes.object\n};\n\nexport default ScreenMapping;\n"]},"metadata":{},"sourceType":"module"}