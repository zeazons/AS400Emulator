{"ast":null,"code":"import _objectSpread from \"/Users/jutawuth/Git/SSQUARE/Component-AS400-React/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/components/FieldsMapping/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\nimport _ from \"lodash\";\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\nimport { getIndexByRowCol, getHighlightDefault, getSelectionRange, getStartSelection } from \"../Emulator/controler\";\nconst MARK_1 = \"mark-1\";\nexport class FieldsMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.markAllCheckString = markListData => {\n      this.clearAllMarkChackString(this.state.id);\n      this.setState({\n        markList: markListData\n      });\n      const elHighlight = $(`.${this.state.id}.as400-highlight`);\n      const text = elHighlight[0].innerHTML;\n      let textHighlight = \"\";\n\n      for (let i = 0; i < text.length; i += 1) {\n        if (!_.isEmpty(markListData.mark1) && i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col)) {\n          if (markListData.mark1.text.length < 2) {\n            textHighlight += `<as400-mark-1>${text[i]}</as400-mark-1>`;\n          } else {\n            textHighlight += `<as400-mark-1>${text[i]}`;\n          }\n        } else if (!_.isEmpty(markListData.mark1) && i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col) + markListData.mark1.text.length - 1) {\n          textHighlight += `${text[i]}</as400-mark-1>`;\n        } else if (!_.isEmpty(markListData.mark2) && i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col)) {\n          if (markListData.mark2.text.length < 2) {\n            textHighlight += `<as400-mark-2>${text[i]}</as400-mark-2>`;\n          } else {\n            textHighlight += `<as400-mark-2>${text[i]}`;\n          }\n        } else if (!_.isEmpty(markListData.mark2) && i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col) + markListData.mark2.text.length - 1) {\n          textHighlight += `${text[i]}</as400-mark-2>`;\n        } else if (!_.isEmpty(markListData.mark3) && i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col)) {\n          if (markListData.mark3.text.length < 2) {\n            textHighlight += `<as400-mark-3>${text[i]}</as400-mark-3>`;\n          } else {\n            textHighlight += `<as400-mark-3>${text[i]}`;\n          }\n        } else if (!_.isEmpty(markListData.mark3) && i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col) + markListData.mark3.text.length - 1) {\n          textHighlight += `${text[i]}</as400-mark-3>`;\n        } else {\n          textHighlight += text[i];\n        }\n      }\n\n      elHighlight.html(textHighlight);\n    };\n\n    this.clearAllMarkChackString = elStr => {\n      const elHighlight = $(`.${elStr}.as400-highlight`);\n      elHighlight.html(getHighlightDefault(24, 80));\n      this.setState({\n        markList: {}\n      });\n    };\n\n    this.markStringChackString = (markType, highlight) => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n      newMarkList = _objectSpread({}, markList, {\n        [markType.replace(\"-\", \"\")]: highlight\n      });\n      this.setState({\n        markList: newMarkList\n      });\n      this.markAllCheckString(newMarkList);\n    };\n\n    this.clearMarkString = markType => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n      const markData = {};\n      newMarkList = _objectSpread({}, markList, {\n        [markType.replace(\"-\", \"\")]: markData\n      });\n      this.setState({\n        markList: newMarkList\n      });\n      this.markAllCheckString(newMarkList);\n    };\n\n    this.onMouseUp = callbackFn => {\n      const id = this.state.id;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.mouseup(event => {\n        // console.log(`| ========== ${event.type} ========== | `);\n        callbackFn(event);\n        this.clearAllMarkChackString(id);\n      });\n    };\n\n    this.onDoubleClick = callbackFn => {\n      const id = this.state.id;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.dblclick(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        callbackFn(event);\n      });\n    };\n\n    this.onSelect = () => {\n      const _this$state = this.state,\n            id = _this$state.id,\n            colSize = _this$state.colSize;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.select(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        const start = event.target.selectionStart;\n        const end = event.target.selectionEnd;\n        const startPosition = getStartSelection(id, colSize);\n        const data = {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        };\n        this.markStringChackString(MARK_1, data);\n      });\n    };\n\n    this.getFieldHighlight = () => {\n      const markType = MARK_1;\n      return this.state.markList[markType.replace(\"-\", \"\")];\n    };\n\n    this.setFieldHighlight = highlight => {\n      const markType = MARK_1;\n      this.markStringChackString(markType, highlight);\n    };\n\n    this.clearFieldHighlight = () => {\n      const markType = MARK_1;\n      return this.clearMarkString(markType);\n    };\n\n    this.getFieldHighlightList = () => {\n      return this.state.markList;\n    };\n\n    this.setFieldHighlightList = highlightList => {\n      this.markAllCheckString(highlightList);\n    };\n\n    this.clearFieldHighlightList = () => {\n      this.clearAllMarkChackString(this.props.id);\n    };\n\n    this.getLastSelection = () => {\n      return this.state.lastSelection;\n    };\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList,\n      lastSelection: {\n        startIndex: 0,\n        endIndex: 0\n      },\n      colSize: props.cols\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n    this.markAllCheckString(this.props.highlight);\n    const _this$props = this.props,\n          onDoubleClick = _this$props.onDoubleClick,\n          onMouseUp = _this$props.onMouseUp;\n    this.onSelect();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  render() {\n    const id = this.props.id;\n    return React.createElement(EmulatorView, {\n      id: id,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    });\n  } // Set default props\n\n\n}\nFieldsMapping.defaultProps = {\n  highlight: {}\n};\nFieldsMapping.propTypes = {\n  highlightList: PropTypes.object\n};\nexport default FieldsMapping;","map":{"version":3,"sources":["/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/components/FieldsMapping/index.jsx"],"names":["React","PropTypes","$","_","Emulator","EmulatorView","getIndexByRowCol","getHighlightDefault","getSelectionRange","getStartSelection","MARK_1","FieldsMapping","constructor","props","markAllCheckString","markListData","clearAllMarkChackString","state","id","setState","markList","elHighlight","text","innerHTML","textHighlight","i","length","isEmpty","mark1","row","col","mark2","mark3","html","elStr","markStringChackString","markType","highlight","newMarkList","replace","clearMarkString","markData","onMouseUp","callbackFn","elScreen","mouseup","event","onDoubleClick","dblclick","onSelect","colSize","select","start","target","selectionStart","end","selectionEnd","startPosition","data","getFieldHighlight","setFieldHighlight","clearFieldHighlight","getFieldHighlightList","setFieldHighlightList","highlightList","clearFieldHighlightList","getLastSelection","lastSelection","startIndex","endIndex","cols","componentDidMount","args","apply","render","defaultProps","propTypes","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport $ from \"jquery\";\nimport _ from \"lodash\";\n\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\n\nimport {\n  getIndexByRowCol,\n  getHighlightDefault,\n  getSelectionRange,\n  getStartSelection\n} from \"../Emulator/controler\";\n\nconst MARK_1 = \"mark-1\";\n\nexport class FieldsMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList,\n      lastSelection: {\n        startIndex: 0,\n        endIndex: 0\n      },\n      colSize: props.cols\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n\n    this.markAllCheckString(this.props.highlight);\n\n    const { onDoubleClick, onMouseUp } = this.props;\n\n    this.onSelect();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  markAllCheckString = markListData => {\n    this.clearAllMarkChackString(this.state.id);\n    this.setState({\n      markList: markListData\n    });\n\n    const elHighlight = $(`.${this.state.id}.as400-highlight`);\n    const text = elHighlight[0].innerHTML;\n    let textHighlight = \"\";\n\n    for (let i = 0; i < text.length; i += 1) {\n      if (\n        !_.isEmpty(markListData.mark1) &&\n        i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col)\n      ) {\n        if (markListData.mark1.text.length < 2) {\n          textHighlight += `<as400-mark-1>${text[i]}</as400-mark-1>`;\n        } else {\n          textHighlight += `<as400-mark-1>${text[i]}`;\n        }\n      } else if (\n        !_.isEmpty(markListData.mark1) &&\n        i ===\n          getIndexByRowCol(markListData.mark1.row, markListData.mark1.col) +\n            markListData.mark1.text.length -\n            1\n      ) {\n        textHighlight += `${text[i]}</as400-mark-1>`;\n      } else if (\n        !_.isEmpty(markListData.mark2) &&\n        i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col)\n      ) {\n        if (markListData.mark2.text.length < 2) {\n          textHighlight += `<as400-mark-2>${text[i]}</as400-mark-2>`;\n        } else {\n          textHighlight += `<as400-mark-2>${text[i]}`;\n        }\n      } else if (\n        !_.isEmpty(markListData.mark2) &&\n        i ===\n          getIndexByRowCol(markListData.mark2.row, markListData.mark2.col) +\n            markListData.mark2.text.length -\n            1\n      ) {\n        textHighlight += `${text[i]}</as400-mark-2>`;\n      } else if (\n        !_.isEmpty(markListData.mark3) &&\n        i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col)\n      ) {\n        if (markListData.mark3.text.length < 2) {\n          textHighlight += `<as400-mark-3>${text[i]}</as400-mark-3>`;\n        } else {\n          textHighlight += `<as400-mark-3>${text[i]}`;\n        }\n      } else if (\n        !_.isEmpty(markListData.mark3) &&\n        i ===\n          getIndexByRowCol(markListData.mark3.row, markListData.mark3.col) +\n            markListData.mark3.text.length -\n            1\n      ) {\n        textHighlight += `${text[i]}</as400-mark-3>`;\n      } else {\n        textHighlight += text[i];\n      }\n    }\n\n    elHighlight.html(textHighlight);\n  };\n\n  clearAllMarkChackString = elStr => {\n    const elHighlight = $(`.${elStr}.as400-highlight`);\n    elHighlight.html(getHighlightDefault(24, 80));\n\n    this.setState({\n      markList: {}\n    });\n  };\n\n  markStringChackString = (markType, highlight) => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: highlight\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  clearMarkString = markType => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n    const markData = {};\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: markData\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  onMouseUp = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.mouseup(event => {\n      // console.log(`| ========== ${event.type} ========== | `);\n      callbackFn(event);\n      this.clearAllMarkChackString(id);\n    });\n  };\n\n  onDoubleClick = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.dblclick(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n\n      callbackFn(event);\n    });\n  };\n\n  onSelect = () => {\n    const { id, colSize } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.select(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      const start = event.target.selectionStart;\n      const end = event.target.selectionEnd;\n      const startPosition = getStartSelection(id, colSize);\n\n      const data = {\n        text: getSelectionRange(id, start, end),\n        row: startPosition.row,\n        col: startPosition.col\n      };\n\n      this.markStringChackString(MARK_1, data);\n    });\n  };\n\n  /**\n   * ==================\n   *  provide function\n   * ==================\n   */\n  getFieldHighlight = () => {\n    const markType = MARK_1;\n    return this.state.markList[markType.replace(\"-\", \"\")];\n  };\n\n  setFieldHighlight = highlight => {\n    const markType = MARK_1;\n    this.markStringChackString(markType, highlight);\n  };\n\n  clearFieldHighlight = () => {\n    const markType = MARK_1;\n    return this.clearMarkString(markType);\n  };\n\n  getFieldHighlightList = () => {\n    return this.state.markList;\n  };\n\n  setFieldHighlightList = highlightList => {\n    this.markAllCheckString(highlightList);\n  };\n\n  clearFieldHighlightList = () => {\n    this.clearAllMarkChackString(this.props.id);\n  };\n\n  getLastSelection = () => {\n    return this.state.lastSelection;\n  };\n\n  render() {\n    const { id } = this.props;\n    return <EmulatorView id={id} readOnly />;\n  }\n\n  // Set default props\n  static defaultProps = {\n    highlight: {}\n  };\n}\n\nFieldsMapping.propTypes = {\n  highlightList: PropTypes.object\n};\n\nexport default FieldsMapping;\n"]},"metadata":{},"sourceType":"module"}