{"ast":null,"code":"import _objectSpread from \"/Users/jutawuth/Git/SSQUARE/Component-AS400-React/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/components/FieldsMapping/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\nimport _ from \"lodash\";\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\nimport { getHighlightDefault, getSelectionRange, getStartSelection, markAllCheckString } from \"../Emulator/controler\";\nconst MARK_1 = \"mark-1\";\nexport class FieldsMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.markStringChackString = (markType, highlight) => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n      newMarkList = _objectSpread({}, markList, {\n        [markType.replace(\"-\", \"\")]: highlight\n      });\n      this.setState({\n        markList: newMarkList\n      });\n      markAllCheckString(newMarkList);\n    };\n\n    this.clearMarkString = markType => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n      const markData = {};\n      newMarkList = _objectSpread({}, markList, {\n        [markType.replace(\"-\", \"\")]: markData\n      });\n      this.setState({\n        markList: newMarkList\n      });\n      markAllCheckString(newMarkList);\n    };\n\n    this.onMouseUp = callbackFn => {\n      const id = this.state.id;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.mouseup(event => {\n        // console.log(`| ========== ${event.type} ========== | `);\n        callbackFn(event);\n        clearAllMarkChackString(id);\n      });\n    };\n\n    this.onDoubleClick = callbackFn => {\n      const id = this.state.id;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.dblclick(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        callbackFn(event);\n      });\n    };\n\n    this.onSelect = () => {\n      const _this$state = this.state,\n            id = _this$state.id,\n            colSize = _this$state.colSize;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.select(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        const start = event.target.selectionStart;\n        const end = event.target.selectionEnd;\n        const startPosition = getStartSelection(id, colSize);\n        const data = {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        };\n        this.setState({\n          lastSelection: {\n            text: getSelectionRange(id, start, end),\n            row: startPosition.row,\n            col: startPosition.col\n          }\n        });\n        this.markStringChackString(MARK_1, data);\n      });\n    };\n\n    this.getFieldHighlight = () => {\n      const markType = MARK_1;\n      return this.state.markList[markType.replace(\"-\", \"\")];\n    };\n\n    this.setFieldHighlight = highlight => {\n      const markType = MARK_1;\n      console.log(\"highlight: \", highlight);\n      this.markStringChackString(markType, highlight);\n    };\n\n    this.clearFieldHighlight = () => {\n      const markType = MARK_1;\n      return this.clearMarkString(markType);\n    };\n\n    this.getLastSelection = () => {\n      return this.state.lastSelection;\n    };\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList,\n      lastSelection: {\n        startIndex: 0,\n        endIndex: 0\n      },\n      rowSize: props.rows,\n      colSize: props.cols\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n    markAllCheckString(this.props.highlight);\n    const _this$props = this.props,\n          onDoubleClick = _this$props.onDoubleClick,\n          onMouseUp = _this$props.onMouseUp;\n    this.onSelect();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  render() {\n    const id = this.props.id;\n    return React.createElement(EmulatorView, {\n      id: id,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    });\n  } // Set default props\n\n\n}\nFieldsMapping.defaultProps = {\n  highlight: {}\n};\nFieldsMapping.propTypes = {\n  highlightList: PropTypes.object\n};\nexport default FieldsMapping;","map":{"version":3,"sources":["/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/components/FieldsMapping/index.jsx"],"names":["React","PropTypes","$","_","Emulator","EmulatorView","getHighlightDefault","getSelectionRange","getStartSelection","markAllCheckString","MARK_1","FieldsMapping","constructor","props","markStringChackString","markType","highlight","newMarkList","markList","state","replace","setState","clearMarkString","markData","onMouseUp","callbackFn","id","elScreen","mouseup","event","clearAllMarkChackString","onDoubleClick","dblclick","onSelect","colSize","select","start","target","selectionStart","end","selectionEnd","startPosition","data","text","row","col","lastSelection","getFieldHighlight","setFieldHighlight","console","log","clearFieldHighlight","getLastSelection","highlightList","startIndex","endIndex","rowSize","rows","cols","componentDidMount","args","apply","render","defaultProps","propTypes","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport $ from \"jquery\";\nimport _ from \"lodash\";\n\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\n\nimport {\n  getHighlightDefault,\n  getSelectionRange,\n  getStartSelection,\n  markAllCheckString\n} from \"../Emulator/controler\";\n\nconst MARK_1 = \"mark-1\";\n\nexport class FieldsMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList,\n      lastSelection: {\n        startIndex: 0,\n        endIndex: 0\n      },\n      rowSize: props.rows,\n      colSize: props.cols\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n\n    markAllCheckString(this.props.highlight);\n\n    const { onDoubleClick, onMouseUp } = this.props;\n\n    this.onSelect();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  markStringChackString = (markType, highlight) => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: highlight\n    };\n\n    this.setState({ markList: newMarkList });\n    markAllCheckString(newMarkList);\n  };\n\n  clearMarkString = markType => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n    const markData = {};\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: markData\n    };\n\n    this.setState({ markList: newMarkList });\n    markAllCheckString(newMarkList);\n  };\n\n  onMouseUp = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.mouseup(event => {\n      // console.log(`| ========== ${event.type} ========== | `);\n      callbackFn(event);\n      clearAllMarkChackString(id);\n    });\n  };\n\n  onDoubleClick = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.dblclick(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n\n      callbackFn(event);\n    });\n  };\n\n  onSelect = () => {\n    const { id, colSize } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.select(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      const start = event.target.selectionStart;\n      const end = event.target.selectionEnd;\n      const startPosition = getStartSelection(id, colSize);\n\n      const data = {\n        text: getSelectionRange(id, start, end),\n        row: startPosition.row,\n        col: startPosition.col\n      };\n\n      this.setState({\n        lastSelection: {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        }\n      });\n\n      this.markStringChackString(MARK_1, data);\n    });\n  };\n\n  /**\n   * ==================\n   *  provide function\n   * ==================\n   */\n  getFieldHighlight = () => {\n    const markType = MARK_1;\n    return this.state.markList[markType.replace(\"-\", \"\")];\n  };\n\n  setFieldHighlight = highlight => {\n    const markType = MARK_1;\n    console.log(\"highlight: \", highlight);\n\n    this.markStringChackString(markType, highlight);\n  };\n\n  clearFieldHighlight = () => {\n    const markType = MARK_1;\n    return this.clearMarkString(markType);\n  };\n\n  // getFieldHighlightList = () => {\n  //   return this.state.markList;\n  // };\n\n  // setFieldHighlightList = highlightList => {\n  //   markAllCheckString(highlightList);\n  // };\n\n  // clearFieldHighlightList = () => {\n  //   clearAllMarkChackString(this.props.id);\n  // };\n\n  getLastSelection = () => {\n    return this.state.lastSelection;\n  };\n\n  render() {\n    const { id } = this.props;\n    return <EmulatorView id={id} readOnly />;\n  }\n\n  // Set default props\n  static defaultProps = {\n    highlight: {}\n  };\n}\n\nFieldsMapping.propTypes = {\n  highlightList: PropTypes.object\n};\n\nexport default FieldsMapping;\n"]},"metadata":{},"sourceType":"module"}