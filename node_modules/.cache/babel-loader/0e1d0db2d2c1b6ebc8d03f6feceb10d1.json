{"ast":null,"code":"import _objectSpread from \"/Users/jutawuth/Git/SSQUARE/Component-AS400-React/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/components/FieldsMapping/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\nimport { getHighlightDefault, getSelectionRange, getStartSelection, markAllCheckStringOnScreen } from \"../Emulator/controler\";\nconst MARK_1 = \"mark-1\";\nexport class FieldsMapping extends Emulator {\n  constructor(...args) {\n    super(...args);\n\n    this.markStringChackString = (markType, highlight) => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n      newMarkList = _objectSpread({}, markList, {\n        [markType.replace(\"-\", \"\")]: highlight\n      });\n      this.setState({\n        markList: newMarkList\n      });\n      this.markAllCheckString(newMarkList);\n    };\n\n    this.clearMarkString = markType => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n      const markData = {};\n      newMarkList = _objectSpread({}, markList, {\n        [markType.replace(\"-\", \"\")]: markData\n      });\n      this.setState({\n        markList: newMarkList\n      });\n      this.markAllCheckString(newMarkList);\n    };\n\n    this.onMouseUp = callbackFn => {\n      const id = this.state.id;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.mouseup(event => {\n        // console.log(`| ========== ${event.type} ========== | `);\n        callbackFn(event);\n        this.clearAllMarkChackString(id);\n      });\n    };\n\n    this.onDoubleClick = callbackFn => {\n      const id = this.state.id;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.dblclick(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        callbackFn(event);\n      });\n    };\n\n    this.onSelect = () => {\n      const _this$state = this.state,\n            id = _this$state.id,\n            colSize = _this$state.colSize;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.select(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        const start = event.target.selectionStart;\n        const end = event.target.selectionEnd;\n        const startPosition = getStartSelection(id, colSize);\n        const data = {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        };\n        this.setState({\n          lastSelection: {\n            text: getSelectionRange(id, start, end),\n            row: startPosition.row,\n            col: startPosition.col\n          }\n        });\n        this.markStringChackString(MARK_1, data);\n      });\n    };\n\n    this.getFieldHighlight = () => {\n      return this.state.markList[MARK_1.replace(\"-\", \"\")];\n    };\n\n    this.setFieldHighlight = highlight => {\n      this.markStringChackString(MARK_1, highlight);\n    };\n\n    this.clearFieldHighlight = () => {\n      return this.clearMarkString(MARK_1);\n    };\n\n    this.getLastSelection = () => {\n      return this.state.lastSelection;\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n    this.markAllCheckString(this.props.highlight);\n    const _this$props = this.props,\n          onDoubleClick = _this$props.onDoubleClick,\n          onMouseUp = _this$props.onMouseUp;\n    this.onSelect();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  render() {\n    const id = this.props.id;\n    return React.createElement(EmulatorView, {\n      id: id,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    });\n  } // Set default props\n\n\n}\nFieldsMapping.defaultProps = {\n  highlight: {}\n};\nFieldsMapping.propTypes = {\n  highlightList: PropTypes.object\n};\nexport default FieldsMapping;","map":{"version":3,"sources":["/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/components/FieldsMapping/index.jsx"],"names":["React","PropTypes","$","Emulator","EmulatorView","getHighlightDefault","getSelectionRange","getStartSelection","markAllCheckStringOnScreen","MARK_1","FieldsMapping","markStringChackString","markType","highlight","newMarkList","markList","state","replace","setState","markAllCheckString","clearMarkString","markData","onMouseUp","callbackFn","id","elScreen","mouseup","event","clearAllMarkChackString","onDoubleClick","dblclick","onSelect","colSize","select","start","target","selectionStart","end","selectionEnd","startPosition","data","text","row","col","lastSelection","getFieldHighlight","setFieldHighlight","clearFieldHighlight","getLastSelection","componentDidMount","args","apply","props","render","defaultProps","propTypes","highlightList","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\n\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\n\nimport {\n  getHighlightDefault,\n  getSelectionRange,\n  getStartSelection,\n  markAllCheckStringOnScreen\n} from \"../Emulator/controler\";\n\nconst MARK_1 = \"mark-1\";\n\nexport class FieldsMapping extends Emulator {\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n\n    this.markAllCheckString(this.props.highlight);\n\n    const { onDoubleClick, onMouseUp } = this.props;\n\n    this.onSelect();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  markStringChackString = (markType, highlight) => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: highlight\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  clearMarkString = markType => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n    const markData = {};\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: markData\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  onMouseUp = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.mouseup(event => {\n      // console.log(`| ========== ${event.type} ========== | `);\n      callbackFn(event);\n      this.clearAllMarkChackString(id);\n    });\n  };\n\n  onDoubleClick = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.dblclick(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n\n      callbackFn(event);\n    });\n  };\n\n  onSelect = () => {\n    const { id, colSize } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.select(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      const start = event.target.selectionStart;\n      const end = event.target.selectionEnd;\n      const startPosition = getStartSelection(id, colSize);\n\n      const data = {\n        text: getSelectionRange(id, start, end),\n        row: startPosition.row,\n        col: startPosition.col\n      };\n\n      this.setState({\n        lastSelection: {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        }\n      });\n\n      this.markStringChackString(MARK_1, data);\n    });\n  };\n\n  /**\n   * ==================\n   *  provide function\n   * ==================\n   */\n  getFieldHighlight = () => {\n    return this.state.markList[MARK_1.replace(\"-\", \"\")];\n  };\n\n  setFieldHighlight = highlight => {\n    this.markStringChackString(MARK_1, highlight);\n  };\n\n  clearFieldHighlight = () => {\n    return this.clearMarkString(MARK_1);\n  };\n\n  // getFieldHighlightList = () => {\n  //   return this.state.markList;\n  // };\n\n  // setFieldHighlightList = highlightList => {\n  //   this.markAllCheckString(highlightList);\n  // };\n\n  // clearFieldHighlightList = () => {\n  //   this.clearAllMarkChackString(this.props.id);\n  // };\n\n  getLastSelection = () => {\n    return this.state.lastSelection;\n  };\n\n  render() {\n    const { id } = this.props;\n    return <EmulatorView id={id} readOnly />;\n  }\n\n  // Set default props\n  static defaultProps = {\n    highlight: {}\n  };\n}\n\nFieldsMapping.propTypes = {\n  highlightList: PropTypes.object\n};\n\nexport default FieldsMapping;\n"]},"metadata":{},"sourceType":"module"}