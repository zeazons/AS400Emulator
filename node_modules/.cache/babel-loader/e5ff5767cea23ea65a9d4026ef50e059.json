{"ast":null,"code":"var _jsxFileName = \"/Users/jutawuth/git/emulator/src/components/ScreenMapping/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\nimport { markAllCheckString, clearMarkString, markStringChackString } from \"./controller\";\nexport class ScreenMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.setHighlight = (markType, highlight) => {\n      markStringChackString(markType, highlight);\n    };\n\n    this.getHighlight = markType => {\n      return this.state.markList[markType.replace(\"-\", \"\")];\n    };\n\n    this.clearHighlight = markType => {\n      return clearMarkString(markType);\n    };\n\n    this.setHighlightList = highlightList => {\n      markAllCheckString(highlightList);\n    };\n\n    this.clearHighlightList = () => {\n      clearAllMarkChackString(this.props.id);\n    };\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n    markAllCheckString(this.props.highlight);\n  }\n\n  render() {\n    const _this$props = this.props,\n          id = _this$props.id,\n          readOnly = _this$props.readOnly;\n    return React.createElement(EmulatorView, {\n      id: id,\n      readOnly: readOnly,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n  } // Set default props\n\n\n}\nScreenMapping.defaultProps = {\n  highlight: {}\n};\nScreenMapping.propTypes = {\n  highlight: PropTypes.object\n};\nexport default ScreenMapping;","map":{"version":3,"sources":["/Users/jutawuth/git/emulator/src/components/ScreenMapping/index.jsx"],"names":["React","PropTypes","_","Emulator","EmulatorView","markAllCheckString","clearMarkString","markStringChackString","ScreenMapping","constructor","props","setHighlight","markType","highlight","getHighlight","state","markList","replace","clearHighlight","setHighlightList","highlightList","clearHighlightList","clearAllMarkChackString","id","componentDidMount","args","apply","render","readOnly","defaultProps","propTypes","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAEA,SACEC,kBADF,EAEEC,eAFF,EAGEC,qBAHF,QAIO,cAJP;AAMA,OAAO,MAAMC,aAAN,SAA4BL,QAA5B,CAAqC;AAC1CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,YAfmB,GAeJ,CAACC,QAAD,EAAWC,SAAX,KAAyB;AACtCN,MAAAA,qBAAqB,CAACK,QAAD,EAAWC,SAAX,CAArB;AACD,KAjBkB;;AAAA,SAmBnBC,YAnBmB,GAmBJF,QAAQ,IAAI;AACzB,aAAO,KAAKG,KAAL,CAAWC,QAAX,CAAoBJ,QAAQ,CAACK,OAAT,CAAiB,GAAjB,EAAsB,EAAtB,CAApB,CAAP;AACD,KArBkB;;AAAA,SAuBnBC,cAvBmB,GAuBFN,QAAQ,IAAI;AAC3B,aAAON,eAAe,CAACM,QAAD,CAAtB;AACD,KAzBkB;;AAAA,SA2BnBO,gBA3BmB,GA2BAC,aAAa,IAAI;AAClCf,MAAAA,kBAAkB,CAACe,aAAD,CAAlB;AACD,KA7BkB;;AAAA,SA+BnBC,kBA/BmB,GA+BE,MAAM;AACzBC,MAAAA,uBAAuB,CAAC,KAAKZ,KAAL,CAAWa,EAAZ,CAAvB;AACD,KAjCkB;;AAGjB,SAAKR,KAAL,GAAa;AACXQ,MAAAA,EAAE,EAAEb,KAAK,CAACa,EADC;AAEXP,MAAAA,QAAQ,EAAEN,KAAK,CAACU;AAFL,KAAb;AAID;;AAEDI,EAAAA,iBAAiB,CAAC,GAAGC,IAAJ,EAAU;AACzB,UAAMD,iBAAN,CAAwBE,KAAxB,CAA8B,IAA9B,EAAoCD,IAApC;AAEApB,IAAAA,kBAAkB,CAAC,KAAKK,KAAL,CAAWG,SAAZ,CAAlB;AACD;;AAsBDc,EAAAA,MAAM,GAAG;AAAA,wBACkB,KAAKjB,KADvB;AAAA,UACCa,EADD,eACCA,EADD;AAAA,UACKK,QADL,eACKA,QADL;AAEP,WAAO,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAEL,EAAlB;AAAsB,MAAA,QAAQ,EAAEK,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAvCyC,CAwC1C;;;AAxC0C;AAA/BpB,a,CAyCJqB,Y,GAAe;AACpBhB,EAAAA,SAAS,EAAE;AADS,C;AAKxBL,aAAa,CAACsB,SAAd,GAA0B;AACxBjB,EAAAA,SAAS,EAAEZ,SAAS,CAAC8B;AADG,CAA1B;AAIA,eAAevB,aAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport _ from \"lodash\";\n\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\n\nimport {\n  markAllCheckString,\n  clearMarkString,\n  markStringChackString\n} from \"./controller\";\n\nexport class ScreenMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n\n    markAllCheckString(this.props.highlight);\n  }\n\n  setHighlight = (markType, highlight) => {\n    markStringChackString(markType, highlight);\n  };\n\n  getHighlight = markType => {\n    return this.state.markList[markType.replace(\"-\", \"\")];\n  };\n\n  clearHighlight = markType => {\n    return clearMarkString(markType);\n  };\n\n  setHighlightList = highlightList => {\n    markAllCheckString(highlightList);\n  };\n\n  clearHighlightList = () => {\n    clearAllMarkChackString(this.props.id);\n  };\n\n  render() {\n    const { id, readOnly } = this.props;\n    return <EmulatorView id={id} readOnly={readOnly} />;\n  }\n  // Set default props\n  static defaultProps = {\n    highlight: {}\n  };\n}\n\nScreenMapping.propTypes = {\n  highlight: PropTypes.object\n};\n\nexport default ScreenMapping;\n"]},"metadata":{},"sourceType":"module"}