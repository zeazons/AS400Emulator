{"ast":null,"code":"var _jsxFileName = \"/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/App.js\";\nimport React, { useRef } from \"react\";\nimport Emulator from \"./components/Emulator\";\nimport ScreenMapping from \"./components/ScreenMapping\";\nimport { getSelectionRange, getStartSelection } from \"./components/Emulator/controler\";\n\nfunction App() {\n  const smRef = useRef();\n  const MARK1 = \"mark-1\";\n  const data = {\n    HEADER: {\n      tokenId: \"EWI112233445566\",\n      requestId: \"ABC123456789\",\n      deviceId: \"UUID9988776655\"\n    },\n    DATA: {\n      screen: {\n        rows: 24,\n        cols: 80\n      },\n      Text: \"                                   Sign On                                      \\n                                               System  . . . . . :   S101CD3M   \\n                                               Subsystem . . . . :   QINTER     \\n                                               Display . . . . . :   QPADEV003R \\n                                                                                \\n                User  . . . . . . . . . . . . . .                               \\n                Password  . . . . . . . . . . . .                               \\n                Program/procedure . . . . . . . .                               \\n                Menu  . . . . . . . . . . . . . .                               \\n                Current library . . . . . . . . .                               \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                        (C) COPYRIGHT IBM CORP. 1980, 2005.     \",\n      Style: \".................................RRRRRRRRRRRRR..................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n.........................................................UUUUUUUUUU.............\\n.........................................................HHHHHHHHHH.............\\n.........................................................UUUUUUUUUU.............\\n.........................................................UUUUUUUUUU.............\\n.........................................................UUUUUUUUUU.............\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\",\n      Cursor: \"5,53\"\n    }\n  };\n  const _data$DATA$screen = data.DATA.screen,\n        rows = _data$DATA$screen.rows,\n        cols = _data$DATA$screen.cols;\n  const _data$DATA = data.DATA,\n        text = _data$DATA.Text,\n        style = _data$DATA.Style,\n        cursor = _data$DATA.Cursor;\n  const highlightList = {\n    mark1: {\n      text: \"Sign On\",\n      row: 1,\n      col: 36\n    },\n    mark2: {\n      text: \"User\",\n      row: 6,\n      col: 17\n    },\n    mark3: {\n      text: \"(C) COPYRIGHT IBM CORP. 1980, 2005.\",\n      row: 24,\n      col: 41\n    }\n  };\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \" \", \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(ScreenMapping, {\n    id: \"flow2\",\n    ref: smRef,\n    rows: rows,\n    cols: cols,\n    text: text,\n    style: style,\n    cursor: cursor,\n    highlight: highlightList,\n    url: \"http://localhost:8085/emulator\",\n    readOnly: true,\n    onDoubleClick: event => {\n      console.log(`| ========== ${event.type} ========== |`);\n      const url = AS400ScreenConfig.url.url;\n      let eventKey = event.key;\n\n      if (event.keyCode >= 8 && event.keyCode < 48) {\n        eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n      }\n\n      const selected = getStartSelection(props.name, colSize);\n      const dataForApi = {\n        HEADER: {\n          tokenId: 'EWI112233445566',\n          requestId: 'ABC123456789',\n          deviceId: 'UUID9988776655' // requestCount: this.resultCount\n\n        },\n        DATA: {\n          Event: 'SELECTION',\n          KeyValue: eventKey,\n          Cursor: `${selected.row},${selected.col}`\n        }\n      };\n      Axios({\n        method: 'post',\n        url,\n        data: JSON.stringify(dataForApi),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        // handle success\n        const data = response.data.DATA;\n        setAs400Screen(props.name, data.Text);\n        setAs400Style(props.name, data.Text, data.Style);\n        setAS400Cursor(props.name, data.Cursor); // clearAllMarkChackString(props.name);\n\n        const fields = data.Fields;\n        let selection = null;\n        const index = getAS400Cursor(data.Cursor);\n        fields.forEach(f => {\n          if (Math.abs(f.EndRow - f.StartRow) === 0) {\n            if (index.col >= f.StartCol && index.col <= f.EndCol && f.StartRow === index.row) {\n              selection = f;\n            }\n          }\n        });\n        const selectionStart = getIndexByRowCol(selection.StartRow, selection.StartCol);\n        const selectionEnd = getIndexByRowCol(selection.EndRow, selection.EndCol);\n        setSelectionRange(props.name, selectionStart, selectionEnd);\n      }).catch(response => {\n        // handle error\n        console.log(`response: ${response}`);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), \" \", React.createElement(\"button\", {\n    onClick: () => smRef.current.setHighlightList(highlightList),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"highlight \"), \" \", React.createElement(\"button\", {\n    onClick: () => {\n      console.log(smRef.current.getHighlightList());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"get mark \"), \" \", React.createElement(\"button\", {\n    onClick: () => smRef.current.clearHighlightList(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"clear \"), \" \", React.createElement(\"button\", {\n    onClick: () => {\n      const highlight = smRef.current.getLastSelection();\n      smRef.current.setHighlight(MARK1, highlight);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"mark 1 \"), \" \", React.createElement(\"button\", {\n    onClick: () => {\n      console.log(smRef.current.getHighlight(MARK1));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"get mark 1 \"), \" \", React.createElement(\"button\", {\n    onClick: () => {\n      smRef.current.clearHighlight(MARK1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"clear mark 1 \"), \" \"), \" \");\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/App.js"],"names":["React","useRef","Emulator","ScreenMapping","getSelectionRange","getStartSelection","App","smRef","MARK1","data","HEADER","tokenId","requestId","deviceId","DATA","screen","rows","cols","Text","Style","Cursor","text","style","cursor","highlightList","mark1","row","col","mark2","mark3","event","console","log","type","url","AS400ScreenConfig","eventKey","key","keyCode","toLowerCase","selected","props","name","colSize","dataForApi","Event","KeyValue","Axios","method","JSON","stringify","headers","then","response","setAs400Screen","setAs400Style","setAS400Cursor","fields","Fields","selection","index","getAS400Cursor","forEach","f","Math","abs","EndRow","StartRow","StartCol","EndCol","selectionStart","getIndexByRowCol","selectionEnd","setSelectionRange","catch","current","setHighlightList","getHighlightList","clearHighlightList","highlight","getLastSelection","setHighlight","getHighlight","clearHighlight"],"mappings":"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","sourcesContent":["import React, {\n  useRef\n} from \"react\";\nimport Emulator from \"./components/Emulator\";\nimport ScreenMapping from \"./components/ScreenMapping\";\n\nimport {\n  getSelectionRange,\n  getStartSelection\n} from \"./components/Emulator/controler\";\n\nfunction App() {\n  const smRef = useRef();\n  const MARK1 = \"mark-1\";\n\n  const data = {\n    HEADER: {\n      tokenId: \"EWI112233445566\",\n      requestId: \"ABC123456789\",\n      deviceId: \"UUID9988776655\"\n    },\n    DATA: {\n      screen: {\n        rows: 24,\n        cols: 80\n      },\n      Text: \"                                   Sign On                                      \\n                                               System  . . . . . :   S101CD3M   \\n                                               Subsystem . . . . :   QINTER     \\n                                               Display . . . . . :   QPADEV003R \\n                                                                                \\n                User  . . . . . . . . . . . . . .                               \\n                Password  . . . . . . . . . . . .                               \\n                Program/procedure . . . . . . . .                               \\n                Menu  . . . . . . . . . . . . . .                               \\n                Current library . . . . . . . . .                               \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                        (C) COPYRIGHT IBM CORP. 1980, 2005.     \",\n      Style: \".................................RRRRRRRRRRRRR..................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n.........................................................UUUUUUUUUU.............\\n.........................................................HHHHHHHHHH.............\\n.........................................................UUUUUUUUUU.............\\n.........................................................UUUUUUUUUU.............\\n.........................................................UUUUUUUUUU.............\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\",\n      Cursor: \"5,53\"\n    }\n  };\n\n  const {\n    rows,\n    cols\n  } = data.DATA.screen;\n  const {\n    Text: text,\n    Style: style,\n    Cursor: cursor\n  } = data.DATA;\n  const highlightList = {\n    mark1: {\n      text: \"Sign On\",\n      row: 1,\n      col: 36\n    },\n    mark2: {\n      text: \"User\",\n      row: 6,\n      col: 17\n    },\n    mark3: {\n      text: \"(C) COPYRIGHT IBM CORP. 1980, 2005.\",\n      row: 24,\n      col: 41\n    }\n  };\n\n  return ( <\n    div className = \"App\" > {\n      /* <Emulator\n              id=\"flow\"\n              rows={rows}\n              cols={cols}\n              text={text}\n              style={style}\n              cursor={cursor}\n            /> */\n    } <\n    br / >\n    <\n    div >\n    <\n    ScreenMapping id = \"flow2\"\n    ref = {\n      smRef\n    }\n    rows = {\n      rows\n    }\n    cols = {\n      cols\n    }\n    text = {\n      text\n    }\n    style = {\n      style\n    }\n    cursor = {\n      cursor\n    }\n    highlight = {\n      highlightList\n    }\n    url = \"http://localhost:8085/emulator\"\n    readOnly onDoubleClick = {\n      event => {\n        console.log(`| ========== ${event.type} ========== |`);\n\n        const {\n          url\n        } = AS400ScreenConfig.url;\n        let eventKey = event.key;\n        if (event.keyCode >= 8 && event.keyCode < 48) {\n          eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n        }\n        const selected = getStartSelection(props.name, colSize);\n        const dataForApi = {\n          HEADER: {\n            tokenId: 'EWI112233445566',\n            requestId: 'ABC123456789',\n            deviceId: 'UUID9988776655',\n            // requestCount: this.resultCount\n          },\n          DATA: {\n            Event: 'SELECTION',\n            KeyValue: eventKey,\n            Cursor: `${selected.row},${selected.col}`,\n          },\n        };\n\n        Axios({\n            method: 'post',\n            url,\n            data: JSON.stringify(dataForApi),\n            headers: {\n              'Content-Type': 'application/json'\n            },\n          })\n          .then(response => {\n            // handle success\n            const data = response.data.DATA;\n\n            setAs400Screen(props.name, data.Text);\n            setAs400Style(props.name, data.Text, data.Style);\n            setAS400Cursor(props.name, data.Cursor);\n\n            // clearAllMarkChackString(props.name);\n\n            const fields = data.Fields;\n            let selection = null;\n\n            const index = getAS400Cursor(data.Cursor);\n            fields.forEach(f => {\n              if (Math.abs(f.EndRow - f.StartRow) === 0) {\n                if (index.col >= f.StartCol && index.col <= f.EndCol && f.StartRow === index.row) {\n                  selection = f;\n                }\n              }\n            });\n\n            const selectionStart = getIndexByRowCol(selection.StartRow, selection.StartCol);\n            const selectionEnd = getIndexByRowCol(selection.EndRow, selection.EndCol);\n\n            setSelectionRange(props.name, selectionStart, selectionEnd);\n          })\n          .catch(response => {\n            // handle error\n            console.log(`response: ${response}`);\n          });\n      }\n    }\n    /> <\n    button onClick = {\n      () => smRef.current.setHighlightList(highlightList)\n    } >\n    highlight <\n    /button> <\n    button onClick = {\n      () => {\n        console.log(smRef.current.getHighlightList());\n      }\n    } >\n    get mark <\n    /button> <\n    button onClick = {\n      () => smRef.current.clearHighlightList()\n    } >\n    clear <\n    /button> <\n    button onClick = {\n      () => {\n        const highlight = smRef.current.getLastSelection();\n        smRef.current.setHighlight(MARK1, highlight);\n      }\n    } >\n    mark 1 <\n    /button> <\n    button onClick = {\n      () => {\n        console.log(smRef.current.getHighlight(MARK1));\n      }\n    } >\n    get mark 1 <\n    /button> <\n    button onClick = {\n      () => {\n        smRef.current.clearHighlight(MARK1);\n      }\n    } >\n    clear mark 1 <\n    /button> <\n    /div> <\n    /div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}