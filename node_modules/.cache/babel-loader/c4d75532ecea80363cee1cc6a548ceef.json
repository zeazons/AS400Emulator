{"ast":null,"code":"import _objectSpread from \"/Users/jutawuth/Git/SSQUARE/Component-AS400-React/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/components/ListMapping/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\nimport { getHighlightDefault, getSelectionRange, getStartSelection, markAllCheckStringOnScreen } from \"../Emulator/controler\";\nconst MARK_1 = \"mark-1\";\nconst MARK_3 = \"mark-3\";\nexport class ListMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.markAllCheckString = markListData => {\n      const id = this.state.id;\n      this.clearAllMarkChackString(id);\n      this.setState({\n        markList: markListData\n      });\n      markAllCheckStringOnScreen(id, markListData);\n    };\n\n    this.clearAllMarkChackString = elStr => {\n      const _this$state = this.state,\n            rowSize = _this$state.rowSize,\n            colSize = _this$state.colSize;\n      const elHighlight = $(`.${elStr}.as400-highlight`);\n      elHighlight.html(getHighlightDefault(rowSize, colSize));\n      this.setState({\n        markList: {}\n      });\n    };\n\n    this.markStringChackString = (markType, highlight) => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n      newMarkList = _objectSpread({}, markList, {\n        [markType.replace(\"-\", \"\")]: highlight\n      });\n      this.setState({\n        markList: newMarkList\n      });\n      this.markAllCheckString(newMarkList);\n    };\n\n    this.clearMarkString = markType => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n      const markData = {};\n      newMarkList = _objectSpread({}, markList, {\n        [markType.replace(\"-\", \"\")]: markData\n      });\n      this.setState({\n        markList: newMarkList\n      });\n      this.markAllCheckString(newMarkList);\n    };\n\n    this.onMouseUp = callbackFn => {\n      const id = this.state.id;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.mouseup(event => {\n        // console.log(`| ========== ${event.type} ========== | `);\n        callbackFn(event);\n        this.clearAllMarkChackString(id);\n      });\n    };\n\n    this.onDoubleClick = callbackFn => {\n      const id = this.state.id;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.dblclick(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        callbackFn(event);\n      });\n    };\n\n    this.onSelect = () => {\n      const _this$state2 = this.state,\n            id = _this$state2.id,\n            colSize = _this$state2.colSize;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.select(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        const start = event.target.selectionStart;\n        const end = event.target.selectionEnd;\n        const startPosition = getStartSelection(id, colSize);\n        const data = {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        };\n        this.setState({\n          lastSelection: {\n            text: getSelectionRange(id, start, end),\n            row: startPosition.row,\n            col: startPosition.col\n          }\n        });\n\n        if (data.text.length < colSize) {\n          this.markStringChackString(MARK_3, data);\n        } else if (data.col === 1 && data.text.length >= colSize) {\n          this.markStringChackString(MARK_1, data);\n        }\n      });\n    };\n\n    this.getListHighlight = () => {\n      const markType = MARK_1;\n      return this.state.markList[markType.replace(\"-\", \"\")];\n    };\n\n    this.setListHighlight = highlight => {\n      const markType = MARK_1;\n      console.log(\"highlight: \", highlight);\n      this.markStringChackString(markType, highlight);\n    };\n\n    this.clearListHighlight = () => {\n      const markType = MARK_1;\n      return this.clearMarkString(markType);\n    };\n\n    this.getFieldHighlight = () => {\n      const markType = MARK_3;\n      return this.state.markList[markType.replace(\"-\", \"\")];\n    };\n\n    this.setFieldHighlight = highlight => {\n      const markType = MARK_3;\n      this.markStringChackString(markType, highlight);\n    };\n\n    this.clearFieldHighlight = () => {\n      const markType = MARK_3;\n      return this.clearMarkString(markType);\n    };\n\n    this.getLastSelection = () => {\n      return this.state.lastSelection;\n    };\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList,\n      lastSelection: {\n        startIndex: 0,\n        endIndex: 0\n      },\n      rowSize: props.rows,\n      colSize: props.cols\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n    this.markAllCheckString(this.props.highlight);\n    const _this$props = this.props,\n          onDoubleClick = _this$props.onDoubleClick,\n          onMouseUp = _this$props.onMouseUp;\n    this.onSelect();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  render() {\n    const id = this.props.id;\n    return React.createElement(EmulatorView, {\n      id: id,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    });\n  } // Set default props\n\n\n}\nListMapping.defaultProps = {\n  highlight: {}\n};\nListMapping.propTypes = {\n  highlightList: PropTypes.object\n};\nexport default ListMapping;","map":{"version":3,"sources":["/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/components/ListMapping/index.jsx"],"names":["React","PropTypes","$","Emulator","EmulatorView","getHighlightDefault","getSelectionRange","getStartSelection","markAllCheckStringOnScreen","MARK_1","MARK_3","ListMapping","constructor","props","markAllCheckString","markListData","id","state","clearAllMarkChackString","setState","markList","elStr","rowSize","colSize","elHighlight","html","markStringChackString","markType","highlight","newMarkList","replace","clearMarkString","markData","onMouseUp","callbackFn","elScreen","mouseup","event","onDoubleClick","dblclick","onSelect","select","start","target","selectionStart","end","selectionEnd","startPosition","data","text","row","col","lastSelection","length","getListHighlight","setListHighlight","console","log","clearListHighlight","getFieldHighlight","setFieldHighlight","clearFieldHighlight","getLastSelection","highlightList","startIndex","endIndex","rows","cols","componentDidMount","args","apply","render","defaultProps","propTypes","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\n\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\n\nimport {\n  getHighlightDefault,\n  getSelectionRange,\n  getStartSelection,\n  markAllCheckStringOnScreen\n} from \"../Emulator/controler\";\n\nconst MARK_1 = \"mark-1\";\nconst MARK_3 = \"mark-3\";\n\nexport class ListMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList,\n      lastSelection: {\n        startIndex: 0,\n        endIndex: 0\n      },\n      rowSize: props.rows,\n      colSize: props.cols\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n\n    this.markAllCheckString(this.props.highlight);\n\n    const { onDoubleClick, onMouseUp } = this.props;\n\n    this.onSelect();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  markAllCheckString = markListData => {\n    const { id } = this.state;\n    this.clearAllMarkChackString(id);\n    this.setState({\n      markList: markListData\n    });\n\n    markAllCheckStringOnScreen(id, markListData);\n  };\n\n  clearAllMarkChackString = elStr => {\n    const { rowSize, colSize } = this.state;\n    const elHighlight = $(`.${elStr}.as400-highlight`);\n    elHighlight.html(getHighlightDefault(rowSize, colSize));\n\n    this.setState({\n      markList: {}\n    });\n  };\n\n  markStringChackString = (markType, highlight) => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: highlight\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  clearMarkString = markType => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n    const markData = {};\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: markData\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  onMouseUp = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.mouseup(event => {\n      // console.log(`| ========== ${event.type} ========== | `);\n      callbackFn(event);\n      this.clearAllMarkChackString(id);\n    });\n  };\n\n  onDoubleClick = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.dblclick(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n\n      callbackFn(event);\n    });\n  };\n\n  onSelect = () => {\n    const { id, colSize } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.select(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      const start = event.target.selectionStart;\n      const end = event.target.selectionEnd;\n      const startPosition = getStartSelection(id, colSize);\n\n      const data = {\n        text: getSelectionRange(id, start, end),\n        row: startPosition.row,\n        col: startPosition.col\n      };\n\n      this.setState({\n        lastSelection: {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        }\n      });\n\n      if (data.text.length < colSize) {\n        this.markStringChackString(MARK_3, data);\n      } else if (data.col === 1 && data.text.length >= colSize) {\n        this.markStringChackString(MARK_1, data);\n      }\n    });\n  };\n\n  /**\n   * ==================\n   *  provide function\n   * ==================\n   */\n  getListHighlight = () => {\n    const markType = MARK_1;\n    return this.state.markList[markType.replace(\"-\", \"\")];\n  };\n\n  setListHighlight = highlight => {\n    const markType = MARK_1;\n    console.log(\"highlight: \", highlight);\n\n    this.markStringChackString(markType, highlight);\n  };\n\n  clearListHighlight = () => {\n    const markType = MARK_1;\n    return this.clearMarkString(markType);\n  };\n\n  getFieldHighlight = () => {\n    const markType = MARK_3;\n    return this.state.markList[markType.replace(\"-\", \"\")];\n  };\n\n  setFieldHighlight = highlight => {\n    const markType = MARK_3;\n\n    this.markStringChackString(markType, highlight);\n  };\n\n  clearFieldHighlight = () => {\n    const markType = MARK_3;\n    return this.clearMarkString(markType);\n  };\n\n  // getListHighlightList = () => {\n  //   return this.state.markList;\n  // };\n\n  // setListHighlightList = highlightList => {\n  //   this.markAllCheckString(highlightList);\n  // };\n\n  // clearListHighlightList = () => {\n  //   this.clearAllMarkChackString(this.props.id);\n  // };\n\n  getLastSelection = () => {\n    return this.state.lastSelection;\n  };\n\n  render() {\n    const { id } = this.props;\n    return <EmulatorView id={id} readOnly />;\n  }\n\n  // Set default props\n  static defaultProps = {\n    highlight: {}\n  };\n}\n\nListMapping.propTypes = {\n  highlightList: PropTypes.object\n};\n\nexport default ListMapping;\n"]},"metadata":{},"sourceType":"module"}