{"ast":null,"code":"import $ from \"jquery\";\n\nconst getHighlightDefault = (rowSize, colSize) => {\n  let textHighlight = \"\";\n\n  for (let i = 0; i < rowSize; i += 1) {\n    for (let j = 0; j < colSize; j += 1) {\n      textHighlight += \".\";\n    }\n\n    textHighlight += \"\\n\";\n  }\n\n  return textHighlight;\n};\n\nconst getIndexByRowCol = (row, colSize) => (row - 1) * 80 + colSize + row - 2;\n\nexport const setSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`)[0];\n  let start = selectionStart;\n  let end = selectionEnd;\n  start -= 1;\n  end -= 1; // elScreen.focus();\n\n  if (elScreen.setSelectionRange) {\n    elScreen.setSelectionRange(start, end);\n  } else if (elScreen.createTextRange) {\n    const range = elScreen.createTextRange();\n    range.collapse(true);\n    range.moveEnd(\"character\", end);\n    range.moveStart(\"character\", start);\n    range.select();\n  }\n};\nexport const initScreen = (elStr, rowSize, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.attr(\"rows\", rowSize);\n  elScreen.attr(\"cols\", colSize);\n  const elScreenTemp = $(`.${elStr}.as400-screen-temp`);\n  elScreenTemp.attr(\"rows\", rowSize);\n  elScreenTemp.attr(\"cols\", colSize);\n  const elStyle = $(`.${elStr}.as400-style`);\n  elStyle.attr(\"rows\", rowSize);\n  elStyle.attr(\"cols\", colSize);\n  const elHighlight = $(`.${elStr}.as400-highlight`);\n  elHighlight.html(getHighlightDefault(rowSize, colSize));\n};\nexport const setAs400Screen = (elStr, data) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.val(data);\n};\nexport const setAs400Style = (elStr, text, styleParams) => {\n  const elStyle = $(`.${elStr}.as400-style`);\n  let style = styleParams;\n  let textStyle = \"\";\n\n  for (let i = 0; i < text.length; i += 1) {\n    const character = text[i];\n    const styleCharacter = style[i];\n\n    if (styleCharacter !== \".\" && !$.isEmptyObject(styleCharacter)) {\n      textStyle += character.replace(character, `<as400-${styleCharacter.toLowerCase()}-style>$&</as400-${styleCharacter.toLowerCase()}-style>`);\n    } else {\n      textStyle += character;\n    }\n  }\n\n  $(elStyle).html(textStyle);\n};\nexport const clearHighlight = (elStr, markType) => {\n  const elHighlight = $(`.${elStr}.as400-highlight`);\n  let newHighlight = elHighlight.html();\n  newHighlight = newHighlight.replace(`<as400-${markType}>`, \"\").replace(`</as400-${markType}>`, \"\");\n  elHighlight.html(newHighlight);\n};\n\nconst getAS400Cursor = posStr => {\n  const posArr = posStr.split(\",\");\n  return {\n    row: parseInt(posArr[0]),\n    col: parseInt(posArr[1])\n  };\n};\n\nexport const setAS400Cursor = (elStr, data) => {\n  const pos = getAS400Cursor(data);\n  const index = getIndexByRowCol(pos.row, pos.col);\n  this.setSelectionRange(elStr, index, index);\n};\nexport const convertRowColNumber = posStr => {\n  const posArr = posStr.trim().split(\",\");\n  return {\n    row: posArr[0],\n    col: posArr[1]\n  };\n};\nexport const getRowNumberByIndex = (elStr, index) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  return elScreen.val().substr(0, index).split(\"\\n\").length - 1;\n};\nexport const getColNumberByIndex = (elStr, index, colSize) => {\n  const row = this.getRowNumberByIndex(elStr, index);\n  const col = (index - row) % colSize;\n\n  if (index === colSize * (row + 1) + row) {\n    return colSize;\n  }\n\n  return col;\n};\nexport const setIndexByRowCol = (elStr, row, col) => {\n  const index = getIndexByRowCol(row, col);\n  this.setSelectionRange(elStr, index, index);\n};\nexport const getStartSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const startIndex = elScreen.prop(\"selectionStart\");\n  const rowSelectionStartIndex = this.getRowNumberByIndex(elStr, startIndex) + 1;\n  const colSelectionStartIndex = this.getColNumberByIndex(elStr, startIndex, colSize) + 1;\n  return {\n    row: rowSelectionStartIndex,\n    col: colSelectionStartIndex\n  };\n};\nexport const getEndSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const endIndex = elScreen.prop(\"selectionEnd\");\n  const rowSelectionEndIndex = this.getRowNumberByIndex(elStr, endIndex) + 1;\n  const colSelectionEndIndex = this.getColNumberByIndex(elStr, endIndex, colSize) + 1;\n  return {\n    row: rowSelectionEndIndex,\n    col: colSelectionEndIndex\n  };\n};\nexport const getSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n\n  if (selectionStart !== selectionEnd) {\n    const selection = elScreen.val().substring(selectionStart, selectionEnd);\n    return selection;\n  }\n\n  return \"\";\n};","map":{"version":3,"sources":["/Users/jutawuth/git/emulator/src/components/Emulator/controler.js"],"names":["$","getHighlightDefault","rowSize","colSize","textHighlight","i","j","getIndexByRowCol","row","setSelectionRange","elStr","selectionStart","selectionEnd","elScreen","start","end","createTextRange","range","collapse","moveEnd","moveStart","select","initScreen","attr","elScreenTemp","elStyle","elHighlight","html","setAs400Screen","data","val","setAs400Style","text","styleParams","style","textStyle","length","character","styleCharacter","isEmptyObject","replace","toLowerCase","clearHighlight","markType","newHighlight","getAS400Cursor","posStr","posArr","split","parseInt","col","setAS400Cursor","pos","index","convertRowColNumber","trim","getRowNumberByIndex","substr","getColNumberByIndex","setIndexByRowCol","getStartSelection","startIndex","prop","rowSelectionStartIndex","colSelectionStartIndex","getEndSelection","endIndex","rowSelectionEndIndex","colSelectionEndIndex","getSelectionRange","selection","substring"],"mappings":"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","sourcesContent":["import $ from \"jquery\";\n\nconst getHighlightDefault = (rowSize, colSize) => {\n  let textHighlight = \"\";\n  for (let i = 0; i < rowSize; i += 1) {\n    for (let j = 0; j < colSize; j += 1) {\n      textHighlight += \".\";\n    }\n    textHighlight += \"\\n\";\n  }\n  return textHighlight;\n};\n\nconst getIndexByRowCol = (row, colSize) => (row - 1) * 80 + colSize + row - 2;\n\nexport const setSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`)[0];\n\n  let start = selectionStart;\n  let end = selectionEnd;\n\n  start -= 1;\n  end -= 1;\n\n  // elScreen.focus();\n  if (elScreen.setSelectionRange) {\n    elScreen.setSelectionRange(start, end);\n  } else if (elScreen.createTextRange) {\n    const range = elScreen.createTextRange();\n    range.collapse(true);\n    range.moveEnd(\"character\", end);\n    range.moveStart(\"character\", start);\n    range.select();\n  }\n};\n\nexport const initScreen = (elStr, rowSize, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.attr(\"rows\", rowSize);\n  elScreen.attr(\"cols\", colSize);\n\n  const elScreenTemp = $(`.${elStr}.as400-screen-temp`);\n  elScreenTemp.attr(\"rows\", rowSize);\n  elScreenTemp.attr(\"cols\", colSize);\n\n  const elStyle = $(`.${elStr}.as400-style`);\n  elStyle.attr(\"rows\", rowSize);\n  elStyle.attr(\"cols\", colSize);\n\n  const elHighlight = $(`.${elStr}.as400-highlight`);\n  elHighlight.html(getHighlightDefault(rowSize, colSize));\n};\n\nexport const setAs400Screen = (elStr, data) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.val(data);\n};\n\nexport const setAs400Style = (elStr, text, styleParams) => {\n  const elStyle = $(`.${elStr}.as400-style`);\n\n  let style = styleParams;\n\n  let textStyle = \"\";\n  for (let i = 0; i < text.length; i += 1) {\n    const character = text[i];\n    const styleCharacter = style[i];\n\n    if (styleCharacter !== \".\" && !$.isEmptyObject(styleCharacter)) {\n      textStyle += character.replace(\n        character,\n        `<as400-${styleCharacter.toLowerCase()}-style>$&</as400-${styleCharacter.toLowerCase()}-style>`\n      );\n    } else {\n      textStyle += character;\n    }\n  }\n\n  $(elStyle).html(textStyle);\n};\n\nexport const clearHighlight = (elStr, markType) => {\n  const elHighlight = $(`.${elStr}.as400-highlight`);\n  let newHighlight = elHighlight.html();\n\n  newHighlight = newHighlight\n    .replace(`<as400-${markType}>`, \"\")\n    .replace(`</as400-${markType}>`, \"\");\n\n  elHighlight.html(newHighlight);\n};\n\nconst getAS400Cursor = posStr => {\n  const posArr = posStr.split(\",\");\n\n  return {\n    row: parseInt(posArr[0]),\n    col: parseInt(posArr[1])\n  };\n};\n\nexport const setAS400Cursor = (elStr, data) => {\n  const pos = getAS400Cursor(data);\n\n  const index = getIndexByRowCol(pos.row, pos.col);\n\n  this.setSelectionRange(elStr, index, index);\n};\n\nexport const convertRowColNumber = posStr => {\n  const posArr = posStr.trim().split(\",\");\n  return {\n    row: posArr[0],\n    col: posArr[1]\n  };\n};\n\nexport const getRowNumberByIndex = (elStr, index) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  return (\n    elScreen\n      .val()\n      .substr(0, index)\n      .split(\"\\n\").length - 1\n  );\n};\n\nexport const getColNumberByIndex = (elStr, index, colSize) => {\n  const row = this.getRowNumberByIndex(elStr, index);\n  const col = (index - row) % colSize;\n\n  if (index === colSize * (row + 1) + row) {\n    return colSize;\n  }\n  return col;\n};\n\nexport const setIndexByRowCol = (elStr, row, col) => {\n  const index = getIndexByRowCol(row, col);\n  this.setSelectionRange(elStr, index, index);\n};\n\nexport const getStartSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const startIndex = elScreen.prop(\"selectionStart\");\n\n  const rowSelectionStartIndex =\n    this.getRowNumberByIndex(elStr, startIndex) + 1;\n  const colSelectionStartIndex =\n    this.getColNumberByIndex(elStr, startIndex, colSize) + 1;\n\n  return {\n    row: rowSelectionStartIndex,\n    col: colSelectionStartIndex\n  };\n};\n\nexport const getEndSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const endIndex = elScreen.prop(\"selectionEnd\");\n  const rowSelectionEndIndex = this.getRowNumberByIndex(elStr, endIndex) + 1;\n  const colSelectionEndIndex =\n    this.getColNumberByIndex(elStr, endIndex, colSize) + 1;\n\n  return {\n    row: rowSelectionEndIndex,\n    col: colSelectionEndIndex\n  };\n};\n\nexport const getSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n\n  if (selectionStart !== selectionEnd) {\n    const selection = elScreen.val().substring(selectionStart, selectionEnd);\n    return selection;\n  }\n  return \"\";\n};\n"]},"metadata":{},"sourceType":"module"}