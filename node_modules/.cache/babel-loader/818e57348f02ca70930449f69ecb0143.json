{"ast":null,"code":"import _objectSpread from \"/Users/jutawuth/Git/SSQUARE/Component-AS400-React/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/components/FieldsMapping/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\nimport _ from \"lodash\";\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\nimport { getIndexByRowCol, getHighlightDefault, getSelectionRange, getStartSelection } from \"../Emulator/controler\";\nconst MARK_1 = \"mark-1\";\nexport class FieldsMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.clearAllMarkChackString = elStr => {\n      const _this$state = this.state,\n            rowSize = _this$state.rowSize,\n            colSize = _this$state.colSize;\n      const elHighlight = $(`.${elStr}.as400-highlight`);\n      elHighlight.html(getHighlightDefault(rowSize, colSize));\n      this.setState({\n        markList: {}\n      });\n    };\n\n    this.markStringChackString = (markType, highlight) => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n      newMarkList = _objectSpread({}, markList, {\n        [markType.replace(\"-\", \"\")]: highlight\n      });\n      this.setState({\n        markList: newMarkList\n      });\n      this.markAllCheckString(newMarkList);\n    };\n\n    this.clearMarkString = markType => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n      const markData = {};\n      newMarkList = _objectSpread({}, markList, {\n        [markType.replace(\"-\", \"\")]: markData\n      });\n      this.setState({\n        markList: newMarkList\n      });\n      this.markAllCheckString(newMarkList);\n    };\n\n    this.onMouseUp = callbackFn => {\n      const id = this.state.id;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.mouseup(event => {\n        // console.log(`| ========== ${event.type} ========== | `);\n        callbackFn(event);\n        this.clearAllMarkChackString(id);\n      });\n    };\n\n    this.onDoubleClick = callbackFn => {\n      const id = this.state.id;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.dblclick(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        callbackFn(event);\n      });\n    };\n\n    this.onSelect = () => {\n      const _this$state2 = this.state,\n            id = _this$state2.id,\n            colSize = _this$state2.colSize;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.select(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        const start = event.target.selectionStart;\n        const end = event.target.selectionEnd;\n        const startPosition = getStartSelection(id, colSize);\n        const data = {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        };\n        this.setState({\n          lastSelection: {\n            text: getSelectionRange(id, start, end),\n            row: startPosition.row,\n            col: startPosition.col\n          }\n        });\n        this.markStringChackString(MARK_1, data);\n      });\n    };\n\n    this.getFieldHighlight = () => {\n      const markType = MARK_1;\n      return this.state.markList[markType.replace(\"-\", \"\")];\n    };\n\n    this.setFieldHighlight = highlight => {\n      const markType = MARK_1;\n      console.log(\"highlight: \", highlight);\n      this.markStringChackString(markType, highlight);\n    };\n\n    this.clearFieldHighlight = () => {\n      const markType = MARK_1;\n      return this.clearMarkString(markType);\n    };\n\n    this.getLastSelection = () => {\n      return this.state.lastSelection;\n    };\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList,\n      lastSelection: {\n        startIndex: 0,\n        endIndex: 0\n      },\n      rowSize: props.rows,\n      colSize: props.cols\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n    this.markAllCheckString(this.props.highlight);\n    const _this$props = this.props,\n          onDoubleClick = _this$props.onDoubleClick,\n          onMouseUp = _this$props.onMouseUp;\n    this.onSelect();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  render() {\n    const id = this.props.id;\n    return React.createElement(EmulatorView, {\n      id: id,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    });\n  } // Set default props\n\n\n}\nFieldsMapping.defaultProps = {\n  highlight: {}\n};\nFieldsMapping.propTypes = {\n  highlightList: PropTypes.object\n};\nexport default FieldsMapping;","map":{"version":3,"sources":["/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/components/FieldsMapping/index.jsx"],"names":["React","PropTypes","$","_","Emulator","EmulatorView","getIndexByRowCol","getHighlightDefault","getSelectionRange","getStartSelection","MARK_1","FieldsMapping","constructor","props","clearAllMarkChackString","elStr","state","rowSize","colSize","elHighlight","html","setState","markList","markStringChackString","markType","highlight","newMarkList","replace","markAllCheckString","clearMarkString","markData","onMouseUp","callbackFn","id","elScreen","mouseup","event","onDoubleClick","dblclick","onSelect","select","start","target","selectionStart","end","selectionEnd","startPosition","data","text","row","col","lastSelection","getFieldHighlight","setFieldHighlight","console","log","clearFieldHighlight","getLastSelection","highlightList","startIndex","endIndex","rows","cols","componentDidMount","args","apply","render","defaultProps","propTypes","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport $ from \"jquery\";\nimport _ from \"lodash\";\n\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\n\nimport {\n  getIndexByRowCol,\n  getHighlightDefault,\n  getSelectionRange,\n  getStartSelection\n} from \"../Emulator/controler\";\n\nconst MARK_1 = \"mark-1\";\n\nexport class FieldsMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList,\n      lastSelection: {\n        startIndex: 0,\n        endIndex: 0\n      },\n      rowSize: props.rows,\n      colSize: props.cols\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n\n    this.markAllCheckString(this.props.highlight);\n\n    const { onDoubleClick, onMouseUp } = this.props;\n\n    this.onSelect();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  clearAllMarkChackString = elStr => {\n    const { rowSize, colSize } = this.state;\n    const elHighlight = $(`.${elStr}.as400-highlight`);\n    elHighlight.html(getHighlightDefault(rowSize, colSize));\n\n    this.setState({\n      markList: {}\n    });\n  };\n\n  markStringChackString = (markType, highlight) => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: highlight\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  clearMarkString = markType => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n    const markData = {};\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: markData\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  onMouseUp = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.mouseup(event => {\n      // console.log(`| ========== ${event.type} ========== | `);\n      callbackFn(event);\n      this.clearAllMarkChackString(id);\n    });\n  };\n\n  onDoubleClick = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.dblclick(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n\n      callbackFn(event);\n    });\n  };\n\n  onSelect = () => {\n    const { id, colSize } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.select(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      const start = event.target.selectionStart;\n      const end = event.target.selectionEnd;\n      const startPosition = getStartSelection(id, colSize);\n\n      const data = {\n        text: getSelectionRange(id, start, end),\n        row: startPosition.row,\n        col: startPosition.col\n      };\n\n      this.setState({\n        lastSelection: {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        }\n      });\n\n      this.markStringChackString(MARK_1, data);\n    });\n  };\n\n  /**\n   * ==================\n   *  provide function\n   * ==================\n   */\n  getFieldHighlight = () => {\n    const markType = MARK_1;\n    return this.state.markList[markType.replace(\"-\", \"\")];\n  };\n\n  setFieldHighlight = highlight => {\n    const markType = MARK_1;\n    console.log(\"highlight: \", highlight);\n\n    this.markStringChackString(markType, highlight);\n  };\n\n  clearFieldHighlight = () => {\n    const markType = MARK_1;\n    return this.clearMarkString(markType);\n  };\n\n  // getFieldHighlightList = () => {\n  //   return this.state.markList;\n  // };\n\n  // setFieldHighlightList = highlightList => {\n  //   this.markAllCheckString(highlightList);\n  // };\n\n  // clearFieldHighlightList = () => {\n  //   this.clearAllMarkChackString(this.props.id);\n  // };\n\n  getLastSelection = () => {\n    return this.state.lastSelection;\n  };\n\n  render() {\n    const { id } = this.props;\n    return <EmulatorView id={id} readOnly />;\n  }\n\n  // Set default props\n  static defaultProps = {\n    highlight: {}\n  };\n}\n\nFieldsMapping.propTypes = {\n  highlightList: PropTypes.object\n};\n\nexport default FieldsMapping;\n"]},"metadata":{},"sourceType":"module"}