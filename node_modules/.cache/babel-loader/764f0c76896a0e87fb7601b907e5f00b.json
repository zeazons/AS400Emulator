{"ast":null,"code":"var _jsxFileName = \"/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/App.js\";\nimport React, { useRef } from \"react\";\nimport Emulator from \"./components/Emulator\";\nimport ScreenMapping from \"./components/ScreenMapping\";\nimport { getSelectionRange, getStartSelection } from \"./components/Emulator/controler\";\n\nfunction App() {\n  const smRef = useRef();\n  const MARK1 = \"mark-1\";\n  const data = {\n    HEADER: {\n      tokenId: \"EWI112233445566\",\n      requestId: \"ABC123456789\",\n      deviceId: \"UUID9988776655\"\n    },\n    DATA: {\n      screen: {\n        rows: 24,\n        cols: 80\n      },\n      Text: \"                                   Sign On                                      \\n                                               System  . . . . . :   S101CD3M   \\n                                               Subsystem . . . . :   QINTER     \\n                                               Display . . . . . :   QPADEV003R \\n                                                                                \\n                User  . . . . . . . . . . . . . .                               \\n                Password  . . . . . . . . . . . .                               \\n                Program/procedure . . . . . . . .                               \\n                Menu  . . . . . . . . . . . . . .                               \\n                Current library . . . . . . . . .                               \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                        (C) COPYRIGHT IBM CORP. 1980, 2005.     \",\n      Style: \".................................RRRRRRRRRRRRR..................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n.........................................................UUUUUUUUUU.............\\n.........................................................HHHHHHHHHH.............\\n.........................................................UUUUUUUUUU.............\\n.........................................................UUUUUUUUUU.............\\n.........................................................UUUUUUUUUU.............\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\",\n      Cursor: \"5,53\"\n    }\n  };\n  const _data$DATA$screen = data.DATA.screen,\n        rows = _data$DATA$screen.rows,\n        cols = _data$DATA$screen.cols;\n  const _data$DATA = data.DATA,\n        text = _data$DATA.Text,\n        style = _data$DATA.Style,\n        cursor = _data$DATA.Cursor;\n  const highlightList = {\n    mark1: {\n      text: \"Sign On\",\n      row: 1,\n      col: 36\n    },\n    mark2: {\n      text: \"User\",\n      row: 6,\n      col: 17\n    },\n    mark3: {\n      text: \"(C) COPYRIGHT IBM CORP. 1980, 2005.\",\n      row: 24,\n      col: 41\n    }\n  };\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(ScreenMapping, {\n    id: \"flow2\",\n    ref: smRef,\n    rows: rows,\n    cols: cols,\n    text: text,\n    style: style,\n    cursor: cursor,\n    highlight: highlightList,\n    url: \"http://localhost:8085/emulator\",\n    readOnly: true,\n    onDoubleClick: event => {\n      console.log(`| ========== ${event.type} ========== |`);\n      const url = AS400ScreenConfig.url.url;\n      let eventKey = event.key;\n\n      if (event.keyCode >= 8 && event.keyCode < 48) {\n        eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n      }\n\n      const selected = getStartSelection(props.name, colSize);\n      const dataForApi = {\n        HEADER: {\n          tokenId: \"EWI112233445566\",\n          requestId: \"ABC123456789\",\n          deviceId: \"UUID9988776655\" // requestCount: this.resultCount\n\n        },\n        DATA: {\n          Event: \"SELECTION\",\n          KeyValue: eventKey,\n          Cursor: `${selected.row},${selected.col}`\n        }\n      };\n      Axios({\n        method: \"post\",\n        url,\n        data: JSON.stringify(dataForApi),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        // handle success\n        const data = response.data.DATA;\n        setAs400Screen(props.name, data.Text);\n        setAs400Style(props.name, data.Text, data.Style);\n        setAS400Cursor(props.name, data.Cursor); // clearAllMarkChackString(props.name);\n\n        const fields = data.Fields;\n        let selection = null;\n        const index = getAS400Cursor(data.Cursor);\n        fields.forEach(f => {\n          if (Math.abs(f.EndRow - f.StartRow) === 0) {\n            if (index.col >= f.StartCol && index.col <= f.EndCol && f.StartRow === index.row) {\n              selection = f;\n            }\n          }\n        });\n        const selectionStart = getIndexByRowCol(selection.StartRow, selection.StartCol);\n        const selectionEnd = getIndexByRowCol(selection.EndRow, selection.EndCol);\n        setSelectionRange(props.name, selectionStart, selectionEnd);\n      }).catch(response => {\n        // handle error\n        console.log(`response: ${response}`);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => smRef.current.setHighlightList(highlightList),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"highlight\"), React.createElement(\"button\", {\n    onClick: () => {\n      console.log(smRef.current.getHighlightList());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"get mark\"), React.createElement(\"button\", {\n    onClick: () => smRef.current.clearHighlightList(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"clear\"), React.createElement(\"button\", {\n    onClick: () => {\n      const highlight = smRef.current.getLastSelection();\n      smRef.current.setHighlight(MARK1, highlight);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"mark 1\"), React.createElement(\"button\", {\n    onClick: () => {\n      console.log(smRef.current.getHighlight(MARK1));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"get mark 1\"), React.createElement(\"button\", {\n    onClick: () => {\n      smRef.current.clearHighlight(MARK1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"clear mark 1\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/App.js"],"names":["React","useRef","Emulator","ScreenMapping","getSelectionRange","getStartSelection","App","smRef","MARK1","data","HEADER","tokenId","requestId","deviceId","DATA","screen","rows","cols","Text","Style","Cursor","text","style","cursor","highlightList","mark1","row","col","mark2","mark3","event","console","log","type","url","AS400ScreenConfig","eventKey","key","keyCode","toLowerCase","selected","props","name","colSize","dataForApi","Event","KeyValue","Axios","method","JSON","stringify","headers","then","response","setAs400Screen","setAs400Style","setAS400Cursor","fields","Fields","selection","index","getAS400Cursor","forEach","f","Math","abs","EndRow","StartRow","StartCol","EndCol","selectionStart","getIndexByRowCol","selectionEnd","setSelectionRange","catch","current","setHighlightList","getHighlightList","clearHighlightList","highlight","getLastSelection","setHighlight","getHighlight","clearHighlight"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport Emulator from \"./components/Emulator\";\nimport ScreenMapping from \"./components/ScreenMapping\";\n\nimport {\n  getSelectionRange,\n  getStartSelection\n} from \"./components/Emulator/controler\";\n\nfunction App() {\n  const smRef = useRef();\n  const MARK1 = \"mark-1\";\n\n  const data = {\n    HEADER: {\n      tokenId: \"EWI112233445566\",\n      requestId: \"ABC123456789\",\n      deviceId: \"UUID9988776655\"\n    },\n    DATA: {\n      screen: { rows: 24, cols: 80 },\n      Text:\n        \"                                   Sign On                                      \\n                                               System  . . . . . :   S101CD3M   \\n                                               Subsystem . . . . :   QINTER     \\n                                               Display . . . . . :   QPADEV003R \\n                                                                                \\n                User  . . . . . . . . . . . . . .                               \\n                Password  . . . . . . . . . . . .                               \\n                Program/procedure . . . . . . . .                               \\n                Menu  . . . . . . . . . . . . . .                               \\n                Current library . . . . . . . . .                               \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                        (C) COPYRIGHT IBM CORP. 1980, 2005.     \",\n      Style:\n        \".................................RRRRRRRRRRRRR..................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n.........................................................UUUUUUUUUU.............\\n.........................................................HHHHHHHHHH.............\\n.........................................................UUUUUUUUUU.............\\n.........................................................UUUUUUUUUU.............\\n.........................................................UUUUUUUUUU.............\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\",\n      Cursor: \"5,53\"\n    }\n  };\n\n  const { rows, cols } = data.DATA.screen;\n  const { Text: text, Style: style, Cursor: cursor } = data.DATA;\n  const highlightList = {\n    mark1: {\n      text: \"Sign On\",\n      row: 1,\n      col: 36\n    },\n    mark2: {\n      text: \"User\",\n      row: 6,\n      col: 17\n    },\n    mark3: {\n      text: \"(C) COPYRIGHT IBM CORP. 1980, 2005.\",\n      row: 24,\n      col: 41\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {/* <Emulator\n        id=\"flow\"\n        rows={rows}\n        cols={cols}\n        text={text}\n        style={style}\n        cursor={cursor}\n      /> */}\n      <br />\n      <div>\n        <ScreenMapping\n          id=\"flow2\"\n          ref={smRef}\n          rows={rows}\n          cols={cols}\n          text={text}\n          style={style}\n          cursor={cursor}\n          highlight={highlightList}\n          url=\"http://localhost:8085/emulator\"\n          readOnly\n          onDoubleClick={event => {\n            console.log(`| ========== ${event.type} ========== |`);\n\n            const { url } = AS400ScreenConfig.url;\n            let eventKey = event.key;\n            if (event.keyCode >= 8 && event.keyCode < 48) {\n              eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n            }\n            const selected = getStartSelection(props.name, colSize);\n            const dataForApi = {\n              HEADER: {\n                tokenId: \"EWI112233445566\",\n                requestId: \"ABC123456789\",\n                deviceId: \"UUID9988776655\"\n                // requestCount: this.resultCount\n              },\n              DATA: {\n                Event: \"SELECTION\",\n                KeyValue: eventKey,\n                Cursor: `${selected.row},${selected.col}`\n              }\n            };\n\n            Axios({\n              method: \"post\",\n              url,\n              data: JSON.stringify(dataForApi),\n              headers: { \"Content-Type\": \"application/json\" }\n            })\n              .then(response => {\n                // handle success\n                const data = response.data.DATA;\n\n                setAs400Screen(props.name, data.Text);\n                setAs400Style(props.name, data.Text, data.Style);\n                setAS400Cursor(props.name, data.Cursor);\n\n                // clearAllMarkChackString(props.name);\n\n                const fields = data.Fields;\n                let selection = null;\n\n                const index = getAS400Cursor(data.Cursor);\n                fields.forEach(f => {\n                  if (Math.abs(f.EndRow - f.StartRow) === 0) {\n                    if (\n                      index.col >= f.StartCol &&\n                      index.col <= f.EndCol &&\n                      f.StartRow === index.row\n                    ) {\n                      selection = f;\n                    }\n                  }\n                });\n\n                const selectionStart = getIndexByRowCol(\n                  selection.StartRow,\n                  selection.StartCol\n                );\n                const selectionEnd = getIndexByRowCol(\n                  selection.EndRow,\n                  selection.EndCol\n                );\n\n                setSelectionRange(props.name, selectionStart, selectionEnd);\n              })\n              .catch(response => {\n                // handle error\n                console.log(`response: ${response}`);\n              });\n          }}\n        />\n        <button onClick={() => smRef.current.setHighlightList(highlightList)}>\n          highlight\n        </button>\n        <button\n          onClick={() => {\n            console.log(smRef.current.getHighlightList());\n          }}\n        >\n          get mark\n        </button>\n        <button onClick={() => smRef.current.clearHighlightList()}>\n          clear\n        </button>\n        <button\n          onClick={() => {\n            const highlight = smRef.current.getLastSelection();\n            smRef.current.setHighlight(MARK1, highlight);\n          }}\n        >\n          mark 1\n        </button>\n        <button\n          onClick={() => {\n            console.log(smRef.current.getHighlight(MARK1));\n          }}\n        >\n          get mark 1\n        </button>\n        <button\n          onClick={() => {\n            smRef.current.clearHighlight(MARK1);\n          }}\n        >\n          clear mark 1\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}