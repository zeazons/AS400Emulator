{"ast":null,"code":"import _objectSpread from \"/Users/jutawuth/git/emulator/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/jutawuth/git/emulator/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jutawuth/git/emulator/src/components/Emulator.jsx\";\nimport React, { useState, useEffect, forwardRef, useImperativeHandle } from \"react\";\nimport $ from \"jquery\";\nimport _ from \"lodash\";\nimport Axios from \"axios\";\nimport AS400Screen, { getStartSelection, getEndSelection, getIndexByRowCol, setSelectionRange, setAs400Screen, setAs400Style, setAS400Cursor, getSelectionRange, getAS400Cursor, getHighlightDefault } from \"./EmulatorController\";\nvar url = \"http://localhost:8085/emulator\";\nconst Emulator = forwardRef((props, ref) => {\n  {\n    const elStr = !_.isEmpty(props.name) ? props.name : new Date().getTime().toString();\n    const MARK_1 = \"mark-1\";\n    const MARK_2 = \"mark-2\";\n    const MARK_3 = \"mark-3\"; // const [rowSize, setRowSize] = useState(24);\n\n    const _useState = useState(80),\n          _useState2 = _slicedToArray(_useState, 1),\n          colSize = _useState2[0];\n\n    const _useState3 = useState({\n      startIndex: 0,\n      endIndex: 0\n    }),\n          _useState4 = _slicedToArray(_useState3, 2),\n          lastSelection = _useState4[0],\n          setLastSelection = _useState4[1];\n\n    const _useState5 = useState(props.markList),\n          _useState6 = _slicedToArray(_useState5, 2),\n          markList = _useState6[0],\n          setMarkList = _useState6[1];\n\n    const getAllCheckString = () => markList;\n\n    const getStringChackString = markType => markList[markType.split(\"-\").join(\"\")];\n\n    const clearAllMarkChackString = () => {\n      const elHighlight = $(`.${elStr}.as400-highlight`);\n      elHighlight.html(getHighlightDefault(24, 80));\n      setMarkList({});\n    };\n\n    const markAllCheckString = markListData => {\n      clearAllMarkChackString();\n      setMarkList(markListData);\n      const elHighlight = $(`.${elStr}.as400-highlight`);\n      const text = elHighlight[0].innerHTML;\n      let textHighlight = \"\";\n\n      for (let i = 0; i < text.length; i += 1) {\n        if (!_.isEmpty(markListData.mark1) && i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col)) {\n          if (markListData.mark1.text.length < 2) {\n            textHighlight += `<as400-mark-1>${text[i]}</as400-mark-1>`;\n          } else {\n            textHighlight += `<as400-mark-1>${text[i]}`;\n          }\n        } else if (!_.isEmpty(markListData.mark1) && i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col) + markListData.mark1.text.length - 1) {\n          textHighlight += `${text[i]}</as400-mark-1>`;\n        } else if (!_.isEmpty(markListData.mark2) && i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col)) {\n          if (markListData.mark2.text.length < 2) {\n            textHighlight += `<as400-mark-2>${text[i]}</as400-mark-2>`;\n          } else {\n            textHighlight += `<as400-mark-2>${text[i]}`;\n          }\n        } else if (!_.isEmpty(markListData.mark2) && i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col) + markListData.mark2.text.length - 1) {\n          textHighlight += `${text[i]}</as400-mark-2>`;\n        } else if (!_.isEmpty(markListData.mark3) && i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col)) {\n          if (markListData.mark3.text.length < 2) {\n            textHighlight += `<as400-mark-3>${text[i]}</as400-mark-3>`;\n          } else {\n            textHighlight += `<as400-mark-3>${text[i]}`;\n          }\n        } else if (!_.isEmpty(markListData.mark3) && i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col) + markListData.mark3.text.length - 1) {\n          textHighlight += `${text[i]}</as400-mark-3>`;\n        } else {\n          textHighlight += text[i];\n        }\n      }\n\n      elHighlight.html(textHighlight);\n    };\n\n    const markStringChackString = markType => {\n      let newMarkList = \"\";\n      const markData = lastSelection; // const markData = {\n      //     text: markData.text,\n      //     row: markData.row,\n      //     col: markData.col\n      // };\n\n      switch (markType) {\n        case MARK_1:\n          newMarkList = _objectSpread({}, markList, {\n            mark1: markData\n          });\n          break;\n\n        case MARK_2:\n          newMarkList = _objectSpread({}, markList, {\n            mark2: markData\n          });\n          break;\n\n        case MARK_3:\n          newMarkList = _objectSpread({}, markList, {\n            mark3: markData\n          });\n          break;\n\n        default:\n          newMarkList = markList;\n          break;\n      }\n\n      setMarkList(newMarkList);\n      markAllCheckString(newMarkList);\n    };\n\n    const clearMarkString = markType => {\n      let newMarkList = \"\";\n      const markData = {};\n\n      switch (markType) {\n        case MARK_1:\n          newMarkList = _objectSpread({}, markList, {\n            mark1: markData\n          });\n          break;\n\n        case MARK_2:\n          newMarkList = _objectSpread({}, markList, {\n            mark2: markData\n          });\n          break;\n\n        case MARK_3:\n          newMarkList = _objectSpread({}, markList, {\n            mark3: markData\n          });\n          break;\n\n        default:\n          newMarkList = markList;\n          break;\n      }\n\n      setMarkList(newMarkList);\n      markAllCheckString(newMarkList);\n    };\n\n    const onMouseUp = () => {\n      const elScreen = $(`.${props.name}.as400-screen`);\n      elScreen.mouseup(() => {\n        // console.log(`| ========== ${event.type} ========== | `);\n        const startSelection = getStartSelection(props.name, colSize);\n        const endSelection = getEndSelection(props.name, colSize);\n        const flag = \"field\"; // const flag = 'list';\n\n        if (flag === \"list\") {\n          const selectionStart = getIndexByRowCol(startSelection.row, 0) + 1;\n          const selectionEnd = getIndexByRowCol(endSelection.row, colSize) + 2;\n          setSelectionRange(props.name, selectionStart, selectionEnd);\n        }\n      });\n    };\n\n    const onKeyDown = () => {\n      const elScreen = $(`.${props.name}.as400-screen`); // const data = props.as400ScreenData;\n      // const colSize = data.DATA.screen.cols;\n\n      elScreen.keydown(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        if (event.keyCode === 9 || event.keyCode > 111 && event.keyCode !== 123) {\n          event.preventDefault();\n        }\n\n        const url = url;\n        let eventKey = event.key;\n        const selected = getStartSelection(props.name, colSize);\n\n        if (event.keyCode >= 8 && event.keyCode < 48) {\n          eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n        }\n\n        const dataForApi = {\n          HEADER: {\n            tokenId: \"EWI112233445566\",\n            requestId: \"ABC123456789\",\n            deviceId: \"UUID9988776655\" // requestCount: this.resultCount\n\n          },\n          DATA: {\n            Event: \"KEYDOWN\",\n            KeyValue: eventKey,\n            Cursor: `${selected.row},${selected.col}`\n          }\n        };\n        Axios({\n          method: \"post\",\n          url,\n          data: JSON.stringify(dataForApi),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(response => {\n          // handle success\n          const data = response.data.DATA;\n          setAs400Screen(props.name, data.Text);\n          setAs400Style(props.name, data.Text, data.Style);\n          setAS400Cursor(props.name, data.Cursor);\n          clearAllMarkChackString(props.name);\n        }).catch(response => {\n          // handle error\n          console.log(`response: ${response}`);\n        });\n      });\n    };\n\n    const onDoubleClick = () => {\n      const elScreen = $(`.${props.name}.as400-screen`);\n      elScreen.dblclick(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        const url = url;\n        let eventKey = event.key;\n\n        if (event.keyCode >= 8 && event.keyCode < 48) {\n          eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n        }\n\n        const selected = getStartSelection(props.name, colSize);\n        const dataForApi = {\n          HEADER: {\n            tokenId: \"EWI112233445566\",\n            requestId: \"ABC123456789\",\n            deviceId: \"UUID9988776655\" // requestCount: this.resultCount\n\n          },\n          DATA: {\n            Event: \"SELECTION\",\n            KeyValue: eventKey,\n            Cursor: `${selected.row},${selected.col}`\n          }\n        };\n        Axios({\n          method: \"post\",\n          url,\n          data: JSON.stringify(dataForApi),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(response => {\n          // handle success\n          const data = response.data.DATA;\n          setAs400Screen(props.name, data.Text);\n          setAs400Style(props.name, data.Text, data.Style);\n          setAS400Cursor(props.name, data.Cursor); // clearAllMarkChackString(props.name);\n\n          const fields = data.Fields;\n          let selection = null;\n          const index = getAS400Cursor(data.Cursor);\n          fields.forEach(f => {\n            if (Math.abs(f.EndRow - f.StartRow) === 0) {\n              if (index.col >= f.StartCol && index.col <= f.EndCol && f.StartRow === index.row) {\n                selection = f;\n              }\n            }\n          });\n          const selectionStart = getIndexByRowCol(selection.StartRow, selection.StartCol);\n          const selectionEnd = getIndexByRowCol(selection.EndRow, selection.EndCol);\n          setSelectionRange(props.name, selectionStart, selectionEnd);\n        }).catch(response => {\n          // handle error\n          console.log(`response: ${response}`);\n        });\n      });\n    };\n\n    const onSelect = () => {\n      const elScreen = $(`.${props.name}.as400-screen`);\n      elScreen.select(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        const start = event.target.selectionStart;\n        const end = event.target.selectionEnd;\n        const startPosition = getStartSelection(props.name, colSize);\n        setLastSelection({\n          text: getSelectionRange(elStr, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        });\n      });\n    };\n\n    useEffect(() => {\n      onMouseUp();\n      onKeyDown();\n      onDoubleClick();\n      onSelect();\n    }, []);\n    useImperativeHandle(ref, () => ({\n      getAllCheckString,\n      markAllCheckString,\n      clearAllMarkChackString,\n      getStringChackString,\n      markStringChackString,\n      clearMarkString\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(AS400Screen, {\n      name: elStr,\n      as400ScreenData: props.as400ScreenData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }));\n  }\n});\nexport default Emulator;","map":{"version":3,"sources":["/Users/jutawuth/git/emulator/src/components/Emulator.jsx"],"names":["React","useState","useEffect","forwardRef","useImperativeHandle","$","_","Axios","AS400Screen","getStartSelection","getEndSelection","getIndexByRowCol","setSelectionRange","setAs400Screen","setAs400Style","setAS400Cursor","getSelectionRange","getAS400Cursor","getHighlightDefault","url","Emulator","props","ref","elStr","isEmpty","name","Date","getTime","toString","MARK_1","MARK_2","MARK_3","colSize","startIndex","endIndex","lastSelection","setLastSelection","markList","setMarkList","getAllCheckString","getStringChackString","markType","split","join","clearAllMarkChackString","elHighlight","html","markAllCheckString","markListData","text","innerHTML","textHighlight","i","length","mark1","row","col","mark2","mark3","markStringChackString","newMarkList","markData","clearMarkString","onMouseUp","elScreen","mouseup","startSelection","endSelection","flag","selectionStart","selectionEnd","onKeyDown","keydown","event","keyCode","preventDefault","eventKey","key","selected","toLowerCase","dataForApi","HEADER","tokenId","requestId","deviceId","DATA","Event","KeyValue","Cursor","method","data","JSON","stringify","headers","then","response","Text","Style","catch","console","log","onDoubleClick","dblclick","fields","Fields","selection","index","forEach","f","Math","abs","EndRow","StartRow","StartCol","EndCol","onSelect","select","start","target","end","startPosition","as400ScreenData"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useEffect,\n  forwardRef,\n  useImperativeHandle\n} from \"react\";\nimport $ from \"jquery\";\nimport _ from \"lodash\";\nimport Axios from \"axios\";\n\nimport AS400Screen, {\n  getStartSelection,\n  getEndSelection,\n  getIndexByRowCol,\n  setSelectionRange,\n  setAs400Screen,\n  setAs400Style,\n  setAS400Cursor,\n  getSelectionRange,\n  getAS400Cursor,\n  getHighlightDefault\n} from \"./EmulatorController\";\n\nvar url = \"http://localhost:8085/emulator\";\n\nconst Emulator = forwardRef((props, ref) => {\n  {\n    const elStr = !_.isEmpty(props.name)\n      ? props.name\n      : new Date().getTime().toString();\n\n    const MARK_1 = \"mark-1\";\n    const MARK_2 = \"mark-2\";\n    const MARK_3 = \"mark-3\";\n\n    // const [rowSize, setRowSize] = useState(24);\n    const [colSize] = useState(80);\n    const [lastSelection, setLastSelection] = useState({\n      startIndex: 0,\n      endIndex: 0\n    });\n\n    const [markList, setMarkList] = useState(props.markList);\n\n    const getAllCheckString = () => markList;\n\n    const getStringChackString = markType =>\n      markList[markType.split(\"-\").join(\"\")];\n\n    const clearAllMarkChackString = () => {\n      const elHighlight = $(`.${elStr}.as400-highlight`);\n      elHighlight.html(getHighlightDefault(24, 80));\n\n      setMarkList({});\n    };\n\n    const markAllCheckString = markListData => {\n      clearAllMarkChackString();\n      setMarkList(markListData);\n\n      const elHighlight = $(`.${elStr}.as400-highlight`);\n      const text = elHighlight[0].innerHTML;\n      let textHighlight = \"\";\n      for (let i = 0; i < text.length; i += 1) {\n        if (\n          !_.isEmpty(markListData.mark1) &&\n          i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col)\n        ) {\n          if (markListData.mark1.text.length < 2) {\n            textHighlight += `<as400-mark-1>${text[i]}</as400-mark-1>`;\n          } else {\n            textHighlight += `<as400-mark-1>${text[i]}`;\n          }\n        } else if (\n          !_.isEmpty(markListData.mark1) &&\n          i ===\n            getIndexByRowCol(markListData.mark1.row, markListData.mark1.col) +\n              markListData.mark1.text.length -\n              1\n        ) {\n          textHighlight += `${text[i]}</as400-mark-1>`;\n        } else if (\n          !_.isEmpty(markListData.mark2) &&\n          i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col)\n        ) {\n          if (markListData.mark2.text.length < 2) {\n            textHighlight += `<as400-mark-2>${text[i]}</as400-mark-2>`;\n          } else {\n            textHighlight += `<as400-mark-2>${text[i]}`;\n          }\n        } else if (\n          !_.isEmpty(markListData.mark2) &&\n          i ===\n            getIndexByRowCol(markListData.mark2.row, markListData.mark2.col) +\n              markListData.mark2.text.length -\n              1\n        ) {\n          textHighlight += `${text[i]}</as400-mark-2>`;\n        } else if (\n          !_.isEmpty(markListData.mark3) &&\n          i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col)\n        ) {\n          if (markListData.mark3.text.length < 2) {\n            textHighlight += `<as400-mark-3>${text[i]}</as400-mark-3>`;\n          } else {\n            textHighlight += `<as400-mark-3>${text[i]}`;\n          }\n        } else if (\n          !_.isEmpty(markListData.mark3) &&\n          i ===\n            getIndexByRowCol(markListData.mark3.row, markListData.mark3.col) +\n              markListData.mark3.text.length -\n              1\n        ) {\n          textHighlight += `${text[i]}</as400-mark-3>`;\n        } else {\n          textHighlight += text[i];\n        }\n      }\n\n      elHighlight.html(textHighlight);\n    };\n\n    const markStringChackString = markType => {\n      let newMarkList = \"\";\n\n      const markData = lastSelection;\n\n      // const markData = {\n      //     text: markData.text,\n      //     row: markData.row,\n      //     col: markData.col\n      // };\n\n      switch (markType) {\n        case MARK_1:\n          newMarkList = {\n            ...markList,\n            mark1: markData\n          };\n          break;\n        case MARK_2:\n          newMarkList = {\n            ...markList,\n            mark2: markData\n          };\n          break;\n        case MARK_3:\n          newMarkList = {\n            ...markList,\n            mark3: markData\n          };\n          break;\n\n        default:\n          newMarkList = markList;\n          break;\n      }\n\n      setMarkList(newMarkList);\n\n      markAllCheckString(newMarkList);\n    };\n\n    const clearMarkString = markType => {\n      let newMarkList = \"\";\n\n      const markData = {};\n\n      switch (markType) {\n        case MARK_1:\n          newMarkList = {\n            ...markList,\n            mark1: markData\n          };\n          break;\n        case MARK_2:\n          newMarkList = {\n            ...markList,\n            mark2: markData\n          };\n          break;\n        case MARK_3:\n          newMarkList = {\n            ...markList,\n            mark3: markData\n          };\n          break;\n\n        default:\n          newMarkList = markList;\n          break;\n      }\n\n      setMarkList(newMarkList);\n      markAllCheckString(newMarkList);\n    };\n\n    const onMouseUp = () => {\n      const elScreen = $(`.${props.name}.as400-screen`);\n\n      elScreen.mouseup(() => {\n        // console.log(`| ========== ${event.type} ========== | `);\n        const startSelection = getStartSelection(props.name, colSize);\n        const endSelection = getEndSelection(props.name, colSize);\n\n        const flag = \"field\";\n        // const flag = 'list';\n        if (flag === \"list\") {\n          const selectionStart = getIndexByRowCol(startSelection.row, 0) + 1;\n          const selectionEnd = getIndexByRowCol(endSelection.row, colSize) + 2;\n\n          setSelectionRange(props.name, selectionStart, selectionEnd);\n        }\n      });\n    };\n\n    const onKeyDown = () => {\n      const elScreen = $(`.${props.name}.as400-screen`);\n\n      // const data = props.as400ScreenData;\n      // const colSize = data.DATA.screen.cols;\n\n      elScreen.keydown(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        if (\n          event.keyCode === 9 ||\n          (event.keyCode > 111 && event.keyCode !== 123)\n        ) {\n          event.preventDefault();\n        }\n\n        const url = url;\n        let eventKey = event.key;\n        const selected = getStartSelection(props.name, colSize);\n        if (event.keyCode >= 8 && event.keyCode < 48) {\n          eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n        }\n        const dataForApi = {\n          HEADER: {\n            tokenId: \"EWI112233445566\",\n            requestId: \"ABC123456789\",\n            deviceId: \"UUID9988776655\"\n            // requestCount: this.resultCount\n          },\n          DATA: {\n            Event: \"KEYDOWN\",\n            KeyValue: eventKey,\n            Cursor: `${selected.row},${selected.col}`\n          }\n        };\n\n        Axios({\n          method: \"post\",\n          url,\n          data: JSON.stringify(dataForApi),\n          headers: { \"Content-Type\": \"application/json\" }\n        })\n          .then(response => {\n            // handle success\n            const data = response.data.DATA;\n\n            setAs400Screen(props.name, data.Text);\n            setAs400Style(props.name, data.Text, data.Style);\n            setAS400Cursor(props.name, data.Cursor);\n\n            clearAllMarkChackString(props.name);\n          })\n          .catch(response => {\n            // handle error\n            console.log(`response: ${response}`);\n          });\n      });\n    };\n\n    const onDoubleClick = () => {\n      const elScreen = $(`.${props.name}.as400-screen`);\n\n      elScreen.dblclick(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n\n        const url = url;\n        let eventKey = event.key;\n        if (event.keyCode >= 8 && event.keyCode < 48) {\n          eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n        }\n        const selected = getStartSelection(props.name, colSize);\n        const dataForApi = {\n          HEADER: {\n            tokenId: \"EWI112233445566\",\n            requestId: \"ABC123456789\",\n            deviceId: \"UUID9988776655\"\n            // requestCount: this.resultCount\n          },\n          DATA: {\n            Event: \"SELECTION\",\n            KeyValue: eventKey,\n            Cursor: `${selected.row},${selected.col}`\n          }\n        };\n\n        Axios({\n          method: \"post\",\n          url,\n          data: JSON.stringify(dataForApi),\n          headers: { \"Content-Type\": \"application/json\" }\n        })\n          .then(response => {\n            // handle success\n            const data = response.data.DATA;\n\n            setAs400Screen(props.name, data.Text);\n            setAs400Style(props.name, data.Text, data.Style);\n            setAS400Cursor(props.name, data.Cursor);\n\n            // clearAllMarkChackString(props.name);\n\n            const fields = data.Fields;\n            let selection = null;\n\n            const index = getAS400Cursor(data.Cursor);\n            fields.forEach(f => {\n              if (Math.abs(f.EndRow - f.StartRow) === 0) {\n                if (\n                  index.col >= f.StartCol &&\n                  index.col <= f.EndCol &&\n                  f.StartRow === index.row\n                ) {\n                  selection = f;\n                }\n              }\n            });\n\n            const selectionStart = getIndexByRowCol(\n              selection.StartRow,\n              selection.StartCol\n            );\n            const selectionEnd = getIndexByRowCol(\n              selection.EndRow,\n              selection.EndCol\n            );\n\n            setSelectionRange(props.name, selectionStart, selectionEnd);\n          })\n          .catch(response => {\n            // handle error\n            console.log(`response: ${response}`);\n          });\n      });\n    };\n\n    const onSelect = () => {\n      const elScreen = $(`.${props.name}.as400-screen`);\n\n      elScreen.select(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        const start = event.target.selectionStart;\n        const end = event.target.selectionEnd;\n        const startPosition = getStartSelection(props.name, colSize);\n\n        setLastSelection({\n          text: getSelectionRange(elStr, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        });\n      });\n    };\n\n    useEffect(() => {\n      onMouseUp();\n      onKeyDown();\n      onDoubleClick();\n      onSelect();\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n      getAllCheckString,\n      markAllCheckString,\n      clearAllMarkChackString,\n      getStringChackString,\n      markStringChackString,\n      clearMarkString\n    }));\n\n    return (\n      <div>\n        <AS400Screen\n          name={elStr}\n          as400ScreenData={props.as400ScreenData}\n        ></AS400Screen>\n      </div>\n    );\n  }\n});\n\nexport default Emulator;\n"]},"metadata":{},"sourceType":"module"}