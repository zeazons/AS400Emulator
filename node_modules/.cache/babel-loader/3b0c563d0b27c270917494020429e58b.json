{"ast":null,"code":"import _objectSpread from \"/Users/jutawuth/git/emulator/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jutawuth/git/emulator/src/components/ScreenMapping/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\nimport _ from \"lodash\";\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\nimport { getIndexByRowCol, getHighlightDefault } from \"../Emulator/controler\";\nexport class ScreenMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.markAllCheckString = markListData => {\n      this.clearAllMarkChackString(this.state.id);\n      this.setState({\n        markList: markListData\n      });\n      const elHighlight = $(`.${this.state.id}.as400-highlight`);\n      const text = elHighlight[0].innerHTML;\n      let textHighlight = \"\";\n\n      for (let i = 0; i < text.length; i += 1) {\n        console.log(\"markListData: \", markListData);\n\n        if (!_.isEmpty(markListData.mark1) && i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col)) {\n          if (markListData.mark1.text.length < 2) {\n            textHighlight += `<as400-mark-1>${text[i]}</as400-mark-1>`;\n          } else {\n            textHighlight += `<as400-mark-1>${text[i]}`;\n          }\n        } else if (!_.isEmpty(markListData.mark1) && i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col) + markListData.mark1.text.length - 1) {\n          textHighlight += `${text[i]}</as400-mark-1>`;\n        } else if (!_.isEmpty(markListData.mark2) && i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col)) {\n          if (markListData.mark2.text.length < 2) {\n            textHighlight += `<as400-mark-2>${text[i]}</as400-mark-2>`;\n          } else {\n            textHighlight += `<as400-mark-2>${text[i]}`;\n          }\n        } else if (!_.isEmpty(markListData.mark2) && i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col) + markListData.mark2.text.length - 1) {\n          textHighlight += `${text[i]}</as400-mark-2>`;\n        } else if (!_.isEmpty(markListData.mark3) && i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col)) {\n          if (markListData.mark3.text.length < 2) {\n            textHighlight += `<as400-mark-3>${text[i]}</as400-mark-3>`;\n          } else {\n            textHighlight += `<as400-mark-3>${text[i]}`;\n          }\n        } else if (!_.isEmpty(markListData.mark3) && i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col) + markListData.mark3.text.length - 1) {\n          textHighlight += `${text[i]}</as400-mark-3>`;\n        } else {\n          textHighlight += text[i];\n        }\n      }\n\n      elHighlight.html(textHighlight);\n    };\n\n    this.clearAllMarkChackString = elStr => {\n      const elHighlight = $(`.${elStr}.as400-highlight`);\n      elHighlight.html(getHighlightDefault(24, 80));\n      this.setState({\n        markList: {}\n      });\n    };\n\n    this.markStringChackString = (markType, highlight) => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n      newMarkList = _objectSpread({}, markList, {\n        [markType.replace(\"-\", \"\")]: highlight\n      });\n      this.setState({\n        markList: newMarkList\n      });\n      this.markAllCheckString(newMarkList);\n    };\n\n    this.clearMarkString = markType => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n      const markData = {};\n      newMarkList = _objectSpread({}, markList, {\n        [markType.replace(\"-\", \"\")]: markData\n      });\n      this.setState({\n        markList: newMarkList\n      });\n      this.markAllCheckString(newMarkList);\n    };\n\n    this.getHighlight = markType => {\n      return this.state.markList[markType.replace(\"-\", \"\")];\n    };\n\n    this.setHighlight = (markType, highlight) => {\n      this.markStringChackString(markType, highlight);\n    };\n\n    this.clearHighlight = markType => {\n      return this.clearMarkString(markType);\n    };\n\n    this.getHighlightList = () => {\n      return this.state.markList;\n    };\n\n    this.setHighlightList = highlightList => {\n      this.markAllCheckString(highlightList);\n    };\n\n    this.clearHighlightList = () => {\n      this.clearAllMarkChackString(this.props.id);\n    };\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n    this.markAllCheckString(this.props.highlight);\n  }\n\n  render() {\n    const _this$props = this.props,\n          id = _this$props.id,\n          readOnly = _this$props.readOnly;\n    return React.createElement(EmulatorView, {\n      id: id,\n      readOnly: readOnly,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    });\n  } // Set default props\n\n\n}\nScreenMapping.defaultProps = {\n  highlight: {}\n};\nScreenMapping.propTypes = {\n  highlightList: PropTypes.object\n};\nexport default ScreenMapping;","map":{"version":3,"sources":["/Users/jutawuth/git/emulator/src/components/ScreenMapping/index.jsx"],"names":["React","PropTypes","$","_","Emulator","EmulatorView","getIndexByRowCol","getHighlightDefault","ScreenMapping","constructor","props","markAllCheckString","markListData","clearAllMarkChackString","state","id","setState","markList","elHighlight","text","innerHTML","textHighlight","i","length","console","log","isEmpty","mark1","row","col","mark2","mark3","html","elStr","markStringChackString","markType","highlight","newMarkList","replace","clearMarkString","markData","getHighlight","setHighlight","clearHighlight","getHighlightList","setHighlightList","highlightList","clearHighlightList","componentDidMount","args","apply","render","readOnly","defaultProps","propTypes","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport $ from \"jquery\";\nimport _ from \"lodash\";\n\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\n\nimport { getIndexByRowCol, getHighlightDefault } from \"../Emulator/controler\";\n\nexport class ScreenMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n\n    this.markAllCheckString(this.props.highlight);\n  }\n\n  markAllCheckString = markListData => {\n    this.clearAllMarkChackString(this.state.id);\n    this.setState({\n      markList: markListData\n    });\n\n    const elHighlight = $(`.${this.state.id}.as400-highlight`);\n    const text = elHighlight[0].innerHTML;\n    let textHighlight = \"\";\n    for (let i = 0; i < text.length; i += 1) {\n      console.log(\"markListData: \", markListData);\n\n      if (\n        !_.isEmpty(markListData.mark1) &&\n        i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col)\n      ) {\n        if (markListData.mark1.text.length < 2) {\n          textHighlight += `<as400-mark-1>${text[i]}</as400-mark-1>`;\n        } else {\n          textHighlight += `<as400-mark-1>${text[i]}`;\n        }\n      } else if (\n        !_.isEmpty(markListData.mark1) &&\n        i ===\n          getIndexByRowCol(markListData.mark1.row, markListData.mark1.col) +\n            markListData.mark1.text.length -\n            1\n      ) {\n        textHighlight += `${text[i]}</as400-mark-1>`;\n      } else if (\n        !_.isEmpty(markListData.mark2) &&\n        i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col)\n      ) {\n        if (markListData.mark2.text.length < 2) {\n          textHighlight += `<as400-mark-2>${text[i]}</as400-mark-2>`;\n        } else {\n          textHighlight += `<as400-mark-2>${text[i]}`;\n        }\n      } else if (\n        !_.isEmpty(markListData.mark2) &&\n        i ===\n          getIndexByRowCol(markListData.mark2.row, markListData.mark2.col) +\n            markListData.mark2.text.length -\n            1\n      ) {\n        textHighlight += `${text[i]}</as400-mark-2>`;\n      } else if (\n        !_.isEmpty(markListData.mark3) &&\n        i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col)\n      ) {\n        if (markListData.mark3.text.length < 2) {\n          textHighlight += `<as400-mark-3>${text[i]}</as400-mark-3>`;\n        } else {\n          textHighlight += `<as400-mark-3>${text[i]}`;\n        }\n      } else if (\n        !_.isEmpty(markListData.mark3) &&\n        i ===\n          getIndexByRowCol(markListData.mark3.row, markListData.mark3.col) +\n            markListData.mark3.text.length -\n            1\n      ) {\n        textHighlight += `${text[i]}</as400-mark-3>`;\n      } else {\n        textHighlight += text[i];\n      }\n    }\n\n    elHighlight.html(textHighlight);\n  };\n\n  clearAllMarkChackString = elStr => {\n    const elHighlight = $(`.${elStr}.as400-highlight`);\n    elHighlight.html(getHighlightDefault(24, 80));\n\n    this.setState({\n      markList: {}\n    });\n  };\n\n  markStringChackString = (markType, highlight) => {\n    let newMarkList = \"\";\n\n    const markList = this.state.markList;\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: highlight\n    };\n\n    this.setState({ markList: newMarkList });\n\n    this.markAllCheckString(newMarkList);\n  };\n\n  clearMarkString = markType => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n\n    const markData = {};\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: markData\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  /**\n   * ================\n   * provide function\n   * ================\n   */\n  getHighlight = markType => {\n    return this.state.markList[markType.replace(\"-\", \"\")];\n  };\n\n  setHighlight = (markType, highlight) => {\n    this.markStringChackString(markType, highlight);\n  };\n\n  clearHighlight = markType => {\n    return this.clearMarkString(markType);\n  };\n\n  getHighlightList = () => {\n    return this.state.markList;\n  };\n\n  setHighlightList = highlightList => {\n    this.markAllCheckString(highlightList);\n  };\n\n  clearHighlightList = () => {\n    this.clearAllMarkChackString(this.props.id);\n  };\n\n  render() {\n    const { id, readOnly } = this.props;\n    return <EmulatorView id={id} readOnly={readOnly} />;\n  }\n\n  // Set default props\n  static defaultProps = {\n    highlight: {}\n  };\n}\n\nScreenMapping.propTypes = {\n  highlightList: PropTypes.object\n};\n\nexport default ScreenMapping;\n"]},"metadata":{},"sourceType":"module"}