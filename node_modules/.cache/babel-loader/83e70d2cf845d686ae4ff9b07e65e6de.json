{"ast":null,"code":"import _objectSpread from \"/Users/jutawuth/Git/SSQUARE/Component-AS400-React/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/components/ListMapping/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\nimport { getHighlightDefault, getSelectionRange, getStartSelection, markAllCheckStringOnScreen } from \"../Emulator/controler\";\nconst MARK_1 = \"mark-1\";\nconst MARK_3 = \"mark-3\";\nexport class ListMapping extends Emulator {\n  constructor(...args) {\n    super(...args);\n\n    this.clearMarkString = markType => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n      const markData = {};\n      newMarkList = _objectSpread({}, markList, {\n        [markType.replace(\"-\", \"\")]: markData\n      });\n      this.setState({\n        markList: newMarkList\n      });\n      this.markAllCheckString(newMarkList);\n    };\n\n    this.onMouseUp = callbackFn => {\n      const id = this.state.id;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.mouseup(event => {\n        // console.log(`| ========== ${event.type} ========== | `);\n        callbackFn(event);\n        this.clearAllMarkChackString(id);\n      });\n    };\n\n    this.onDoubleClick = callbackFn => {\n      const id = this.state.id;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.dblclick(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        callbackFn(event);\n      });\n    };\n\n    this.onSelect = () => {\n      const _this$state = this.state,\n            id = _this$state.id,\n            colSize = _this$state.colSize;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.select(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        const start = event.target.selectionStart;\n        const end = event.target.selectionEnd;\n        const startPosition = getStartSelection(id, colSize);\n        const data = {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        };\n        this.setState({\n          lastSelection: {\n            text: getSelectionRange(id, start, end),\n            row: startPosition.row,\n            col: startPosition.col\n          }\n        });\n\n        if (data.text.length < colSize) {\n          this.markStringChackString(MARK_3, data);\n        } else if (data.col === 1 && data.text.length >= colSize) {\n          this.markStringChackString(MARK_1, data);\n        }\n      });\n    };\n\n    this.getListHighlight = () => {\n      const markType = MARK_1;\n      return this.state.markList[markType.replace(\"-\", \"\")];\n    };\n\n    this.setListHighlight = highlight => {\n      this.markStringChackString(MARK_1, highlight);\n    };\n\n    this.clearListHighlight = () => {\n      return this.clearMarkString(MARK_1);\n    };\n\n    this.getFieldHighlight = () => {\n      return this.state.markList[MARK_3.replace(\"-\", \"\")];\n    };\n\n    this.setFieldHighlight = highlight => {\n      this.markStringChackString(MARK_3, highlight);\n    };\n\n    this.clearFieldHighlight = () => {\n      return this.clearMarkString(MARK_3);\n    };\n\n    this.getLastSelection = () => {\n      return this.state.lastSelection;\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n    this.markAllCheckString(this.props.highlight);\n    const _this$props = this.props,\n          onDoubleClick = _this$props.onDoubleClick,\n          onMouseUp = _this$props.onMouseUp;\n    this.onSelect();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  render() {\n    const id = this.props.id;\n    return React.createElement(EmulatorView, {\n      id: id,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    });\n  } // Set default props\n\n\n}\nListMapping.defaultProps = {\n  highlight: {}\n};\nListMapping.propTypes = {\n  highlightList: PropTypes.object\n};\nexport default ListMapping;","map":{"version":3,"sources":["/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/components/ListMapping/index.jsx"],"names":["React","PropTypes","$","Emulator","EmulatorView","getHighlightDefault","getSelectionRange","getStartSelection","markAllCheckStringOnScreen","MARK_1","MARK_3","ListMapping","clearMarkString","markType","newMarkList","markList","state","markData","replace","setState","markAllCheckString","onMouseUp","callbackFn","id","elScreen","mouseup","event","clearAllMarkChackString","onDoubleClick","dblclick","onSelect","colSize","select","start","target","selectionStart","end","selectionEnd","startPosition","data","text","row","col","lastSelection","length","markStringChackString","getListHighlight","setListHighlight","highlight","clearListHighlight","getFieldHighlight","setFieldHighlight","clearFieldHighlight","getLastSelection","componentDidMount","args","apply","props","render","defaultProps","propTypes","highlightList","object"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAEA,SACEC,mBADF,EAEEC,iBAFF,EAGEC,iBAHF,EAIEC,0BAJF,QAKO,uBALP;AAOA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,MAAM,GAAG,QAAf;AAEA,OAAO,MAAMC,WAAN,SAA0BR,QAA1B,CAAmC;AAAA;AAAA;;AAAA,SAaxCS,eAbwC,GAatBC,QAAQ,IAAI;AAC5B,UAAIC,WAAW,GAAG,EAAlB;AACA,YAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWD,QAA5B;AACA,YAAME,QAAQ,GAAG,EAAjB;AAEAH,MAAAA,WAAW,qBACNC,QADM;AAET,SAACF,QAAQ,CAACK,OAAT,CAAiB,GAAjB,EAAsB,EAAtB,CAAD,GAA6BD;AAFpB,QAAX;AAKA,WAAKE,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAED;AAAZ,OAAd;AACA,WAAKM,kBAAL,CAAwBN,WAAxB;AACD,KAzBuC;;AAAA,SA2BxCO,SA3BwC,GA2B5BC,UAAU,IAAI;AAAA,YAChBC,EADgB,GACT,KAAKP,KADI,CAChBO,EADgB;AAExB,YAAMC,QAAQ,GAAGtB,CAAC,CAAE,IAAGqB,EAAG,eAAR,CAAlB;AAEAC,MAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAK,IAAI;AACxB;AACAJ,QAAAA,UAAU,CAACI,KAAD,CAAV;AACA,aAAKC,uBAAL,CAA6BJ,EAA7B;AACD,OAJD;AAKD,KApCuC;;AAAA,SAsCxCK,aAtCwC,GAsCxBN,UAAU,IAAI;AAAA,YACpBC,EADoB,GACb,KAAKP,KADQ,CACpBO,EADoB;AAE5B,YAAMC,QAAQ,GAAGtB,CAAC,CAAE,IAAGqB,EAAG,eAAR,CAAlB;AAEAC,MAAAA,QAAQ,CAACK,QAAT,CAAkBH,KAAK,IAAI;AACzB;AAEAJ,QAAAA,UAAU,CAACI,KAAD,CAAV;AACD,OAJD;AAKD,KA/CuC;;AAAA,SAiDxCI,QAjDwC,GAiD7B,MAAM;AAAA,0BACS,KAAKd,KADd;AAAA,YACPO,EADO,eACPA,EADO;AAAA,YACHQ,OADG,eACHA,OADG;AAEf,YAAMP,QAAQ,GAAGtB,CAAC,CAAE,IAAGqB,EAAG,eAAR,CAAlB;AAEAC,MAAAA,QAAQ,CAACQ,MAAT,CAAgBN,KAAK,IAAI;AACvB;AACA,cAAMO,KAAK,GAAGP,KAAK,CAACQ,MAAN,CAAaC,cAA3B;AACA,cAAMC,GAAG,GAAGV,KAAK,CAACQ,MAAN,CAAaG,YAAzB;AACA,cAAMC,aAAa,GAAG/B,iBAAiB,CAACgB,EAAD,EAAKQ,OAAL,CAAvC;AAEA,cAAMQ,IAAI,GAAG;AACXC,UAAAA,IAAI,EAAElC,iBAAiB,CAACiB,EAAD,EAAKU,KAAL,EAAYG,GAAZ,CADZ;AAEXK,UAAAA,GAAG,EAAEH,aAAa,CAACG,GAFR;AAGXC,UAAAA,GAAG,EAAEJ,aAAa,CAACI;AAHR,SAAb;AAMA,aAAKvB,QAAL,CAAc;AACZwB,UAAAA,aAAa,EAAE;AACbH,YAAAA,IAAI,EAAElC,iBAAiB,CAACiB,EAAD,EAAKU,KAAL,EAAYG,GAAZ,CADV;AAEbK,YAAAA,GAAG,EAAEH,aAAa,CAACG,GAFN;AAGbC,YAAAA,GAAG,EAAEJ,aAAa,CAACI;AAHN;AADH,SAAd;;AAQA,YAAIH,IAAI,CAACC,IAAL,CAAUI,MAAV,GAAmBb,OAAvB,EAAgC;AAC9B,eAAKc,qBAAL,CAA2BnC,MAA3B,EAAmC6B,IAAnC;AACD,SAFD,MAEO,IAAIA,IAAI,CAACG,GAAL,KAAa,CAAb,IAAkBH,IAAI,CAACC,IAAL,CAAUI,MAAV,IAAoBb,OAA1C,EAAmD;AACxD,eAAKc,qBAAL,CAA2BpC,MAA3B,EAAmC8B,IAAnC;AACD;AACF,OAzBD;AA0BD,KA/EuC;;AAAA,SAsFxCO,gBAtFwC,GAsFrB,MAAM;AACvB,YAAMjC,QAAQ,GAAGJ,MAAjB;AACA,aAAO,KAAKO,KAAL,CAAWD,QAAX,CAAoBF,QAAQ,CAACK,OAAT,CAAiB,GAAjB,EAAsB,EAAtB,CAApB,CAAP;AACD,KAzFuC;;AAAA,SA2FxC6B,gBA3FwC,GA2FrBC,SAAS,IAAI;AAC9B,WAAKH,qBAAL,CAA2BpC,MAA3B,EAAmCuC,SAAnC;AACD,KA7FuC;;AAAA,SA+FxCC,kBA/FwC,GA+FnB,MAAM;AACzB,aAAO,KAAKrC,eAAL,CAAqBH,MAArB,CAAP;AACD,KAjGuC;;AAAA,SAmGxCyC,iBAnGwC,GAmGpB,MAAM;AACxB,aAAO,KAAKlC,KAAL,CAAWD,QAAX,CAAoBL,MAAM,CAACQ,OAAP,CAAe,GAAf,EAAoB,EAApB,CAApB,CAAP;AACD,KArGuC;;AAAA,SAuGxCiC,iBAvGwC,GAuGpBH,SAAS,IAAI;AAC/B,WAAKH,qBAAL,CAA2BnC,MAA3B,EAAmCsC,SAAnC;AACD,KAzGuC;;AAAA,SA2GxCI,mBA3GwC,GA2GlB,MAAM;AAC1B,aAAO,KAAKxC,eAAL,CAAqBF,MAArB,CAAP;AACD,KA7GuC;;AAAA,SA2HxC2C,gBA3HwC,GA2HrB,MAAM;AACvB,aAAO,KAAKrC,KAAL,CAAW2B,aAAlB;AACD,KA7HuC;AAAA;;AACxCW,EAAAA,iBAAiB,CAAC,GAAGC,IAAJ,EAAU;AACzB,UAAMD,iBAAN,CAAwBE,KAAxB,CAA8B,IAA9B,EAAoCD,IAApC;AAEA,SAAKnC,kBAAL,CAAwB,KAAKqC,KAAL,CAAWT,SAAnC;AAHyB,wBAKY,KAAKS,KALjB;AAAA,UAKjB7B,aALiB,eAKjBA,aALiB;AAAA,UAKFP,SALE,eAKFA,SALE;AAOzB,SAAKS,QAAL;AACA,SAAKT,SAAL,CAAeA,SAAf;AACA,SAAKO,aAAL,CAAmBA,aAAnB;AACD;;AAoHD8B,EAAAA,MAAM,GAAG;AAAA,UACCnC,EADD,GACQ,KAAKkC,KADb,CACClC,EADD;AAEP,WAAO,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAEA,EAAlB;AAAsB,MAAA,QAAQ,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAlIuC,CAoIxC;;;AApIwC;AAA7BZ,W,CAqIJgD,Y,GAAe;AACpBX,EAAAA,SAAS,EAAE;AADS,C;AAKxBrC,WAAW,CAACiD,SAAZ,GAAwB;AACtBC,EAAAA,aAAa,EAAE5D,SAAS,CAAC6D;AADH,CAAxB;AAIA,eAAenD,WAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\n\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\n\nimport {\n  getHighlightDefault,\n  getSelectionRange,\n  getStartSelection,\n  markAllCheckStringOnScreen\n} from \"../Emulator/controler\";\n\nconst MARK_1 = \"mark-1\";\nconst MARK_3 = \"mark-3\";\n\nexport class ListMapping extends Emulator {\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n\n    this.markAllCheckString(this.props.highlight);\n\n    const { onDoubleClick, onMouseUp } = this.props;\n\n    this.onSelect();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  clearMarkString = markType => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n    const markData = {};\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: markData\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  onMouseUp = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.mouseup(event => {\n      // console.log(`| ========== ${event.type} ========== | `);\n      callbackFn(event);\n      this.clearAllMarkChackString(id);\n    });\n  };\n\n  onDoubleClick = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.dblclick(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n\n      callbackFn(event);\n    });\n  };\n\n  onSelect = () => {\n    const { id, colSize } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.select(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      const start = event.target.selectionStart;\n      const end = event.target.selectionEnd;\n      const startPosition = getStartSelection(id, colSize);\n\n      const data = {\n        text: getSelectionRange(id, start, end),\n        row: startPosition.row,\n        col: startPosition.col\n      };\n\n      this.setState({\n        lastSelection: {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        }\n      });\n\n      if (data.text.length < colSize) {\n        this.markStringChackString(MARK_3, data);\n      } else if (data.col === 1 && data.text.length >= colSize) {\n        this.markStringChackString(MARK_1, data);\n      }\n    });\n  };\n\n  /**\n   * ==================\n   *  provide function\n   * ==================\n   */\n  getListHighlight = () => {\n    const markType = MARK_1;\n    return this.state.markList[markType.replace(\"-\", \"\")];\n  };\n\n  setListHighlight = highlight => {\n    this.markStringChackString(MARK_1, highlight);\n  };\n\n  clearListHighlight = () => {\n    return this.clearMarkString(MARK_1);\n  };\n\n  getFieldHighlight = () => {\n    return this.state.markList[MARK_3.replace(\"-\", \"\")];\n  };\n\n  setFieldHighlight = highlight => {\n    this.markStringChackString(MARK_3, highlight);\n  };\n\n  clearFieldHighlight = () => {\n    return this.clearMarkString(MARK_3);\n  };\n\n  // getListHighlightList = () => {\n  //   return this.state.markList;\n  // };\n\n  // setListHighlightList = highlightList => {\n  //   this.markAllCheckString(highlightList);\n  // };\n\n  // clearListHighlightList = () => {\n  //   this.clearAllMarkChackString(this.props.id);\n  // };\n\n  getLastSelection = () => {\n    return this.state.lastSelection;\n  };\n\n  render() {\n    const { id } = this.props;\n    return <EmulatorView id={id} readOnly />;\n  }\n\n  // Set default props\n  static defaultProps = {\n    highlight: {}\n  };\n}\n\nListMapping.propTypes = {\n  highlightList: PropTypes.object\n};\n\nexport default ListMapping;\n"]},"metadata":{},"sourceType":"module"}