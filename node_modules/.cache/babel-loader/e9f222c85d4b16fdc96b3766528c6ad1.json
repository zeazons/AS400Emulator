{"ast":null,"code":"var _jsxFileName = \"/Users/jutawuth/git/emulator/src/components/index.jsx\";\nimport React, { Component } from \"react\";\nimport $ from \"jquery\";\nimport \"../css/style.css\"; // import * as AS400Utils from \"./AS400Utils\";\n\nexport const getHighlightDefault = (rowSize, colSize) => {\n  let textHighlight = \"\";\n\n  for (let i = 0; i < rowSize; i += 1) {\n    for (let j = 0; j < colSize; j += 1) {\n      textHighlight += \".\";\n    }\n\n    textHighlight += \"\\n\";\n  }\n\n  return textHighlight;\n};\nexport const getIndexByRowCol = (row, colSize) => (row - 1) * 80 + colSize + row - 2;\nexport const setSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`)[0];\n  let start = selectionStart;\n  let end = selectionEnd;\n  start -= 1;\n  end -= 1; // elScreen.focus();\n\n  if (elScreen.setSelectionRange) {\n    elScreen.setSelectionRange(start, end);\n  } else if (elScreen.createTextRange) {\n    const range = elScreen.createTextRange();\n    range.collapse(true);\n    range.moveEnd(\"character\", end);\n    range.moveStart(\"character\", start);\n    range.select();\n  }\n};\nexport const initScreen = (elStr, rowSize, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.attr(\"rows\", rowSize);\n  elScreen.attr(\"cols\", colSize);\n  const elScreenTemp = $(`.${elStr}.as400-screen-temp`);\n  elScreenTemp.attr(\"rows\", rowSize);\n  elScreenTemp.attr(\"cols\", colSize);\n  const elStyle = $(`.${elStr}.as400-style`);\n  elStyle.attr(\"rows\", rowSize);\n  elStyle.attr(\"cols\", colSize);\n  const elHighlight = $(`.${elStr}.as400-highlight`);\n  elHighlight.html(getHighlightDefault(rowSize, colSize));\n};\nexport const setAs400Screen = (elStr, data) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  console.log(\"data: \", data);\n  elScreen.val(data);\n};\nexport const setAs400Style = (elStr, text, styleParams) => {\n  const elStyle = $(`.${elStr}.as400-style`); // let text = data.DATA.Text;\n  // let style = data.DATA.Style;//.split('\\n').join(\"\");\n\n  let style = styleParams;\n  style = `..................................RRRRRRRRRRRRR.................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n.........................................................UUUUUUUUUU.............↵\n.........................................................HHHHHHHHHH.............↵\n.........................................................UUUUUUUUUU.............↵\n.........................................................UUUUUUUUUU.............↵\n.........................................................UUUUUUUUUU.............↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................`; //           `............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ...........BBBBBBBBBBBBBBBBBBBB.............................................↵\n  // .................................RRRRRRRRRRRRR..............................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................`\n\n  style = style.split(\"\\n\").join(\"\");\n  let textStyle = \"\";\n\n  for (let i = 0; i < text.length; i += 1) {\n    const character = text[i];\n    const styleCharacter = style[i];\n\n    if (styleCharacter !== \".\" && styleCharacter !== \"↵\") {\n      textStyle += character.replace(character, `<as400-${styleCharacter.toLowerCase()}-style>$&</as400-${styleCharacter.toLowerCase()}-style>`);\n    } else {\n      textStyle += character;\n    }\n  }\n\n  $(elStyle).html(textStyle);\n};\nexport const clearHighlight = (elStr, markType) => {\n  const elHighlight = $(`.${elStr}.as400-highlight`);\n  let newHighlight = elHighlight.html();\n  newHighlight = newHighlight.replace(`<as400-${markType}>`, \"\").replace(`</as400-${markType}>`, \"\");\n  elHighlight.html(newHighlight);\n};\nexport const getAS400Cursor = posStr => {\n  const posArr = posStr.split(\",\");\n  return {\n    row: parseInt(posArr[0], 1),\n    col: parseInt(posArr[1], 1)\n  };\n};\nexport const setAS400Cursor = (elStr, data) => {\n  const pos = getAS400Cursor(data);\n  const index = getIndexByRowCol(pos.row, pos.col);\n  setSelectionRange(elStr, index, index);\n};\nexport const convertRowColNumber = posStr => {\n  const posArr = posStr.trim().split(\",\");\n  return {\n    row: posArr[0],\n    col: posArr[1]\n  };\n};\nexport const getRowNumberByIndex = (elStr, index) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  return elScreen.val().substr(0, index).split(\"\\n\").length - 1;\n};\nexport const getColNumberByIndex = (elStr, index, colSize) => {\n  const row = getRowNumberByIndex(elStr, index);\n  const col = (index - row) % colSize;\n\n  if (index === colSize * (row + 1) + row) {\n    return colSize;\n  }\n\n  return col;\n};\nexport const setIndexByRowCol = (elStr, row, col) => {\n  const index = getIndexByRowCol(row, col);\n  setSelectionRange(elStr, index, index);\n};\nexport const getStartSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const startIndex = elScreen.prop(\"selectionStart\");\n  const rowSelectionStartIndex = getRowNumberByIndex(elStr, startIndex) + 1;\n  const colSelectionStartIndex = getColNumberByIndex(elStr, startIndex, colSize) + 1;\n  return {\n    row: rowSelectionStartIndex,\n    col: colSelectionStartIndex\n  };\n};\nexport const getEndSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const endIndex = elScreen.prop(\"selectionEnd\");\n  const rowSelectionEndIndex = getRowNumberByIndex(elStr, endIndex) + 1;\n  const colSelectionEndIndex = getColNumberByIndex(elStr, endIndex, colSize) + 1;\n  return {\n    row: rowSelectionEndIndex,\n    col: colSelectionEndIndex\n  };\n};\nexport const getSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n\n  if (selectionStart !== selectionEnd) {\n    // selectionStart -= 1;\n    const selection = elScreen.val().substring(selectionStart, selectionEnd);\n    return selection;\n  }\n\n  return \"\";\n};\n\nclass AS400Screen extends Component {\n  constructor(props) {\n    super(props);\n    const id = props.id;\n    this.state = {\n      id: id\n    };\n  }\n\n  componentDidMount() {\n    const data = this.props.data;\n    const _data$DATA$screen = data.DATA.screen,\n          rows = _data$DATA$screen.rows,\n          cols = _data$DATA$screen.cols;\n    const text = data.DATA.Text;\n    const style = data.DATA.Style;\n    const cursor = data.DATA.Cursor;\n    initScreen(this.props.id, rows, cols);\n    setAs400Screen(this.props.id, text);\n    setAs400Style(this.props.id, text, style);\n    setAS400Cursor(this.props.id, cursor);\n  }\n\n  render() {\n    const id = this.props.id;\n    return React.createElement(\"div\", {\n      className: \"as400-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"as400-as400-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"screen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: `${id} as400-highlight`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: `${id} as400-style`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      className: `${id} as400-screen`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      className: `${id} as400-screen-temp`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default AS400Screen;","map":{"version":3,"sources":["/Users/jutawuth/git/emulator/src/components/index.jsx"],"names":["React","Component","$","getHighlightDefault","rowSize","colSize","textHighlight","i","j","getIndexByRowCol","row","setSelectionRange","elStr","selectionStart","selectionEnd","elScreen","start","end","createTextRange","range","collapse","moveEnd","moveStart","select","initScreen","attr","elScreenTemp","elStyle","elHighlight","html","setAs400Screen","data","console","log","val","setAs400Style","text","styleParams","style","split","join","textStyle","length","character","styleCharacter","replace","toLowerCase","clearHighlight","markType","newHighlight","getAS400Cursor","posStr","posArr","parseInt","col","setAS400Cursor","pos","index","convertRowColNumber","trim","getRowNumberByIndex","substr","getColNumberByIndex","setIndexByRowCol","getStartSelection","startIndex","prop","rowSelectionStartIndex","colSelectionStartIndex","getEndSelection","endIndex","rowSelectionEndIndex","colSelectionEndIndex","getSelectionRange","selection","substring","AS400Screen","constructor","props","id","state","componentDidMount","DATA","screen","rows","cols","Text","Style","cursor","Cursor","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport $ from \"jquery\";\n\nimport \"../css/style.css\";\n\n// import * as AS400Utils from \"./AS400Utils\";\n\nexport const getHighlightDefault = (rowSize, colSize) => {\n  let textHighlight = \"\";\n  for (let i = 0; i < rowSize; i += 1) {\n    for (let j = 0; j < colSize; j += 1) {\n      textHighlight += \".\";\n    }\n    textHighlight += \"\\n\";\n  }\n  return textHighlight;\n};\n\nexport const getIndexByRowCol = (row, colSize) =>\n  (row - 1) * 80 + colSize + row - 2;\n\nexport const setSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`)[0];\n\n  let start = selectionStart;\n  let end = selectionEnd;\n\n  start -= 1;\n  end -= 1;\n\n  // elScreen.focus();\n  if (elScreen.setSelectionRange) {\n    elScreen.setSelectionRange(start, end);\n  } else if (elScreen.createTextRange) {\n    const range = elScreen.createTextRange();\n    range.collapse(true);\n    range.moveEnd(\"character\", end);\n    range.moveStart(\"character\", start);\n    range.select();\n  }\n};\n\nexport const initScreen = (elStr, rowSize, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.attr(\"rows\", rowSize);\n  elScreen.attr(\"cols\", colSize);\n\n  const elScreenTemp = $(`.${elStr}.as400-screen-temp`);\n  elScreenTemp.attr(\"rows\", rowSize);\n  elScreenTemp.attr(\"cols\", colSize);\n\n  const elStyle = $(`.${elStr}.as400-style`);\n  elStyle.attr(\"rows\", rowSize);\n  elStyle.attr(\"cols\", colSize);\n\n  const elHighlight = $(`.${elStr}.as400-highlight`);\n  elHighlight.html(getHighlightDefault(rowSize, colSize));\n};\n\nexport const setAs400Screen = (elStr, data) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n\n  console.log(\"data: \", data);\n\n  elScreen.val(data);\n};\n\nexport const setAs400Style = (elStr, text, styleParams) => {\n  const elStyle = $(`.${elStr}.as400-style`);\n  // let text = data.DATA.Text;\n  // let style = data.DATA.Style;//.split('\\n').join(\"\");\n\n  let style = styleParams;\n  style = `..................................RRRRRRRRRRRRR.................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n.........................................................UUUUUUUUUU.............↵\n.........................................................HHHHHHHHHH.............↵\n.........................................................UUUUUUUUUU.............↵\n.........................................................UUUUUUUUUU.............↵\n.........................................................UUUUUUUUUU.............↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................↵\n................................................................................`;\n  //           `............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ...........BBBBBBBBBBBBBBBBBBBB.............................................↵\n  // .................................RRRRRRRRRRRRR..............................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................↵\n  // ............................................................................`\n\n  style = style.split(\"\\n\").join(\"\");\n\n  let textStyle = \"\";\n  for (let i = 0; i < text.length; i += 1) {\n    const character = text[i];\n    const styleCharacter = style[i];\n\n    if (styleCharacter !== \".\" && styleCharacter !== \"↵\") {\n      textStyle += character.replace(\n        character,\n        `<as400-${styleCharacter.toLowerCase()}-style>$&</as400-${styleCharacter.toLowerCase()}-style>`\n      );\n    } else {\n      textStyle += character;\n    }\n  }\n\n  $(elStyle).html(textStyle);\n};\n\nexport const clearHighlight = (elStr, markType) => {\n  const elHighlight = $(`.${elStr}.as400-highlight`);\n  let newHighlight = elHighlight.html();\n\n  newHighlight = newHighlight\n    .replace(`<as400-${markType}>`, \"\")\n    .replace(`</as400-${markType}>`, \"\");\n\n  elHighlight.html(newHighlight);\n};\n\nexport const getAS400Cursor = posStr => {\n  const posArr = posStr.split(\",\");\n  return {\n    row: parseInt(posArr[0], 1),\n    col: parseInt(posArr[1], 1)\n  };\n};\n\nexport const setAS400Cursor = (elStr, data) => {\n  const pos = getAS400Cursor(data);\n  const index = getIndexByRowCol(pos.row, pos.col);\n\n  setSelectionRange(elStr, index, index);\n};\n\nexport const convertRowColNumber = posStr => {\n  const posArr = posStr.trim().split(\",\");\n  return {\n    row: posArr[0],\n    col: posArr[1]\n  };\n};\n\nexport const getRowNumberByIndex = (elStr, index) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  return (\n    elScreen\n      .val()\n      .substr(0, index)\n      .split(\"\\n\").length - 1\n  );\n};\n\nexport const getColNumberByIndex = (elStr, index, colSize) => {\n  const row = getRowNumberByIndex(elStr, index);\n  const col = (index - row) % colSize;\n\n  if (index === colSize * (row + 1) + row) {\n    return colSize;\n  }\n  return col;\n};\n\nexport const setIndexByRowCol = (elStr, row, col) => {\n  const index = getIndexByRowCol(row, col);\n  setSelectionRange(elStr, index, index);\n};\n\nexport const getStartSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const startIndex = elScreen.prop(\"selectionStart\");\n\n  const rowSelectionStartIndex = getRowNumberByIndex(elStr, startIndex) + 1;\n  const colSelectionStartIndex =\n    getColNumberByIndex(elStr, startIndex, colSize) + 1;\n\n  return {\n    row: rowSelectionStartIndex,\n    col: colSelectionStartIndex\n  };\n};\n\nexport const getEndSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const endIndex = elScreen.prop(\"selectionEnd\");\n  const rowSelectionEndIndex = getRowNumberByIndex(elStr, endIndex) + 1;\n  const colSelectionEndIndex =\n    getColNumberByIndex(elStr, endIndex, colSize) + 1;\n\n  return {\n    row: rowSelectionEndIndex,\n    col: colSelectionEndIndex\n  };\n};\n\nexport const getSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n\n  if (selectionStart !== selectionEnd) {\n    // selectionStart -= 1;\n\n    const selection = elScreen.val().substring(selectionStart, selectionEnd);\n    return selection;\n  }\n  return \"\";\n};\n\nclass AS400Screen extends Component {\n  constructor(props) {\n    super(props);\n\n    const { id } = props;\n    this.state = {\n      id: id\n    };\n  }\n\n  componentDidMount() {\n    const data = this.props.data;\n\n    const { rows, cols } = data.DATA.screen;\n    const text = data.DATA.Text;\n    const style = data.DATA.Style;\n    const cursor = data.DATA.Cursor;\n\n    initScreen(this.props.id, rows, cols);\n    setAs400Screen(this.props.id, text);\n    setAs400Style(this.props.id, text, style);\n    setAS400Cursor(this.props.id, cursor);\n  }\n\n  render() {\n    const { id } = this.props;\n\n    return (\n      <div className=\"as400-container\">\n        <div className=\"as400-as400-area\">\n          <div className=\"screen\">\n            <div className={`${id} as400-highlight`}></div>\n            <div className={`${id} as400-style`}></div>\n            <textarea className={`${id} as400-screen`}></textarea>\n            <textarea className={`${id} as400-screen-temp`}></textarea>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default AS400Screen;\n"]},"metadata":{},"sourceType":"module"}