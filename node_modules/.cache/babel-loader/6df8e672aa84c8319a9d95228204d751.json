{"ast":null,"code":"var _jsxFileName = \"/Users/jutawuth/git/emulator/src/components/ScreenMapping/index.jsx\";\nimport React from \"react\";\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\nexport default class ScreenMapping extends Emulator {\n  constructor(...args) {\n    super(...args);\n\n    this.markAllCheckString = markListData => {\n      clearAllMarkChackString();\n      setMarkList(markListData);\n      const elHighlight = $(`.${elStr}.as400-highlight`);\n      const text = elHighlight[0].innerHTML;\n      let textHighlight = \"\";\n\n      for (let i = 0; i < text.length; i += 1) {\n        if (!_.isEmpty(markListData.mark1) && i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col)) {\n          if (markListData.mark1.text.length < 2) {\n            textHighlight += `<as400-mark-1>${text[i]}</as400-mark-1>`;\n          } else {\n            textHighlight += `<as400-mark-1>${text[i]}`;\n          }\n        } else if (!_.isEmpty(markListData.mark1) && i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col) + markListData.mark1.text.length - 1) {\n          textHighlight += `${text[i]}</as400-mark-1>`;\n        } else if (!_.isEmpty(markListData.mark2) && i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col)) {\n          if (markListData.mark2.text.length < 2) {\n            textHighlight += `<as400-mark-2>${text[i]}</as400-mark-2>`;\n          } else {\n            textHighlight += `<as400-mark-2>${text[i]}`;\n          }\n        } else if (!_.isEmpty(markListData.mark2) && i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col) + markListData.mark2.text.length - 1) {\n          textHighlight += `${text[i]}</as400-mark-2>`;\n        } else if (!_.isEmpty(markListData.mark3) && i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col)) {\n          if (markListData.mark3.text.length < 2) {\n            textHighlight += `<as400-mark-3>${text[i]}</as400-mark-3>`;\n          } else {\n            textHighlight += `<as400-mark-3>${text[i]}`;\n          }\n        } else if (!_.isEmpty(markListData.mark3) && i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col) + markListData.mark3.text.length - 1) {\n          textHighlight += `${text[i]}</as400-mark-3>`;\n        } else {\n          textHighlight += text[i];\n        }\n      }\n\n      elHighlight.html(textHighlight);\n    };\n  }\n\n  componentDidMount() {\n    this.print(this.props.params);\n  }\n\n  render() {\n    const _this$props = this.props,\n          id = _this$props.id,\n          readOnly = _this$props.readOnly;\n    return React.createElement(EmulatorView, {\n      id: id,\n      readOnly: readOnly,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/jutawuth/git/emulator/src/components/ScreenMapping/index.jsx"],"names":["React","Emulator","EmulatorView","ScreenMapping","markAllCheckString","markListData","clearAllMarkChackString","setMarkList","elHighlight","$","elStr","text","innerHTML","textHighlight","i","length","_","isEmpty","mark1","getIndexByRowCol","row","col","mark2","mark3","html","componentDidMount","print","props","params","render","id","readOnly"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\n\nexport default class ScreenMapping extends Emulator {\n  componentDidMount() {\n    this.print(this.props.params);\n  }\n\n  markAllCheckString = markListData => {\n    clearAllMarkChackString();\n    setMarkList(markListData);\n\n    const elHighlight = $(`.${elStr}.as400-highlight`);\n    const text = elHighlight[0].innerHTML;\n    let textHighlight = \"\";\n    for (let i = 0; i < text.length; i += 1) {\n      if (\n        !_.isEmpty(markListData.mark1) &&\n        i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col)\n      ) {\n        if (markListData.mark1.text.length < 2) {\n          textHighlight += `<as400-mark-1>${text[i]}</as400-mark-1>`;\n        } else {\n          textHighlight += `<as400-mark-1>${text[i]}`;\n        }\n      } else if (\n        !_.isEmpty(markListData.mark1) &&\n        i ===\n          getIndexByRowCol(markListData.mark1.row, markListData.mark1.col) +\n            markListData.mark1.text.length -\n            1\n      ) {\n        textHighlight += `${text[i]}</as400-mark-1>`;\n      } else if (\n        !_.isEmpty(markListData.mark2) &&\n        i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col)\n      ) {\n        if (markListData.mark2.text.length < 2) {\n          textHighlight += `<as400-mark-2>${text[i]}</as400-mark-2>`;\n        } else {\n          textHighlight += `<as400-mark-2>${text[i]}`;\n        }\n      } else if (\n        !_.isEmpty(markListData.mark2) &&\n        i ===\n          getIndexByRowCol(markListData.mark2.row, markListData.mark2.col) +\n            markListData.mark2.text.length -\n            1\n      ) {\n        textHighlight += `${text[i]}</as400-mark-2>`;\n      } else if (\n        !_.isEmpty(markListData.mark3) &&\n        i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col)\n      ) {\n        if (markListData.mark3.text.length < 2) {\n          textHighlight += `<as400-mark-3>${text[i]}</as400-mark-3>`;\n        } else {\n          textHighlight += `<as400-mark-3>${text[i]}`;\n        }\n      } else if (\n        !_.isEmpty(markListData.mark3) &&\n        i ===\n          getIndexByRowCol(markListData.mark3.row, markListData.mark3.col) +\n            markListData.mark3.text.length -\n            1\n      ) {\n        textHighlight += `${text[i]}</as400-mark-3>`;\n      } else {\n        textHighlight += text[i];\n      }\n    }\n\n    elHighlight.html(textHighlight);\n  };\n\n  render() {\n    const { id, readOnly } = this.props;\n    return <EmulatorView id={id} readOnly={readOnly} />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}