{"ast":null,"code":"import _objectSpread from \"/Users/jutawuth/git/emulator/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jutawuth/git/emulator/src/components/ScreenMapping/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\nimport _ from \"lodash\";\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\nimport { setAs400Screen, setAs400Style, setAS400Cursor, getIndexByRowCol, getHighlightDefault, getSelectionRange, setSelectionRange, getStartSelection, getEndSelection } from \"../Emulator/controler\";\nexport class ScreenMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.markAllCheckString = markListData => {\n      this.clearAllMarkChackString(this.state.id);\n      this.setState({\n        markList: markListData\n      });\n      const elHighlight = $(`.${this.state.id}.as400-highlight`);\n      const text = elHighlight[0].innerHTML;\n      let textHighlight = \"\";\n\n      for (let i = 0; i < text.length; i += 1) {\n        if (!_.isEmpty(markListData.mark1) && i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col)) {\n          if (markListData.mark1.text.length < 2) {\n            textHighlight += `<as400-mark-1>${text[i]}</as400-mark-1>`;\n          } else {\n            textHighlight += `<as400-mark-1>${text[i]}`;\n          }\n        } else if (!_.isEmpty(markListData.mark1) && i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col) + markListData.mark1.text.length - 1) {\n          textHighlight += `${text[i]}</as400-mark-1>`;\n        } else if (!_.isEmpty(markListData.mark2) && i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col)) {\n          if (markListData.mark2.text.length < 2) {\n            textHighlight += `<as400-mark-2>${text[i]}</as400-mark-2>`;\n          } else {\n            textHighlight += `<as400-mark-2>${text[i]}`;\n          }\n        } else if (!_.isEmpty(markListData.mark2) && i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col) + markListData.mark2.text.length - 1) {\n          textHighlight += `${text[i]}</as400-mark-2>`;\n        } else if (!_.isEmpty(markListData.mark3) && i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col)) {\n          if (markListData.mark3.text.length < 2) {\n            textHighlight += `<as400-mark-3>${text[i]}</as400-mark-3>`;\n          } else {\n            textHighlight += `<as400-mark-3>${text[i]}`;\n          }\n        } else if (!_.isEmpty(markListData.mark3) && i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col) + markListData.mark3.text.length - 1) {\n          textHighlight += `${text[i]}</as400-mark-3>`;\n        } else {\n          textHighlight += text[i];\n        }\n      }\n\n      elHighlight.html(textHighlight);\n    };\n\n    this.clearAllMarkChackString = elStr => {\n      const elHighlight = $(`.${elStr}.as400-highlight`);\n      elHighlight.html(getHighlightDefault(24, 80));\n      this.setState({\n        markList: {}\n      });\n    };\n\n    this.markStringChackString = (markType, highlight) => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n      newMarkList = _objectSpread({}, markList, {\n        [markType.replace(\"-\", \"\")]: highlight\n      });\n      this.setState({\n        markList: newMarkList\n      });\n      this.markAllCheckString(newMarkList);\n    };\n\n    this.clearMarkString = markType => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n      const markData = {};\n      newMarkList = _objectSpread({}, markList, {\n        [markType.replace(\"-\", \"\")]: markData\n      });\n      this.setState({\n        markList: newMarkList\n      });\n      this.markAllCheckString(newMarkList);\n    };\n\n    this.onMouseUp = (id, colSize) => {\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.mouseup(() => {\n        // console.log(`| ========== ${event.type} ========== | `);\n        const startSelection = getStartSelection(id, colSize);\n        const endSelection = getEndSelection(id, colSize);\n        const flag = \"field\"; // const flag = 'list';\n\n        if (flag === \"list\") {\n          const selectionStart = getIndexByRowCol(startSelection.row, 0) + 1;\n          const selectionEnd = getIndexByRowCol(endSelection.row, colSize) + 2;\n          setSelectionRange(id, selectionStart, selectionEnd);\n        }\n      });\n    };\n\n    this.onKeyDown = (id, colSize) => {\n      const elScreen = $(`.${id}.as400-screen`); // const data = props.as400ScreenData;\n      // const colSize = data.DATA.screen.cols;\n\n      elScreen.keydown(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        if (event.keyCode === 9 || event.keyCode > 111 && event.keyCode !== 123) {\n          event.preventDefault();\n        }\n\n        const url = \"http://localhost:8085/emulator\";\n        let eventKey = event.key;\n        const selected = getStartSelection(id, colSize);\n\n        if (event.keyCode >= 8 && event.keyCode < 48) {\n          eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n        }\n\n        const dataForApi = {\n          HEADER: {\n            tokenId: \"EWI112233445566\",\n            requestId: \"ABC123456789\",\n            deviceId: \"UUID9988776655\" // requestCount: this.resultCount\n\n          },\n          DATA: {\n            Event: \"KEYDOWN\",\n            KeyValue: eventKey,\n            Cursor: `${selected.row},${selected.col}`\n          }\n        };\n        Axios({\n          method: \"post\",\n          url,\n          data: JSON.stringify(dataForApi),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(response => {\n          // handle success\n          const data = response.data.DATA;\n          setAs400Screen(id, data.Text);\n          setAs400Style(id, data.Text, data.Style);\n          setAS400Cursor(id, data.Cursor);\n          this.clearAllMarkChackString(id);\n        }).catch(response => {\n          // handle error\n          console.log(`response: ${response}`);\n        });\n      });\n    };\n\n    this.onDoubleClick = (id, colSize) => {\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.dblclick(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        const url = AS400ScreenConfig.url.url;\n        let eventKey = event.key;\n\n        if (event.keyCode >= 8 && event.keyCode < 48) {\n          eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n        }\n\n        const selected = getStartSelection(id, colSize);\n        const dataForApi = {\n          HEADER: {\n            tokenId: \"EWI112233445566\",\n            requestId: \"ABC123456789\",\n            deviceId: \"UUID9988776655\" // requestCount: this.resultCount\n\n          },\n          DATA: {\n            Event: \"SELECTION\",\n            KeyValue: eventKey,\n            Cursor: `${selected.row},${selected.col}`\n          }\n        };\n        Axios({\n          method: \"post\",\n          url,\n          data: JSON.stringify(dataForApi),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(response => {\n          // handle success\n          const data = response.data.DATA;\n          setAs400Screen(id, data.Text);\n          setAs400Style(id, data.Text, data.Style);\n          setAS400Cursor(id, data.Cursor); // clearAllMarkChackString(id);\n\n          const fields = data.Fields;\n          let selection = null;\n          const index = getAS400Cursor(data.Cursor);\n          fields.forEach(f => {\n            if (Math.abs(f.EndRow - f.StartRow) === 0) {\n              if (index.col >= f.StartCol && index.col <= f.EndCol && f.StartRow === index.row) {\n                selection = f;\n              }\n            }\n          });\n          const selectionStart = getIndexByRowCol(selection.StartRow, selection.StartCol);\n          const selectionEnd = getIndexByRowCol(selection.EndRow, selection.EndCol);\n          setSelectionRange(id, selectionStart, selectionEnd);\n        }).catch(response => {\n          // handle error\n          console.log(`response: ${response}`);\n        });\n      });\n    };\n\n    this.onSelect = (id, colSize) => {\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.select(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        const start = event.target.selectionStart;\n        const end = event.target.selectionEnd;\n        const startPosition = getStartSelection(id, colSize);\n        this.setState({\n          lastSelection: {\n            text: getSelectionRange(id, start, end),\n            row: startPosition.row,\n            col: startPosition.col\n          }\n        });\n      });\n    };\n\n    this.getHighlight = markType => {\n      return this.state.markList[markType.replace(\"-\", \"\")];\n    };\n\n    this.setHighlight = (markType, highlight) => {\n      this.markStringChackString(markType, highlight);\n    };\n\n    this.clearHighlight = markType => {\n      return this.clearMarkString(markType);\n    };\n\n    this.getHighlightList = () => {\n      return this.state.markList;\n    };\n\n    this.setHighlightList = highlightList => {\n      this.markAllCheckString(highlightList);\n    };\n\n    this.clearHighlightList = () => {\n      this.clearAllMarkChackString(this.props.id);\n    };\n\n    this.getLastSelection = () => {\n      return this.state.lastSelection;\n    };\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList,\n      lastSelection: {\n        startIndex: 0,\n        endIndex: 0\n      }\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n    this.markAllCheckString(this.props.highlight);\n    const _this$props = this.props,\n          id = _this$props.id,\n          cols = _this$props.cols;\n    this.onSelect(id, cols);\n    this.onMouseUp(id, cols);\n    this.onKeyDown(id, cols);\n    this.onDoubleClick(id, cols);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          id = _this$props2.id,\n          readOnly = _this$props2.readOnly;\n    return React.createElement(EmulatorView, {\n      id: id,\n      readOnly: readOnly,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    });\n  } // Set default props\n\n\n}\nScreenMapping.defaultProps = {\n  highlight: {}\n};\nScreenMapping.propTypes = {\n  highlightList: PropTypes.object\n};\nexport default ScreenMapping;","map":{"version":3,"sources":["/Users/jutawuth/git/emulator/src/components/ScreenMapping/index.jsx"],"names":["React","PropTypes","$","_","Emulator","EmulatorView","setAs400Screen","setAs400Style","setAS400Cursor","getIndexByRowCol","getHighlightDefault","getSelectionRange","setSelectionRange","getStartSelection","getEndSelection","ScreenMapping","constructor","props","markAllCheckString","markListData","clearAllMarkChackString","state","id","setState","markList","elHighlight","text","innerHTML","textHighlight","i","length","isEmpty","mark1","row","col","mark2","mark3","html","elStr","markStringChackString","markType","highlight","newMarkList","replace","clearMarkString","markData","onMouseUp","colSize","elScreen","mouseup","startSelection","endSelection","flag","selectionStart","selectionEnd","onKeyDown","keydown","event","keyCode","preventDefault","url","eventKey","key","selected","toLowerCase","dataForApi","HEADER","tokenId","requestId","deviceId","DATA","Event","KeyValue","Cursor","Axios","method","data","JSON","stringify","headers","then","response","Text","Style","catch","console","log","onDoubleClick","dblclick","AS400ScreenConfig","fields","Fields","selection","index","getAS400Cursor","forEach","f","Math","abs","EndRow","StartRow","StartCol","EndCol","onSelect","select","start","target","end","startPosition","lastSelection","getHighlight","setHighlight","clearHighlight","getHighlightList","setHighlightList","highlightList","clearHighlightList","getLastSelection","startIndex","endIndex","componentDidMount","args","apply","cols","render","readOnly","defaultProps","propTypes","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport $ from \"jquery\";\nimport _ from \"lodash\";\n\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\n\nimport {\n  setAs400Screen,\n  setAs400Style,\n  setAS400Cursor,\n  getIndexByRowCol,\n  getHighlightDefault,\n  getSelectionRange,\n  setSelectionRange,\n  getStartSelection,\n  getEndSelection\n} from \"../Emulator/controler\";\n\nexport class ScreenMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList,\n      lastSelection: {\n        startIndex: 0,\n        endIndex: 0\n      }\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n    this.markAllCheckString(this.props.highlight);\n\n    const { id, cols } = this.props;\n    this.onSelect(id, cols);\n    this.onMouseUp(id, cols);\n    this.onKeyDown(id, cols);\n    this.onDoubleClick(id, cols);\n  }\n\n  markAllCheckString = markListData => {\n    this.clearAllMarkChackString(this.state.id);\n    this.setState({\n      markList: markListData\n    });\n\n    const elHighlight = $(`.${this.state.id}.as400-highlight`);\n    const text = elHighlight[0].innerHTML;\n    let textHighlight = \"\";\n    for (let i = 0; i < text.length; i += 1) {\n      if (\n        !_.isEmpty(markListData.mark1) &&\n        i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col)\n      ) {\n        if (markListData.mark1.text.length < 2) {\n          textHighlight += `<as400-mark-1>${text[i]}</as400-mark-1>`;\n        } else {\n          textHighlight += `<as400-mark-1>${text[i]}`;\n        }\n      } else if (\n        !_.isEmpty(markListData.mark1) &&\n        i ===\n          getIndexByRowCol(markListData.mark1.row, markListData.mark1.col) +\n            markListData.mark1.text.length -\n            1\n      ) {\n        textHighlight += `${text[i]}</as400-mark-1>`;\n      } else if (\n        !_.isEmpty(markListData.mark2) &&\n        i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col)\n      ) {\n        if (markListData.mark2.text.length < 2) {\n          textHighlight += `<as400-mark-2>${text[i]}</as400-mark-2>`;\n        } else {\n          textHighlight += `<as400-mark-2>${text[i]}`;\n        }\n      } else if (\n        !_.isEmpty(markListData.mark2) &&\n        i ===\n          getIndexByRowCol(markListData.mark2.row, markListData.mark2.col) +\n            markListData.mark2.text.length -\n            1\n      ) {\n        textHighlight += `${text[i]}</as400-mark-2>`;\n      } else if (\n        !_.isEmpty(markListData.mark3) &&\n        i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col)\n      ) {\n        if (markListData.mark3.text.length < 2) {\n          textHighlight += `<as400-mark-3>${text[i]}</as400-mark-3>`;\n        } else {\n          textHighlight += `<as400-mark-3>${text[i]}`;\n        }\n      } else if (\n        !_.isEmpty(markListData.mark3) &&\n        i ===\n          getIndexByRowCol(markListData.mark3.row, markListData.mark3.col) +\n            markListData.mark3.text.length -\n            1\n      ) {\n        textHighlight += `${text[i]}</as400-mark-3>`;\n      } else {\n        textHighlight += text[i];\n      }\n    }\n\n    elHighlight.html(textHighlight);\n  };\n\n  clearAllMarkChackString = elStr => {\n    const elHighlight = $(`.${elStr}.as400-highlight`);\n    elHighlight.html(getHighlightDefault(24, 80));\n\n    this.setState({\n      markList: {}\n    });\n  };\n\n  markStringChackString = (markType, highlight) => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: highlight\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  clearMarkString = markType => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n    const markData = {};\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: markData\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  onMouseUp = (id, colSize) => {\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.mouseup(() => {\n      // console.log(`| ========== ${event.type} ========== | `);\n      const startSelection = getStartSelection(id, colSize);\n      const endSelection = getEndSelection(id, colSize);\n\n      const flag = \"field\";\n      // const flag = 'list';\n      if (flag === \"list\") {\n        const selectionStart = getIndexByRowCol(startSelection.row, 0) + 1;\n        const selectionEnd = getIndexByRowCol(endSelection.row, colSize) + 2;\n\n        setSelectionRange(id, selectionStart, selectionEnd);\n      }\n    });\n  };\n\n  onKeyDown = (id, colSize) => {\n    const elScreen = $(`.${id}.as400-screen`);\n\n    // const data = props.as400ScreenData;\n    // const colSize = data.DATA.screen.cols;\n\n    elScreen.keydown(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      if (\n        event.keyCode === 9 ||\n        (event.keyCode > 111 && event.keyCode !== 123)\n      ) {\n        event.preventDefault();\n      }\n\n      const url = \"http://localhost:8085/emulator\";\n      let eventKey = event.key;\n      const selected = getStartSelection(id, colSize);\n      if (event.keyCode >= 8 && event.keyCode < 48) {\n        eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n      }\n      const dataForApi = {\n        HEADER: {\n          tokenId: \"EWI112233445566\",\n          requestId: \"ABC123456789\",\n          deviceId: \"UUID9988776655\"\n          // requestCount: this.resultCount\n        },\n        DATA: {\n          Event: \"KEYDOWN\",\n          KeyValue: eventKey,\n          Cursor: `${selected.row},${selected.col}`\n        }\n      };\n\n      Axios({\n        method: \"post\",\n        url,\n        data: JSON.stringify(dataForApi),\n        headers: { \"Content-Type\": \"application/json\" }\n      })\n        .then(response => {\n          // handle success\n          const data = response.data.DATA;\n\n          setAs400Screen(id, data.Text);\n          setAs400Style(id, data.Text, data.Style);\n          setAS400Cursor(id, data.Cursor);\n\n          this.clearAllMarkChackString(id);\n        })\n        .catch(response => {\n          // handle error\n          console.log(`response: ${response}`);\n        });\n    });\n  };\n\n  onDoubleClick = (id, colSize) => {\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.dblclick(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n\n      const { url } = AS400ScreenConfig.url;\n      let eventKey = event.key;\n      if (event.keyCode >= 8 && event.keyCode < 48) {\n        eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n      }\n      const selected = getStartSelection(id, colSize);\n      const dataForApi = {\n        HEADER: {\n          tokenId: \"EWI112233445566\",\n          requestId: \"ABC123456789\",\n          deviceId: \"UUID9988776655\"\n          // requestCount: this.resultCount\n        },\n        DATA: {\n          Event: \"SELECTION\",\n          KeyValue: eventKey,\n          Cursor: `${selected.row},${selected.col}`\n        }\n      };\n\n      Axios({\n        method: \"post\",\n        url,\n        data: JSON.stringify(dataForApi),\n        headers: { \"Content-Type\": \"application/json\" }\n      })\n        .then(response => {\n          // handle success\n          const data = response.data.DATA;\n\n          setAs400Screen(id, data.Text);\n          setAs400Style(id, data.Text, data.Style);\n          setAS400Cursor(id, data.Cursor);\n\n          // clearAllMarkChackString(id);\n\n          const fields = data.Fields;\n          let selection = null;\n\n          const index = getAS400Cursor(data.Cursor);\n          fields.forEach(f => {\n            if (Math.abs(f.EndRow - f.StartRow) === 0) {\n              if (\n                index.col >= f.StartCol &&\n                index.col <= f.EndCol &&\n                f.StartRow === index.row\n              ) {\n                selection = f;\n              }\n            }\n          });\n\n          const selectionStart = getIndexByRowCol(\n            selection.StartRow,\n            selection.StartCol\n          );\n          const selectionEnd = getIndexByRowCol(\n            selection.EndRow,\n            selection.EndCol\n          );\n\n          setSelectionRange(id, selectionStart, selectionEnd);\n        })\n        .catch(response => {\n          // handle error\n          console.log(`response: ${response}`);\n        });\n    });\n  };\n\n  onSelect = (id, colSize) => {\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.select(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      const start = event.target.selectionStart;\n      const end = event.target.selectionEnd;\n      const startPosition = getStartSelection(id, colSize);\n\n      this.setState({\n        lastSelection: {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        }\n      });\n    });\n  };\n\n  /**\n   * ==================\n   *  provide function\n   * ==================\n   */\n  getHighlight = markType => {\n    return this.state.markList[markType.replace(\"-\", \"\")];\n  };\n\n  setHighlight = (markType, highlight) => {\n    this.markStringChackString(markType, highlight);\n  };\n\n  clearHighlight = markType => {\n    return this.clearMarkString(markType);\n  };\n\n  getHighlightList = () => {\n    return this.state.markList;\n  };\n\n  setHighlightList = highlightList => {\n    this.markAllCheckString(highlightList);\n  };\n\n  clearHighlightList = () => {\n    this.clearAllMarkChackString(this.props.id);\n  };\n\n  getLastSelection = () => {\n    return this.state.lastSelection;\n  };\n\n  render() {\n    const { id, readOnly } = this.props;\n    return <EmulatorView id={id} readOnly={readOnly} />;\n  }\n\n  // Set default props\n  static defaultProps = {\n    highlight: {}\n  };\n}\n\nScreenMapping.propTypes = {\n  highlightList: PropTypes.object\n};\n\nexport default ScreenMapping;\n"]},"metadata":{},"sourceType":"module"}