{"ast":null,"code":"import $ from \"jquery\";\nexport const getHighlightDefault = (rowSize, colSize) => {\n  let textHighlight = \"\";\n\n  for (let i = 0; i < rowSize; i += 1) {\n    for (let j = 0; j < colSize; j += 1) {\n      textHighlight += \".\";\n    }\n\n    textHighlight += \"\\n\";\n  }\n\n  return textHighlight;\n};\nexport const getIndexByRowCol = (row, colSize) => (row - 1) * 80 + colSize + row - 2;\n\nconst setSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`)[0];\n  let start = selectionStart;\n  let end = selectionEnd;\n  start -= 1;\n  end -= 1; // elScreen.focus();\n\n  if (elScreen.setSelectionRange) {\n    elScreen.setSelectionRange(start, end);\n  } else if (elScreen.createTextRange) {\n    const range = elScreen.createTextRange();\n    range.collapse(true);\n    range.moveEnd(\"character\", end);\n    range.moveStart(\"character\", start);\n    range.select();\n  }\n};\n\nconst clearHighlight = (elStr, markType) => {\n  const elHighlight = $(`.${elStr}.as400-highlight`);\n  let newHighlight = elHighlight.html();\n  newHighlight = newHighlight.replace(`<as400-${markType}>`, \"\").replace(`</as400-${markType}>`, \"\");\n  elHighlight.html(newHighlight);\n};\n\nconst getAS400Cursor = posStr => {\n  const posArr = posStr.split(\",\");\n  return {\n    row: parseInt(posArr[0]),\n    col: parseInt(posArr[1])\n  };\n};\n\nconst convertRowColNumber = posStr => {\n  const posArr = posStr.trim().split(\",\");\n  return {\n    row: posArr[0],\n    col: posArr[1]\n  };\n};\n\nconst getRowNumberByIndex = (elStr, index) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  return elScreen.val().substr(0, index).split(\"\\n\").length - 1;\n};\n\nconst getColNumberByIndex = (elStr, index, colSize) => {\n  const row = getRowNumberByIndex(elStr, index);\n  const col = (index - row) % colSize;\n\n  if (index === colSize * (row + 1) + row) {\n    return colSize;\n  }\n\n  return col;\n};\n\nexport const setIndexByRowCol = (elStr, row, col) => {\n  const index = getIndexByRowCol(row, col);\n  setSelectionRange(elStr, index, index);\n};\nexport const getStartSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const startIndex = elScreen.prop(\"selectionStart\");\n  const rowSelectionStartIndex = getRowNumberByIndex(elStr, startIndex) + 1;\n  const colSelectionStartIndex = getColNumberByIndex(elStr, startIndex, colSize) + 1;\n  return {\n    row: rowSelectionStartIndex,\n    col: colSelectionStartIndex\n  };\n};\nexport const getEndSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const endIndex = elScreen.prop(\"selectionEnd\");\n  const rowSelectionEndIndex = getRowNumberByIndex(elStr, endIndex) + 1;\n  const colSelectionEndIndex = getColNumberByIndex(elStr, endIndex, colSize) + 1;\n  return {\n    row: rowSelectionEndIndex,\n    col: colSelectionEndIndex\n  };\n};\nexport const getSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n\n  if (selectionStart !== selectionEnd) {\n    const selection = elScreen.val().substring(selectionStart, selectionEnd);\n    return selection;\n  }\n\n  return \"\";\n};\nexport const initScreen = (elStr, rowSize, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.attr(\"rows\", rowSize);\n  elScreen.attr(\"cols\", colSize);\n  const elScreenTemp = $(`.${elStr}.as400-screen-temp`);\n  elScreenTemp.attr(\"rows\", rowSize);\n  elScreenTemp.attr(\"cols\", colSize);\n  const elStyle = $(`.${elStr}.as400-style`);\n  elStyle.attr(\"rows\", rowSize);\n  elStyle.attr(\"cols\", colSize);\n  const elHighlight = $(`.${elStr}.as400-highlight`);\n  elHighlight.html(getHighlightDefault(rowSize, colSize));\n};\nexport const setAs400Screen = (elStr, data) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.val(data);\n};\nexport const setAs400Style = (elStr, text, styleParams) => {\n  const elStyle = $(`.${elStr}.as400-style`);\n  let style = styleParams;\n  let textStyle = \"\";\n\n  for (let i = 0; i < text.length; i += 1) {\n    const character = text[i];\n    const styleCharacter = style[i];\n\n    if (styleCharacter !== \".\" && !$.isEmptyObject(styleCharacter)) {\n      textStyle += character.replace(character, `<as400-${styleCharacter.toLowerCase()}-style>$&</as400-${styleCharacter.toLowerCase()}-style>`);\n    } else {\n      textStyle += character;\n    }\n  }\n\n  $(elStyle).html(textStyle);\n};\nexport const setAS400Cursor = (elStr, data) => {\n  const pos = getAS400Cursor(data);\n  const index = getIndexByRowCol(pos.row, pos.col);\n  setSelectionRange(elStr, index, index);\n};","map":{"version":3,"sources":["/Users/jutawuth/git/emulator/src/components/Emulator/controler.js"],"names":["$","getHighlightDefault","rowSize","colSize","textHighlight","i","j","getIndexByRowCol","row","setSelectionRange","elStr","selectionStart","selectionEnd","elScreen","start","end","createTextRange","range","collapse","moveEnd","moveStart","select","clearHighlight","markType","elHighlight","newHighlight","html","replace","getAS400Cursor","posStr","posArr","split","parseInt","col","convertRowColNumber","trim","getRowNumberByIndex","index","val","substr","length","getColNumberByIndex","setIndexByRowCol","getStartSelection","startIndex","prop","rowSelectionStartIndex","colSelectionStartIndex","getEndSelection","endIndex","rowSelectionEndIndex","colSelectionEndIndex","getSelectionRange","selection","substring","initScreen","attr","elScreenTemp","elStyle","setAs400Screen","data","setAs400Style","text","styleParams","style","textStyle","character","styleCharacter","isEmptyObject","toLowerCase","setAS400Cursor","pos"],"mappings":"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","sourcesContent":["import $ from \"jquery\";\n\nexport const getHighlightDefault = (rowSize, colSize) => {\n  let textHighlight = \"\";\n  for (let i = 0; i < rowSize; i += 1) {\n    for (let j = 0; j < colSize; j += 1) {\n      textHighlight += \".\";\n    }\n    textHighlight += \"\\n\";\n  }\n  return textHighlight;\n};\n\nexport const getIndexByRowCol = (row, colSize) =>\n  (row - 1) * 80 + colSize + row - 2;\n\nconst setSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`)[0];\n\n  let start = selectionStart;\n  let end = selectionEnd;\n\n  start -= 1;\n  end -= 1;\n\n  // elScreen.focus();\n  if (elScreen.setSelectionRange) {\n    elScreen.setSelectionRange(start, end);\n  } else if (elScreen.createTextRange) {\n    const range = elScreen.createTextRange();\n    range.collapse(true);\n    range.moveEnd(\"character\", end);\n    range.moveStart(\"character\", start);\n    range.select();\n  }\n};\n\nconst clearHighlight = (elStr, markType) => {\n  const elHighlight = $(`.${elStr}.as400-highlight`);\n  let newHighlight = elHighlight.html();\n\n  newHighlight = newHighlight\n    .replace(`<as400-${markType}>`, \"\")\n    .replace(`</as400-${markType}>`, \"\");\n\n  elHighlight.html(newHighlight);\n};\n\nconst getAS400Cursor = posStr => {\n  const posArr = posStr.split(\",\");\n\n  return {\n    row: parseInt(posArr[0]),\n    col: parseInt(posArr[1])\n  };\n};\n\nconst convertRowColNumber = posStr => {\n  const posArr = posStr.trim().split(\",\");\n  return {\n    row: posArr[0],\n    col: posArr[1]\n  };\n};\n\nconst getRowNumberByIndex = (elStr, index) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  return (\n    elScreen\n      .val()\n      .substr(0, index)\n      .split(\"\\n\").length - 1\n  );\n};\n\nconst getColNumberByIndex = (elStr, index, colSize) => {\n  const row = getRowNumberByIndex(elStr, index);\n  const col = (index - row) % colSize;\n\n  if (index === colSize * (row + 1) + row) {\n    return colSize;\n  }\n  return col;\n};\n\nexport const setIndexByRowCol = (elStr, row, col) => {\n  const index = getIndexByRowCol(row, col);\n  setSelectionRange(elStr, index, index);\n};\n\nexport const getStartSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const startIndex = elScreen.prop(\"selectionStart\");\n\n  const rowSelectionStartIndex = getRowNumberByIndex(elStr, startIndex) + 1;\n  const colSelectionStartIndex =\n    getColNumberByIndex(elStr, startIndex, colSize) + 1;\n\n  return {\n    row: rowSelectionStartIndex,\n    col: colSelectionStartIndex\n  };\n};\n\nexport const getEndSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const endIndex = elScreen.prop(\"selectionEnd\");\n  const rowSelectionEndIndex = getRowNumberByIndex(elStr, endIndex) + 1;\n  const colSelectionEndIndex =\n    getColNumberByIndex(elStr, endIndex, colSize) + 1;\n\n  return {\n    row: rowSelectionEndIndex,\n    col: colSelectionEndIndex\n  };\n};\n\nexport const getSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n\n  if (selectionStart !== selectionEnd) {\n    const selection = elScreen.val().substring(selectionStart, selectionEnd);\n    return selection;\n  }\n  return \"\";\n};\n\nexport const initScreen = (elStr, rowSize, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.attr(\"rows\", rowSize);\n  elScreen.attr(\"cols\", colSize);\n\n  const elScreenTemp = $(`.${elStr}.as400-screen-temp`);\n  elScreenTemp.attr(\"rows\", rowSize);\n  elScreenTemp.attr(\"cols\", colSize);\n\n  const elStyle = $(`.${elStr}.as400-style`);\n  elStyle.attr(\"rows\", rowSize);\n  elStyle.attr(\"cols\", colSize);\n\n  const elHighlight = $(`.${elStr}.as400-highlight`);\n  elHighlight.html(getHighlightDefault(rowSize, colSize));\n};\n\nexport const setAs400Screen = (elStr, data) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.val(data);\n};\n\nexport const setAs400Style = (elStr, text, styleParams) => {\n  const elStyle = $(`.${elStr}.as400-style`);\n\n  let style = styleParams;\n\n  let textStyle = \"\";\n  for (let i = 0; i < text.length; i += 1) {\n    const character = text[i];\n    const styleCharacter = style[i];\n\n    if (styleCharacter !== \".\" && !$.isEmptyObject(styleCharacter)) {\n      textStyle += character.replace(\n        character,\n        `<as400-${styleCharacter.toLowerCase()}-style>$&</as400-${styleCharacter.toLowerCase()}-style>`\n      );\n    } else {\n      textStyle += character;\n    }\n  }\n\n  $(elStyle).html(textStyle);\n};\n\nexport const setAS400Cursor = (elStr, data) => {\n  const pos = getAS400Cursor(data);\n\n  const index = getIndexByRowCol(pos.row, pos.col);\n\n  setSelectionRange(elStr, index, index);\n};\n"]},"metadata":{},"sourceType":"module"}