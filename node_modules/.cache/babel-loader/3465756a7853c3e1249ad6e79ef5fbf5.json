{"ast":null,"code":"import _objectSpread from \"/Users/jutawuth/Git/SSQUARE/Component-AS400-React/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/components/ScreenMapping/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\nimport _ from \"lodash\";\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\nimport { getIndexByRowCol, getHighlightDefault, getSelectionRange, setSelectionRange, getStartSelection, getEndSelection, markAllCheckString } from \"../Emulator/controler\";\nexport class ScreenMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.clearAllMarkChackString = elStr => {\n      const _this$state = this.state,\n            rowSize = _this$state.rowSize,\n            colSize = _this$state.colSize;\n      const elHighlight = $(`.${elStr}.as400-highlight`);\n      elHighlight.html(getHighlightDefault(rowSize, colSize));\n      this.setState({\n        markList: {}\n      });\n    };\n\n    this.markStringChackString = (markType, highlight) => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n      newMarkList = _objectSpread({}, markList, {\n        [markType.replace(\"-\", \"\")]: highlight\n      });\n      this.setState({\n        markList: newMarkList\n      });\n      this.markAllCheckString(newMarkList);\n    };\n\n    this.clearMarkString = markType => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n      const markData = {};\n      newMarkList = _objectSpread({}, markList, {\n        [markType.replace(\"-\", \"\")]: markData\n      });\n      this.setState({\n        markList: newMarkList\n      });\n      this.markAllCheckString(newMarkList);\n    };\n\n    this.onMouseUp = callbackFn => {\n      const id = this.state.id;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.mouseup(event => {\n        // console.log(`| ========== ${event.type} ========== | `);\n        callbackFn(event);\n        this.clearAllMarkChackString(id);\n      });\n    };\n\n    this.onKeyDown = () => {\n      const _this$state2 = this.state,\n            id = _this$state2.id,\n            colSize = _this$state2.colSize;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.keydown(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        const startSelection = getStartSelection(id, colSize);\n        const endSelection = getEndSelection(id, colSize);\n        const flag = \"field\"; // const flag = 'list';\n\n        if (flag === \"list\") {\n          const selectionStart = getIndexByRowCol(startSelection.row, 0) + 1;\n          const selectionEnd = getIndexByRowCol(endSelection.row, colSize) + 2;\n          setSelectionRange(id, selectionStart, selectionEnd);\n        }\n      });\n    };\n\n    this.onDoubleClick = callbackFn => {\n      const id = this.state.id;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.dblclick(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        callbackFn(event);\n      });\n    };\n\n    this.onSelect = () => {\n      const _this$state3 = this.state,\n            id = _this$state3.id,\n            colSize = _this$state3.colSize;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.select(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        const start = event.target.selectionStart;\n        const end = event.target.selectionEnd;\n        const startPosition = getStartSelection(id, colSize);\n        this.setState({\n          lastSelection: {\n            text: getSelectionRange(id, start, end),\n            row: startPosition.row,\n            col: startPosition.col\n          }\n        });\n      });\n    };\n\n    this.getHighlight = markType => {\n      return this.state.markList[markType.replace(\"-\", \"\")];\n    };\n\n    this.setHighlight = (markType, highlight) => {\n      this.markStringChackString(markType, highlight);\n    };\n\n    this.clearHighlight = markType => {\n      return this.clearMarkString(markType);\n    };\n\n    this.getHighlightList = () => {\n      return this.state.markList;\n    };\n\n    this.setHighlightList = highlightList => {\n      this.markAllCheckString(highlightList);\n    };\n\n    this.clearHighlightList = () => {\n      this.clearAllMarkChackString(this.props.id);\n    };\n\n    this.getLastSelection = () => {\n      return this.state.lastSelection;\n    };\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList,\n      lastSelection: {\n        startIndex: 0,\n        endIndex: 0\n      },\n      rowSize: props.rows,\n      colSize: props.cols\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n    this.markAllCheckString(this.props.highlight);\n    const _this$props = this.props,\n          onDoubleClick = _this$props.onDoubleClick,\n          onMouseUp = _this$props.onMouseUp;\n    this.onSelect();\n    this.onKeyDown();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          id = _this$props2.id,\n          readOnly = _this$props2.readOnly;\n    return React.createElement(EmulatorView, {\n      id: id,\n      readOnly: readOnly,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    });\n  } // Set default props\n\n\n}\nScreenMapping.defaultProps = {\n  highlight: {}\n};\nScreenMapping.propTypes = {\n  highlightList: PropTypes.object\n};\nexport default ScreenMapping;","map":{"version":3,"sources":["/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/components/ScreenMapping/index.jsx"],"names":["React","PropTypes","$","_","Emulator","EmulatorView","getIndexByRowCol","getHighlightDefault","getSelectionRange","setSelectionRange","getStartSelection","getEndSelection","markAllCheckString","ScreenMapping","constructor","props","clearAllMarkChackString","elStr","state","rowSize","colSize","elHighlight","html","setState","markList","markStringChackString","markType","highlight","newMarkList","replace","clearMarkString","markData","onMouseUp","callbackFn","id","elScreen","mouseup","event","onKeyDown","keydown","startSelection","endSelection","flag","selectionStart","row","selectionEnd","onDoubleClick","dblclick","onSelect","select","start","target","end","startPosition","lastSelection","text","col","getHighlight","setHighlight","clearHighlight","getHighlightList","setHighlightList","highlightList","clearHighlightList","getLastSelection","startIndex","endIndex","rows","cols","componentDidMount","args","apply","render","readOnly","defaultProps","propTypes","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport $ from \"jquery\";\nimport _ from \"lodash\";\n\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\n\nimport {\n  getIndexByRowCol,\n  getHighlightDefault,\n  getSelectionRange,\n  setSelectionRange,\n  getStartSelection,\n  getEndSelection,\n  markAllCheckString\n} from \"../Emulator/controler\";\n\nexport class ScreenMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList,\n      lastSelection: {\n        startIndex: 0,\n        endIndex: 0\n      },\n      rowSize: props.rows,\n      colSize: props.cols\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n\n    this.markAllCheckString(this.props.highlight);\n\n    const { onDoubleClick, onMouseUp } = this.props;\n\n    this.onSelect();\n    this.onKeyDown();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  clearAllMarkChackString = elStr => {\n    const { rowSize, colSize } = this.state;\n    const elHighlight = $(`.${elStr}.as400-highlight`);\n    elHighlight.html(getHighlightDefault(rowSize, colSize));\n\n    this.setState({\n      markList: {}\n    });\n  };\n\n  markStringChackString = (markType, highlight) => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: highlight\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  clearMarkString = markType => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n    const markData = {};\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: markData\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  onMouseUp = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.mouseup(event => {\n      // console.log(`| ========== ${event.type} ========== | `);\n      callbackFn(event);\n      this.clearAllMarkChackString(id);\n    });\n  };\n\n  onKeyDown = () => {\n    const { id, colSize } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.keydown(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      const startSelection = getStartSelection(id, colSize);\n      const endSelection = getEndSelection(id, colSize);\n\n      const flag = \"field\";\n      // const flag = 'list';\n      if (flag === \"list\") {\n        const selectionStart = getIndexByRowCol(startSelection.row, 0) + 1;\n        const selectionEnd = getIndexByRowCol(endSelection.row, colSize) + 2;\n\n        setSelectionRange(id, selectionStart, selectionEnd);\n      }\n    });\n  };\n\n  onDoubleClick = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.dblclick(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n\n      callbackFn(event);\n    });\n  };\n\n  onSelect = () => {\n    const { id, colSize } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.select(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      const start = event.target.selectionStart;\n      const end = event.target.selectionEnd;\n      const startPosition = getStartSelection(id, colSize);\n\n      this.setState({\n        lastSelection: {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        }\n      });\n    });\n  };\n\n  /**\n   * ==================\n   *  provide function\n   * ==================\n   */\n  getHighlight = markType => {\n    return this.state.markList[markType.replace(\"-\", \"\")];\n  };\n\n  setHighlight = (markType, highlight) => {\n    this.markStringChackString(markType, highlight);\n  };\n\n  clearHighlight = markType => {\n    return this.clearMarkString(markType);\n  };\n\n  getHighlightList = () => {\n    return this.state.markList;\n  };\n\n  setHighlightList = highlightList => {\n    this.markAllCheckString(highlightList);\n  };\n\n  clearHighlightList = () => {\n    this.clearAllMarkChackString(this.props.id);\n  };\n\n  getLastSelection = () => {\n    return this.state.lastSelection;\n  };\n\n  render() {\n    const { id, readOnly } = this.props;\n    return <EmulatorView id={id} readOnly={readOnly} />;\n  }\n\n  // Set default props\n  static defaultProps = {\n    highlight: {}\n  };\n}\n\nScreenMapping.propTypes = {\n  highlightList: PropTypes.object\n};\n\nexport default ScreenMapping;\n"]},"metadata":{},"sourceType":"module"}