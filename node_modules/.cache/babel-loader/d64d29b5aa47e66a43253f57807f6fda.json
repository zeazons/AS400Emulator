{"ast":null,"code":"var _jsxFileName = \"/Users/jutawuth/git/emulator/src/components/EmulatorReadOnly/index.jsx\";\nimport React from \"react\";\nimport Emulator from \"../Emulator\";\nimport { EmulatorView } from \"../index\";\nimport \"../../css/style.css\";\n\nclass EmulatorReadOnly extends Emulator {\n  constructor(props) {\n    super(props);\n    const id = props.id;\n    this.state = {\n      id: id\n    };\n  }\n\n  componentDidMount() {\n    const data = this.props.data;\n    const _data$screen = data.screen,\n          rows = _data$screen.rows,\n          cols = _data$screen.cols;\n    const text = data.Text;\n    const style = data.Style;\n    const cursor = data.Cursor;\n    this.initScreen(this.props.id, rows, cols);\n    this.setAs400Screen(this.props.id, text);\n    this.setAs400Style(this.props.id, text, style);\n    this.setAS400Cursor(this.props.id, cursor);\n  }\n\n  render() {\n    const id = this.props.id;\n    console.log(\"Emulator: \", Emulator);\n    console.log(\"id: \", id);\n    return React.createElement(EmulatorView, {\n      id: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default EmulatorReadOnly;","map":{"version":3,"sources":["/Users/jutawuth/git/emulator/src/components/EmulatorReadOnly/index.jsx"],"names":["React","Emulator","EmulatorView","EmulatorReadOnly","constructor","props","id","state","componentDidMount","data","screen","rows","cols","text","Text","style","Style","cursor","Cursor","initScreen","setAs400Screen","setAs400Style","setAS400Cursor","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,YAAT,QAA6B,UAA7B;AAEA,OAAO,qBAAP;;AAEA,MAAMC,gBAAN,SAA+BF,QAA/B,CAAwC;AACtCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,UAGTC,EAHS,GAGFD,KAHE,CAGTC,EAHS;AAKjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,EAAE,EAAEA;AADO,KAAb;AAGD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,IAAI,GAAG,KAAKJ,KAAL,CAAWI,IAAxB;AADkB,yBAGKA,IAAI,CAACC,MAHV;AAAA,UAGVC,IAHU,gBAGVA,IAHU;AAAA,UAGJC,IAHI,gBAGJA,IAHI;AAIlB,UAAMC,IAAI,GAAGJ,IAAI,CAACK,IAAlB;AACA,UAAMC,KAAK,GAAGN,IAAI,CAACO,KAAnB;AACA,UAAMC,MAAM,GAAGR,IAAI,CAACS,MAApB;AAEA,SAAKC,UAAL,CAAgB,KAAKd,KAAL,CAAWC,EAA3B,EAA+BK,IAA/B,EAAqCC,IAArC;AACA,SAAKQ,cAAL,CAAoB,KAAKf,KAAL,CAAWC,EAA/B,EAAmCO,IAAnC;AACA,SAAKQ,aAAL,CAAmB,KAAKhB,KAAL,CAAWC,EAA9B,EAAkCO,IAAlC,EAAwCE,KAAxC;AACA,SAAKO,cAAL,CAAoB,KAAKjB,KAAL,CAAWC,EAA/B,EAAmCW,MAAnC;AACD;;AAEDM,EAAAA,MAAM,GAAG;AAAA,UACCjB,EADD,GACQ,KAAKD,KADb,CACCC,EADD;AAGPkB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BxB,QAA1B;AACAuB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBnB,EAApB;AAEA,WAAO,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAEA,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAhCqC;;AAkCxC,eAAeH,gBAAf","sourcesContent":["import React from \"react\";\n\nimport Emulator from \"../Emulator\";\nimport { EmulatorView } from \"../index\";\n\nimport \"../../css/style.css\";\n\nclass EmulatorReadOnly extends Emulator {\n  constructor(props) {\n    super(props);\n\n    const { id } = props;\n\n    this.state = {\n      id: id\n    };\n  }\n\n  componentDidMount() {\n    const data = this.props.data;\n\n    const { rows, cols } = data.screen;\n    const text = data.Text;\n    const style = data.Style;\n    const cursor = data.Cursor;\n\n    this.initScreen(this.props.id, rows, cols);\n    this.setAs400Screen(this.props.id, text);\n    this.setAs400Style(this.props.id, text, style);\n    this.setAS400Cursor(this.props.id, cursor);\n  }\n\n  render() {\n    const { id } = this.props;\n\n    console.log(\"Emulator: \", Emulator);\n    console.log(\"id: \", id);\n\n    return <EmulatorView id={id} />;\n  }\n}\nexport default EmulatorReadOnly;\n"]},"metadata":{},"sourceType":"module"}