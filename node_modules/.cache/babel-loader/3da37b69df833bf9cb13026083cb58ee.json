{"ast":null,"code":"var _jsxFileName = \"/Users/jutawuth/git/emulator/src/components/EmulatorView/index.jsx\";\nimport React from \"react\";\nimport Emulator from \"../Emulator\";\nimport \"../../css/style.css\";\n\nclass EmulatorView extends Emulator {\n  constructor(props) {\n    super(props);\n    const id = props.id;\n    this.state = {\n      id: id\n    };\n  }\n\n  componentDidMount() {\n    const data = this.props.data;\n    const _data$screen = data.screen,\n          rows = _data$screen.rows,\n          cols = _data$screen.cols;\n    const text = data.Text;\n    const style = data.Style;\n    const cursor = data.Cursor;\n    this.initScreen(this.props.id, rows, cols);\n    this.setAs400Screen(this.props.id, text);\n    this.setAs400Style(this.props.id, text, style);\n    this.setAS400Cursor(this.props.id, cursor);\n  }\n\n  render() {\n    const id = this.props.id;\n    console.log(\"children: \", this.props.children);\n    return React.createElement(\"div\", {\n      className: \"as400-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"screen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: `${id} as400-highlight`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: `${id} as400-style`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      className: `${id} as400-screen`,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      className: `${id} as400-screen-temp`,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default EmulatorView;","map":{"version":3,"sources":["/Users/jutawuth/git/emulator/src/components/EmulatorView/index.jsx"],"names":["React","Emulator","EmulatorView","constructor","props","id","state","componentDidMount","data","screen","rows","cols","text","Text","style","Style","cursor","Cursor","initScreen","setAs400Screen","setAs400Style","setAS400Cursor","render","console","log","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,aAArB;AAEA,OAAO,qBAAP;;AAEA,MAAMC,YAAN,SAA2BD,QAA3B,CAAoC;AAClCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,UAGTC,EAHS,GAGFD,KAHE,CAGTC,EAHS;AAIjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,EAAE,EAAEA;AADO,KAAb;AAGD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,IAAI,GAAG,KAAKJ,KAAL,CAAWI,IAAxB;AADkB,yBAGKA,IAAI,CAACC,MAHV;AAAA,UAGVC,IAHU,gBAGVA,IAHU;AAAA,UAGJC,IAHI,gBAGJA,IAHI;AAIlB,UAAMC,IAAI,GAAGJ,IAAI,CAACK,IAAlB;AACA,UAAMC,KAAK,GAAGN,IAAI,CAACO,KAAnB;AACA,UAAMC,MAAM,GAAGR,IAAI,CAACS,MAApB;AAEA,SAAKC,UAAL,CAAgB,KAAKd,KAAL,CAAWC,EAA3B,EAA+BK,IAA/B,EAAqCC,IAArC;AACA,SAAKQ,cAAL,CAAoB,KAAKf,KAAL,CAAWC,EAA/B,EAAmCO,IAAnC;AACA,SAAKQ,aAAL,CAAmB,KAAKhB,KAAL,CAAWC,EAA9B,EAAkCO,IAAlC,EAAwCE,KAAxC;AACA,SAAKO,cAAL,CAAoB,KAAKjB,KAAL,CAAWC,EAA/B,EAAmCW,MAAnC;AACD;;AAEDM,EAAAA,MAAM,GAAG;AAAA,UACCjB,EADD,GACQ,KAAKD,KADb,CACCC,EADD;AAGPkB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKpB,KAAL,CAAWqB,QAArC;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAG,GAAEpB,EAAG,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAG,GAAEA,EAAG,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAU,MAAA,SAAS,EAAG,GAAEA,EAAG,eAA3B;AAA2C,MAAA,QAAQ,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAU,MAAA,SAAS,EAAG,GAAEA,EAAG,oBAA3B;AAAgD,MAAA,QAAQ,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAFF,CADF;AAYD;;AAzCiC;;AA2CpC,eAAeH,YAAf","sourcesContent":["import React from \"react\";\n\nimport Emulator from \"../Emulator\";\n\nimport \"../../css/style.css\";\n\nclass EmulatorView extends Emulator {\n  constructor(props) {\n    super(props);\n\n    const { id } = props;\n    this.state = {\n      id: id\n    };\n  }\n\n  componentDidMount() {\n    const data = this.props.data;\n\n    const { rows, cols } = data.screen;\n    const text = data.Text;\n    const style = data.Style;\n    const cursor = data.Cursor;\n\n    this.initScreen(this.props.id, rows, cols);\n    this.setAs400Screen(this.props.id, text);\n    this.setAs400Style(this.props.id, text, style);\n    this.setAS400Cursor(this.props.id, cursor);\n  }\n\n  render() {\n    const { id } = this.props;\n\n    console.log(\"children: \", this.props.children);\n\n    return (\n      <div className=\"as400-container\">\n        {/* <div className=\"as400-as400-area\"> */}\n        <div className=\"screen\">\n          <div className={`${id} as400-highlight`}></div>\n          <div className={`${id} as400-style`}></div>\n          <textarea className={`${id} as400-screen`} readOnly></textarea>\n          <textarea className={`${id} as400-screen-temp`} readOnly></textarea>\n        </div>\n        {/* </div> */}\n      </div>\n    );\n  }\n}\nexport default EmulatorView;\n"]},"metadata":{},"sourceType":"module"}