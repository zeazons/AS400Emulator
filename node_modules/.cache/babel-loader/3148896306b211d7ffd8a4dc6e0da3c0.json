{"ast":null,"code":"import $ from \"jquery\";\nimport _ from \"lodash\";\nexport const getHighlightDefault = (rowSize, colSize) => {\n  let textHighlight = \"\";\n\n  for (let i = 0; i < rowSize; i += 1) {\n    for (let j = 0; j < colSize; j += 1) {\n      textHighlight += \".\";\n    }\n\n    textHighlight += \"\\n\";\n  }\n\n  return textHighlight;\n};\nexport const getIndexByRowCol = (row, colSize) => (row - 1) * 80 + colSize + row - 2;\nexport const setSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`)[0];\n  let start = selectionStart;\n  let end = selectionEnd;\n  start -= 1;\n  end -= 1; // elScreen.focus();\n\n  if (elScreen.setSelectionRange) {\n    elScreen.setSelectionRange(start, end);\n  } else if (elScreen.createTextRange) {\n    const range = elScreen.createTextRange();\n    range.collapse(true);\n    range.moveEnd(\"character\", end);\n    range.moveStart(\"character\", start);\n    range.select();\n  }\n}; // const clearHighlight = (elStr, markType) => {\n//   const elHighlight = $(`.${elStr}.as400-highlight`);\n//   let newHighlight = elHighlight.html();\n//   newHighlight = newHighlight\n//     .replace(`<as400-${markType}>`, \"\")\n//     .replace(`</as400-${markType}>`, \"\");\n//   elHighlight.html(newHighlight);\n// };\n\nexport const getAS400Cursor = posStr => {\n  const posArr = posStr.split(\",\");\n  return {\n    row: parseInt(posArr[0]),\n    col: parseInt(posArr[1])\n  };\n}; // const convertRowColNumber = posStr => {\n//   const posArr = posStr.trim().split(\",\");\n//   return {\n//     row: posArr[0],\n//     col: posArr[1]\n//   };\n// };\n\nconst getRowNumberByIndex = (elStr, index) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  return elScreen.val().substr(0, index).split(\"\\n\").length - 1;\n};\n\nconst getColNumberByIndex = (elStr, index, colSize) => {\n  const row = getRowNumberByIndex(elStr, index);\n  const col = (index - row) % colSize;\n\n  if (index === colSize * (row + 1) + row) {\n    return colSize;\n  }\n\n  return col;\n};\n\nexport const setIndexByRowCol = (elStr, row, col) => {\n  const index = getIndexByRowCol(row, col);\n  setSelectionRange(elStr, index, index);\n};\nexport const getStartSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const startIndex = elScreen.prop(\"selectionStart\");\n  const rowSelectionStartIndex = getRowNumberByIndex(elStr, startIndex) + 1;\n  const colSelectionStartIndex = getColNumberByIndex(elStr, startIndex, colSize) + 1;\n  return {\n    row: rowSelectionStartIndex,\n    col: colSelectionStartIndex\n  };\n};\nexport const getEndSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const endIndex = elScreen.prop(\"selectionEnd\");\n  const rowSelectionEndIndex = getRowNumberByIndex(elStr, endIndex) + 1;\n  const colSelectionEndIndex = getColNumberByIndex(elStr, endIndex, colSize) + 1;\n  return {\n    row: rowSelectionEndIndex,\n    col: colSelectionEndIndex\n  };\n};\nexport const getSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n\n  if (selectionStart !== selectionEnd) {\n    const selection = elScreen.val().substring(selectionStart, selectionEnd);\n    return selection;\n  }\n\n  return \"\";\n};\nexport const initScreen = (elStr, rowSize, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.attr(\"rows\", rowSize);\n  elScreen.attr(\"cols\", colSize);\n  const elScreenTemp = $(`.${elStr}.as400-screen-temp`);\n  elScreenTemp.attr(\"rows\", rowSize);\n  elScreenTemp.attr(\"cols\", colSize);\n  const elStyle = $(`.${elStr}.as400-style`);\n  elStyle.attr(\"rows\", rowSize);\n  elStyle.attr(\"cols\", colSize);\n  const elHighlight = $(`.${elStr}.as400-highlight`);\n  elHighlight.html(getHighlightDefault(rowSize, colSize));\n};\nexport const setAs400Screen = (elStr, data) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.val(data);\n};\nexport const setAs400Style = (elStr, text, styleParams) => {\n  const elStyle = $(`.${elStr}.as400-style`);\n  let style = styleParams;\n  let textStyle = \"\";\n\n  for (let i = 0; i < text.length; i += 1) {\n    const character = text[i];\n    const styleCharacter = style[i];\n\n    if (styleCharacter !== \".\" && !$.isEmptyObject(styleCharacter)) {\n      textStyle += character.replace(character, `<as400-${styleCharacter.toLowerCase()}-style>$&</as400-${styleCharacter.toLowerCase()}-style>`);\n    } else {\n      textStyle += character;\n    }\n  }\n\n  $(elStyle).html(textStyle);\n};\nexport const setAS400Cursor = (elStr, data) => {\n  const pos = getAS400Cursor(data);\n  const index = getIndexByRowCol(pos.row, pos.col);\n  setSelectionRange(elStr, index, index);\n};\nexport const markAllCheckStringOnScreen = markListData => {\n  const elHighlight = $(`.${this.state.id}.as400-highlight`);\n  const text = elHighlight[0].innerHTML;\n  let textHighlight = \"\";\n\n  for (let i = 0; i < text.length; i += 1) {\n    if (!_.isEmpty(markListData.mark1) && i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col)) {\n      if (markListData.mark1.text.length < 2) {\n        textHighlight += `<as400-mark-1>${text[i]}</as400-mark-1>`;\n      } else {\n        textHighlight += `<as400-mark-1>${text[i]}`;\n      }\n    } else if (!_.isEmpty(markListData.mark1) && i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col) + markListData.mark1.text.length - 1) {\n      textHighlight += `${text[i]}</as400-mark-1>`;\n    } else if (!_.isEmpty(markListData.mark2) && i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col)) {\n      if (markListData.mark2.text.length < 2) {\n        textHighlight += `<as400-mark-2>${text[i]}</as400-mark-2>`;\n      } else {\n        textHighlight += `<as400-mark-2>${text[i]}`;\n      }\n    } else if (!_.isEmpty(markListData.mark2) && i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col) + markListData.mark2.text.length - 1) {\n      textHighlight += `${text[i]}</as400-mark-2>`;\n    } else if (!_.isEmpty(markListData.mark3) && i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col)) {\n      if (markListData.mark3.text.length < 2) {\n        textHighlight += `<as400-mark-3>${text[i]}</as400-mark-3>`;\n      } else {\n        textHighlight += `<as400-mark-3>${text[i]}`;\n      }\n    } else if (!_.isEmpty(markListData.mark3) && i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col) + markListData.mark3.text.length - 1) {\n      textHighlight += `${text[i]}</as400-mark-3>`;\n    } else {\n      textHighlight += text[i];\n    }\n  }\n\n  elHighlight.html(textHighlight);\n};","map":{"version":3,"sources":["/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/components/Emulator/controler.js"],"names":["$","_","getHighlightDefault","rowSize","colSize","textHighlight","i","j","getIndexByRowCol","row","setSelectionRange","elStr","selectionStart","selectionEnd","elScreen","start","end","createTextRange","range","collapse","moveEnd","moveStart","select","getAS400Cursor","posStr","posArr","split","parseInt","col","getRowNumberByIndex","index","val","substr","length","getColNumberByIndex","setIndexByRowCol","getStartSelection","startIndex","prop","rowSelectionStartIndex","colSelectionStartIndex","getEndSelection","endIndex","rowSelectionEndIndex","colSelectionEndIndex","getSelectionRange","selection","substring","initScreen","attr","elScreenTemp","elStyle","elHighlight","html","setAs400Screen","data","setAs400Style","text","styleParams","style","textStyle","character","styleCharacter","isEmptyObject","replace","toLowerCase","setAS400Cursor","pos","markAllCheckStringOnScreen","markListData","state","id","innerHTML","isEmpty","mark1","mark2","mark3"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB;AACvD,MAAIC,aAAa,GAAG,EAApB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAApB,EAA6BG,CAAC,IAAI,CAAlC,EAAqC;AACnC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAApB,EAA6BG,CAAC,IAAI,CAAlC,EAAqC;AACnCF,MAAAA,aAAa,IAAI,GAAjB;AACD;;AACDA,IAAAA,aAAa,IAAI,IAAjB;AACD;;AACD,SAAOA,aAAP;AACD,CATM;AAWP,OAAO,MAAMG,gBAAgB,GAAG,CAACC,GAAD,EAAML,OAAN,KAC9B,CAACK,GAAG,GAAG,CAAP,IAAY,EAAZ,GAAiBL,OAAjB,GAA2BK,GAA3B,GAAiC,CAD5B;AAGP,OAAO,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,cAAR,EAAwBC,YAAxB,KAAyC;AACxE,QAAMC,QAAQ,GAAGd,CAAC,CAAE,IAAGW,KAAM,eAAX,CAAD,CAA4B,CAA5B,CAAjB;AAEA,MAAII,KAAK,GAAGH,cAAZ;AACA,MAAII,GAAG,GAAGH,YAAV;AAEAE,EAAAA,KAAK,IAAI,CAAT;AACAC,EAAAA,GAAG,IAAI,CAAP,CAPwE,CASxE;;AACA,MAAIF,QAAQ,CAACJ,iBAAb,EAAgC;AAC9BI,IAAAA,QAAQ,CAACJ,iBAAT,CAA2BK,KAA3B,EAAkCC,GAAlC;AACD,GAFD,MAEO,IAAIF,QAAQ,CAACG,eAAb,EAA8B;AACnC,UAAMC,KAAK,GAAGJ,QAAQ,CAACG,eAAT,EAAd;AACAC,IAAAA,KAAK,CAACC,QAAN,CAAe,IAAf;AACAD,IAAAA,KAAK,CAACE,OAAN,CAAc,WAAd,EAA2BJ,GAA3B;AACAE,IAAAA,KAAK,CAACG,SAAN,CAAgB,WAAhB,EAA6BN,KAA7B;AACAG,IAAAA,KAAK,CAACI,MAAN;AACD;AACF,CAnBM,C,CAqBP;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA,OAAO,MAAMC,cAAc,GAAGC,MAAM,IAAI;AACtC,QAAMC,MAAM,GAAGD,MAAM,CAACE,KAAP,CAAa,GAAb,CAAf;AAEA,SAAO;AACLjB,IAAAA,GAAG,EAAEkB,QAAQ,CAACF,MAAM,CAAC,CAAD,CAAP,CADR;AAELG,IAAAA,GAAG,EAAED,QAAQ,CAACF,MAAM,CAAC,CAAD,CAAP;AAFR,GAAP;AAID,CAPM,C,CASP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMI,mBAAmB,GAAG,CAAClB,KAAD,EAAQmB,KAAR,KAAkB;AAC5C,QAAMhB,QAAQ,GAAGd,CAAC,CAAE,IAAGW,KAAM,eAAX,CAAlB;AACA,SACEG,QAAQ,CACPiB,GADD,GAECC,MAFD,CAEQ,CAFR,EAEWF,KAFX,EAGCJ,KAHD,CAGO,IAHP,EAGaO,MAHb,GAGsB,CAJxB;AAMD,CARD;;AAUA,MAAMC,mBAAmB,GAAG,CAACvB,KAAD,EAAQmB,KAAR,EAAe1B,OAAf,KAA2B;AACrD,QAAMK,GAAG,GAAGoB,mBAAmB,CAAClB,KAAD,EAAQmB,KAAR,CAA/B;AACA,QAAMF,GAAG,GAAG,CAACE,KAAK,GAAGrB,GAAT,IAAgBL,OAA5B;;AAEA,MAAI0B,KAAK,KAAK1B,OAAO,IAAIK,GAAG,GAAG,CAAV,CAAP,GAAsBA,GAApC,EAAyC;AACvC,WAAOL,OAAP;AACD;;AACD,SAAOwB,GAAP;AACD,CARD;;AAUA,OAAO,MAAMO,gBAAgB,GAAG,CAACxB,KAAD,EAAQF,GAAR,EAAamB,GAAb,KAAqB;AACnD,QAAME,KAAK,GAAGtB,gBAAgB,CAACC,GAAD,EAAMmB,GAAN,CAA9B;AACAlB,EAAAA,iBAAiB,CAACC,KAAD,EAAQmB,KAAR,EAAeA,KAAf,CAAjB;AACD,CAHM;AAKP,OAAO,MAAMM,iBAAiB,GAAG,CAACzB,KAAD,EAAQP,OAAR,KAAoB;AACnD,QAAMU,QAAQ,GAAGd,CAAC,CAAE,IAAGW,KAAM,eAAX,CAAlB;AACA,QAAM0B,UAAU,GAAGvB,QAAQ,CAACwB,IAAT,CAAc,gBAAd,CAAnB;AAEA,QAAMC,sBAAsB,GAAGV,mBAAmB,CAAClB,KAAD,EAAQ0B,UAAR,CAAnB,GAAyC,CAAxE;AACA,QAAMG,sBAAsB,GAC1BN,mBAAmB,CAACvB,KAAD,EAAQ0B,UAAR,EAAoBjC,OAApB,CAAnB,GAAkD,CADpD;AAGA,SAAO;AACLK,IAAAA,GAAG,EAAE8B,sBADA;AAELX,IAAAA,GAAG,EAAEY;AAFA,GAAP;AAID,CAZM;AAcP,OAAO,MAAMC,eAAe,GAAG,CAAC9B,KAAD,EAAQP,OAAR,KAAoB;AACjD,QAAMU,QAAQ,GAAGd,CAAC,CAAE,IAAGW,KAAM,eAAX,CAAlB;AACA,QAAM+B,QAAQ,GAAG5B,QAAQ,CAACwB,IAAT,CAAc,cAAd,CAAjB;AACA,QAAMK,oBAAoB,GAAGd,mBAAmB,CAAClB,KAAD,EAAQ+B,QAAR,CAAnB,GAAuC,CAApE;AACA,QAAME,oBAAoB,GACxBV,mBAAmB,CAACvB,KAAD,EAAQ+B,QAAR,EAAkBtC,OAAlB,CAAnB,GAAgD,CADlD;AAGA,SAAO;AACLK,IAAAA,GAAG,EAAEkC,oBADA;AAELf,IAAAA,GAAG,EAAEgB;AAFA,GAAP;AAID,CAXM;AAaP,OAAO,MAAMC,iBAAiB,GAAG,CAAClC,KAAD,EAAQC,cAAR,EAAwBC,YAAxB,KAAyC;AACxE,QAAMC,QAAQ,GAAGd,CAAC,CAAE,IAAGW,KAAM,eAAX,CAAlB;;AAEA,MAAIC,cAAc,KAAKC,YAAvB,EAAqC;AACnC,UAAMiC,SAAS,GAAGhC,QAAQ,CAACiB,GAAT,GAAegB,SAAf,CAAyBnC,cAAzB,EAAyCC,YAAzC,CAAlB;AACA,WAAOiC,SAAP;AACD;;AACD,SAAO,EAAP;AACD,CARM;AAUP,OAAO,MAAME,UAAU,GAAG,CAACrC,KAAD,EAAQR,OAAR,EAAiBC,OAAjB,KAA6B;AACrD,QAAMU,QAAQ,GAAGd,CAAC,CAAE,IAAGW,KAAM,eAAX,CAAlB;AACAG,EAAAA,QAAQ,CAACmC,IAAT,CAAc,MAAd,EAAsB9C,OAAtB;AACAW,EAAAA,QAAQ,CAACmC,IAAT,CAAc,MAAd,EAAsB7C,OAAtB;AAEA,QAAM8C,YAAY,GAAGlD,CAAC,CAAE,IAAGW,KAAM,oBAAX,CAAtB;AACAuC,EAAAA,YAAY,CAACD,IAAb,CAAkB,MAAlB,EAA0B9C,OAA1B;AACA+C,EAAAA,YAAY,CAACD,IAAb,CAAkB,MAAlB,EAA0B7C,OAA1B;AAEA,QAAM+C,OAAO,GAAGnD,CAAC,CAAE,IAAGW,KAAM,cAAX,CAAjB;AACAwC,EAAAA,OAAO,CAACF,IAAR,CAAa,MAAb,EAAqB9C,OAArB;AACAgD,EAAAA,OAAO,CAACF,IAAR,CAAa,MAAb,EAAqB7C,OAArB;AAEA,QAAMgD,WAAW,GAAGpD,CAAC,CAAE,IAAGW,KAAM,kBAAX,CAArB;AACAyC,EAAAA,WAAW,CAACC,IAAZ,CAAiBnD,mBAAmB,CAACC,OAAD,EAAUC,OAAV,CAApC;AACD,CAfM;AAiBP,OAAO,MAAMkD,cAAc,GAAG,CAAC3C,KAAD,EAAQ4C,IAAR,KAAiB;AAC7C,QAAMzC,QAAQ,GAAGd,CAAC,CAAE,IAAGW,KAAM,eAAX,CAAlB;AACAG,EAAAA,QAAQ,CAACiB,GAAT,CAAawB,IAAb;AACD,CAHM;AAKP,OAAO,MAAMC,aAAa,GAAG,CAAC7C,KAAD,EAAQ8C,IAAR,EAAcC,WAAd,KAA8B;AACzD,QAAMP,OAAO,GAAGnD,CAAC,CAAE,IAAGW,KAAM,cAAX,CAAjB;AAEA,MAAIgD,KAAK,GAAGD,WAAZ;AAEA,MAAIE,SAAS,GAAG,EAAhB;;AACA,OAAK,IAAItD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmD,IAAI,CAACxB,MAAzB,EAAiC3B,CAAC,IAAI,CAAtC,EAAyC;AACvC,UAAMuD,SAAS,GAAGJ,IAAI,CAACnD,CAAD,CAAtB;AACA,UAAMwD,cAAc,GAAGH,KAAK,CAACrD,CAAD,CAA5B;;AAEA,QAAIwD,cAAc,KAAK,GAAnB,IAA0B,CAAC9D,CAAC,CAAC+D,aAAF,CAAgBD,cAAhB,CAA/B,EAAgE;AAC9DF,MAAAA,SAAS,IAAIC,SAAS,CAACG,OAAV,CACXH,SADW,EAEV,UAASC,cAAc,CAACG,WAAf,EAA6B,oBAAmBH,cAAc,CAACG,WAAf,EAA6B,SAF5E,CAAb;AAID,KALD,MAKO;AACLL,MAAAA,SAAS,IAAIC,SAAb;AACD;AACF;;AAED7D,EAAAA,CAAC,CAACmD,OAAD,CAAD,CAAWE,IAAX,CAAgBO,SAAhB;AACD,CArBM;AAuBP,OAAO,MAAMM,cAAc,GAAG,CAACvD,KAAD,EAAQ4C,IAAR,KAAiB;AAC7C,QAAMY,GAAG,GAAG5C,cAAc,CAACgC,IAAD,CAA1B;AAEA,QAAMzB,KAAK,GAAGtB,gBAAgB,CAAC2D,GAAG,CAAC1D,GAAL,EAAU0D,GAAG,CAACvC,GAAd,CAA9B;AAEAlB,EAAAA,iBAAiB,CAACC,KAAD,EAAQmB,KAAR,EAAeA,KAAf,CAAjB;AACD,CANM;AAQP,OAAO,MAAMsC,0BAA0B,GAAGC,YAAY,IAAI;AACxD,QAAMjB,WAAW,GAAGpD,CAAC,CAAE,IAAG,KAAKsE,KAAL,CAAWC,EAAG,kBAAnB,CAArB;AACA,QAAMd,IAAI,GAAGL,WAAW,CAAC,CAAD,CAAX,CAAeoB,SAA5B;AACA,MAAInE,aAAa,GAAG,EAApB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmD,IAAI,CAACxB,MAAzB,EAAiC3B,CAAC,IAAI,CAAtC,EAAyC;AACvC,QACE,CAACL,CAAC,CAACwE,OAAF,CAAUJ,YAAY,CAACK,KAAvB,CAAD,IACApE,CAAC,KAAKE,gBAAgB,CAAC6D,YAAY,CAACK,KAAb,CAAmBjE,GAApB,EAAyB4D,YAAY,CAACK,KAAb,CAAmB9C,GAA5C,CAFxB,EAGE;AACA,UAAIyC,YAAY,CAACK,KAAb,CAAmBjB,IAAnB,CAAwBxB,MAAxB,GAAiC,CAArC,EAAwC;AACtC5B,QAAAA,aAAa,IAAK,iBAAgBoD,IAAI,CAACnD,CAAD,CAAI,iBAA1C;AACD,OAFD,MAEO;AACLD,QAAAA,aAAa,IAAK,iBAAgBoD,IAAI,CAACnD,CAAD,CAAI,EAA1C;AACD;AACF,KATD,MASO,IACL,CAACL,CAAC,CAACwE,OAAF,CAAUJ,YAAY,CAACK,KAAvB,CAAD,IACApE,CAAC,KACDE,gBAAgB,CAAC6D,YAAY,CAACK,KAAb,CAAmBjE,GAApB,EAAyB4D,YAAY,CAACK,KAAb,CAAmB9C,GAA5C,CAAhB,GACAyC,YAAY,CAACK,KAAb,CAAmBjB,IAAnB,CAAwBxB,MADxB,GAEA,CALK,EAML;AACA5B,MAAAA,aAAa,IAAK,GAAEoD,IAAI,CAACnD,CAAD,CAAI,iBAA5B;AACD,KARM,MAQA,IACL,CAACL,CAAC,CAACwE,OAAF,CAAUJ,YAAY,CAACM,KAAvB,CAAD,IACArE,CAAC,KAAKE,gBAAgB,CAAC6D,YAAY,CAACM,KAAb,CAAmBlE,GAApB,EAAyB4D,YAAY,CAACM,KAAb,CAAmB/C,GAA5C,CAFjB,EAGL;AACA,UAAIyC,YAAY,CAACM,KAAb,CAAmBlB,IAAnB,CAAwBxB,MAAxB,GAAiC,CAArC,EAAwC;AACtC5B,QAAAA,aAAa,IAAK,iBAAgBoD,IAAI,CAACnD,CAAD,CAAI,iBAA1C;AACD,OAFD,MAEO;AACLD,QAAAA,aAAa,IAAK,iBAAgBoD,IAAI,CAACnD,CAAD,CAAI,EAA1C;AACD;AACF,KATM,MASA,IACL,CAACL,CAAC,CAACwE,OAAF,CAAUJ,YAAY,CAACM,KAAvB,CAAD,IACArE,CAAC,KACDE,gBAAgB,CAAC6D,YAAY,CAACM,KAAb,CAAmBlE,GAApB,EAAyB4D,YAAY,CAACM,KAAb,CAAmB/C,GAA5C,CAAhB,GACAyC,YAAY,CAACM,KAAb,CAAmBlB,IAAnB,CAAwBxB,MADxB,GAEA,CALK,EAML;AACA5B,MAAAA,aAAa,IAAK,GAAEoD,IAAI,CAACnD,CAAD,CAAI,iBAA5B;AACD,KARM,MAQA,IACL,CAACL,CAAC,CAACwE,OAAF,CAAUJ,YAAY,CAACO,KAAvB,CAAD,IACAtE,CAAC,KAAKE,gBAAgB,CAAC6D,YAAY,CAACO,KAAb,CAAmBnE,GAApB,EAAyB4D,YAAY,CAACO,KAAb,CAAmBhD,GAA5C,CAFjB,EAGL;AACA,UAAIyC,YAAY,CAACO,KAAb,CAAmBnB,IAAnB,CAAwBxB,MAAxB,GAAiC,CAArC,EAAwC;AACtC5B,QAAAA,aAAa,IAAK,iBAAgBoD,IAAI,CAACnD,CAAD,CAAI,iBAA1C;AACD,OAFD,MAEO;AACLD,QAAAA,aAAa,IAAK,iBAAgBoD,IAAI,CAACnD,CAAD,CAAI,EAA1C;AACD;AACF,KATM,MASA,IACL,CAACL,CAAC,CAACwE,OAAF,CAAUJ,YAAY,CAACO,KAAvB,CAAD,IACAtE,CAAC,KACDE,gBAAgB,CAAC6D,YAAY,CAACO,KAAb,CAAmBnE,GAApB,EAAyB4D,YAAY,CAACO,KAAb,CAAmBhD,GAA5C,CAAhB,GACAyC,YAAY,CAACO,KAAb,CAAmBnB,IAAnB,CAAwBxB,MADxB,GAEA,CALK,EAML;AACA5B,MAAAA,aAAa,IAAK,GAAEoD,IAAI,CAACnD,CAAD,CAAI,iBAA5B;AACD,KARM,MAQA;AACLD,MAAAA,aAAa,IAAIoD,IAAI,CAACnD,CAAD,CAArB;AACD;AACF;;AAED8C,EAAAA,WAAW,CAACC,IAAZ,CAAiBhD,aAAjB;AACD,CA/DM","sourcesContent":["import $ from \"jquery\";\nimport _ from \"lodash\";\n\nexport const getHighlightDefault = (rowSize, colSize) => {\n  let textHighlight = \"\";\n  for (let i = 0; i < rowSize; i += 1) {\n    for (let j = 0; j < colSize; j += 1) {\n      textHighlight += \".\";\n    }\n    textHighlight += \"\\n\";\n  }\n  return textHighlight;\n};\n\nexport const getIndexByRowCol = (row, colSize) =>\n  (row - 1) * 80 + colSize + row - 2;\n\nexport const setSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`)[0];\n\n  let start = selectionStart;\n  let end = selectionEnd;\n\n  start -= 1;\n  end -= 1;\n\n  // elScreen.focus();\n  if (elScreen.setSelectionRange) {\n    elScreen.setSelectionRange(start, end);\n  } else if (elScreen.createTextRange) {\n    const range = elScreen.createTextRange();\n    range.collapse(true);\n    range.moveEnd(\"character\", end);\n    range.moveStart(\"character\", start);\n    range.select();\n  }\n};\n\n// const clearHighlight = (elStr, markType) => {\n//   const elHighlight = $(`.${elStr}.as400-highlight`);\n//   let newHighlight = elHighlight.html();\n\n//   newHighlight = newHighlight\n//     .replace(`<as400-${markType}>`, \"\")\n//     .replace(`</as400-${markType}>`, \"\");\n\n//   elHighlight.html(newHighlight);\n// };\n\nexport const getAS400Cursor = posStr => {\n  const posArr = posStr.split(\",\");\n\n  return {\n    row: parseInt(posArr[0]),\n    col: parseInt(posArr[1])\n  };\n};\n\n// const convertRowColNumber = posStr => {\n//   const posArr = posStr.trim().split(\",\");\n//   return {\n//     row: posArr[0],\n//     col: posArr[1]\n//   };\n// };\n\nconst getRowNumberByIndex = (elStr, index) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  return (\n    elScreen\n    .val()\n    .substr(0, index)\n    .split(\"\\n\").length - 1\n  );\n};\n\nconst getColNumberByIndex = (elStr, index, colSize) => {\n  const row = getRowNumberByIndex(elStr, index);\n  const col = (index - row) % colSize;\n\n  if (index === colSize * (row + 1) + row) {\n    return colSize;\n  }\n  return col;\n};\n\nexport const setIndexByRowCol = (elStr, row, col) => {\n  const index = getIndexByRowCol(row, col);\n  setSelectionRange(elStr, index, index);\n};\n\nexport const getStartSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const startIndex = elScreen.prop(\"selectionStart\");\n\n  const rowSelectionStartIndex = getRowNumberByIndex(elStr, startIndex) + 1;\n  const colSelectionStartIndex =\n    getColNumberByIndex(elStr, startIndex, colSize) + 1;\n\n  return {\n    row: rowSelectionStartIndex,\n    col: colSelectionStartIndex\n  };\n};\n\nexport const getEndSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const endIndex = elScreen.prop(\"selectionEnd\");\n  const rowSelectionEndIndex = getRowNumberByIndex(elStr, endIndex) + 1;\n  const colSelectionEndIndex =\n    getColNumberByIndex(elStr, endIndex, colSize) + 1;\n\n  return {\n    row: rowSelectionEndIndex,\n    col: colSelectionEndIndex\n  };\n};\n\nexport const getSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n\n  if (selectionStart !== selectionEnd) {\n    const selection = elScreen.val().substring(selectionStart, selectionEnd);\n    return selection;\n  }\n  return \"\";\n};\n\nexport const initScreen = (elStr, rowSize, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.attr(\"rows\", rowSize);\n  elScreen.attr(\"cols\", colSize);\n\n  const elScreenTemp = $(`.${elStr}.as400-screen-temp`);\n  elScreenTemp.attr(\"rows\", rowSize);\n  elScreenTemp.attr(\"cols\", colSize);\n\n  const elStyle = $(`.${elStr}.as400-style`);\n  elStyle.attr(\"rows\", rowSize);\n  elStyle.attr(\"cols\", colSize);\n\n  const elHighlight = $(`.${elStr}.as400-highlight`);\n  elHighlight.html(getHighlightDefault(rowSize, colSize));\n};\n\nexport const setAs400Screen = (elStr, data) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.val(data);\n};\n\nexport const setAs400Style = (elStr, text, styleParams) => {\n  const elStyle = $(`.${elStr}.as400-style`);\n\n  let style = styleParams;\n\n  let textStyle = \"\";\n  for (let i = 0; i < text.length; i += 1) {\n    const character = text[i];\n    const styleCharacter = style[i];\n\n    if (styleCharacter !== \".\" && !$.isEmptyObject(styleCharacter)) {\n      textStyle += character.replace(\n        character,\n        `<as400-${styleCharacter.toLowerCase()}-style>$&</as400-${styleCharacter.toLowerCase()}-style>`\n      );\n    } else {\n      textStyle += character;\n    }\n  }\n\n  $(elStyle).html(textStyle);\n};\n\nexport const setAS400Cursor = (elStr, data) => {\n  const pos = getAS400Cursor(data);\n\n  const index = getIndexByRowCol(pos.row, pos.col);\n\n  setSelectionRange(elStr, index, index);\n};\n\nexport const markAllCheckStringOnScreen = markListData => {\n  const elHighlight = $(`.${this.state.id}.as400-highlight`);\n  const text = elHighlight[0].innerHTML;\n  let textHighlight = \"\";\n\n  for (let i = 0; i < text.length; i += 1) {\n    if (\n      !_.isEmpty(markListData.mark1) &&\n      i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col)\n    ) {\n      if (markListData.mark1.text.length < 2) {\n        textHighlight += `<as400-mark-1>${text[i]}</as400-mark-1>`;\n      } else {\n        textHighlight += `<as400-mark-1>${text[i]}`;\n      }\n    } else if (\n      !_.isEmpty(markListData.mark1) &&\n      i ===\n      getIndexByRowCol(markListData.mark1.row, markListData.mark1.col) +\n      markListData.mark1.text.length -\n      1\n    ) {\n      textHighlight += `${text[i]}</as400-mark-1>`;\n    } else if (\n      !_.isEmpty(markListData.mark2) &&\n      i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col)\n    ) {\n      if (markListData.mark2.text.length < 2) {\n        textHighlight += `<as400-mark-2>${text[i]}</as400-mark-2>`;\n      } else {\n        textHighlight += `<as400-mark-2>${text[i]}`;\n      }\n    } else if (\n      !_.isEmpty(markListData.mark2) &&\n      i ===\n      getIndexByRowCol(markListData.mark2.row, markListData.mark2.col) +\n      markListData.mark2.text.length -\n      1\n    ) {\n      textHighlight += `${text[i]}</as400-mark-2>`;\n    } else if (\n      !_.isEmpty(markListData.mark3) &&\n      i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col)\n    ) {\n      if (markListData.mark3.text.length < 2) {\n        textHighlight += `<as400-mark-3>${text[i]}</as400-mark-3>`;\n      } else {\n        textHighlight += `<as400-mark-3>${text[i]}`;\n      }\n    } else if (\n      !_.isEmpty(markListData.mark3) &&\n      i ===\n      getIndexByRowCol(markListData.mark3.row, markListData.mark3.col) +\n      markListData.mark3.text.length -\n      1\n    ) {\n      textHighlight += `${text[i]}</as400-mark-3>`;\n    } else {\n      textHighlight += text[i];\n    }\n  }\n\n  elHighlight.html(textHighlight);\n};"]},"metadata":{},"sourceType":"module"}