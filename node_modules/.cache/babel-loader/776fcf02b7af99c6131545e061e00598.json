{"ast":null,"code":"import _objectSpread from \"/Users/jutawuth/git/emulator/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jutawuth/git/emulator/src/components/ScreenMapping/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\nimport _ from \"lodash\";\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\nimport { getIndexByRowCol, getHighlightDefault } from \"../Emulator/controler\";\nconst MARK_1 = \"mark-1\";\nconst MARK_2 = \"mark-2\";\nconst MARK_3 = \"mark-3\";\nexport class ScreenMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.markAllCheckString = markListData => {\n      this.clearAllMarkChackString(this.state.id);\n      this.setState({\n        markList: markListData\n      });\n      const elHighlight = $(`.${this.state.id}.as400-highlight`);\n      const text = elHighlight[0].innerHTML;\n      let textHighlight = \"\";\n\n      for (let i = 0; i < text.length; i += 1) {\n        if (!_.isEmpty(markListData.mark1) && i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col)) {\n          if (markListData.mark1.text.length < 2) {\n            textHighlight += `<as400-mark-1>${text[i]}</as400-mark-1>`;\n          } else {\n            textHighlight += `<as400-mark-1>${text[i]}`;\n          }\n        } else if (!_.isEmpty(markListData.mark1) && i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col) + markListData.mark1.text.length - 1) {\n          textHighlight += `${text[i]}</as400-mark-1>`;\n        } else if (!_.isEmpty(markListData.mark2) && i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col)) {\n          if (markListData.mark2.text.length < 2) {\n            textHighlight += `<as400-mark-2>${text[i]}</as400-mark-2>`;\n          } else {\n            textHighlight += `<as400-mark-2>${text[i]}`;\n          }\n        } else if (!_.isEmpty(markListData.mark2) && i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col) + markListData.mark2.text.length - 1) {\n          textHighlight += `${text[i]}</as400-mark-2>`;\n        } else if (!_.isEmpty(markListData.mark3) && i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col)) {\n          if (markListData.mark3.text.length < 2) {\n            textHighlight += `<as400-mark-3>${text[i]}</as400-mark-3>`;\n          } else {\n            textHighlight += `<as400-mark-3>${text[i]}`;\n          }\n        } else if (!_.isEmpty(markListData.mark3) && i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col) + markListData.mark3.text.length - 1) {\n          textHighlight += `${text[i]}</as400-mark-3>`;\n        } else {\n          textHighlight += text[i];\n        }\n      }\n\n      elHighlight.html(textHighlight);\n    };\n\n    this.clearAllMarkChackString = elStr => {\n      const elHighlight = $(`.${elStr}.as400-highlight`);\n      elHighlight.html(getHighlightDefault(24, 80));\n      this.setState({\n        markList: {}\n      });\n    };\n\n    this.markStringChackString = (markType, highlight) => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n\n      switch (markType) {\n        case MARK_1:\n          newMarkList = _objectSpread({}, markList, {\n            mark1: highlight\n          });\n          break;\n\n        case MARK_2:\n          newMarkList = _objectSpread({}, markList, {\n            mark2: highlight\n          });\n          break;\n\n        case MARK_3:\n          newMarkList = _objectSpread({}, markList, {\n            mark3: highlight\n          });\n          break;\n\n        default:\n          newMarkList = markList;\n          break;\n      }\n\n      this.setState({\n        markList: newMarkList\n      });\n      this.markAllCheckString(newMarkList);\n    };\n\n    this.setHighlight = (markType, highlight) => {\n      this.markStringChackString(markType, highlight);\n    };\n\n    this.getHighlight = markType => {\n      console.log(\"type: \", markType.replase(\"-\", \"\"));\n      console.log(\"markType: \", this.state.markList[markType.replase(\"-\", \"\")]);\n    };\n\n    this.setHighlightList = highlightList => {\n      this.markAllCheckString(highlightList);\n    };\n\n    this.clearHighlightList = () => {\n      this.clearAllMarkChackString(this.props.id);\n    };\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n    this.markAllCheckString(this.props.highlight);\n  }\n\n  render() {\n    console.log(\"render\");\n    const _this$props = this.props,\n          id = _this$props.id,\n          readOnly = _this$props.readOnly;\n    return React.createElement(EmulatorView, {\n      id: id,\n      readOnly: readOnly,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    });\n  } // Set default props\n\n\n}\nScreenMapping.defaultProps = {\n  highlight: {}\n};\nScreenMapping.propTypes = {\n  highlight: PropTypes.object\n};\nexport default ScreenMapping;","map":{"version":3,"sources":["/Users/jutawuth/git/emulator/src/components/ScreenMapping/index.jsx"],"names":["React","PropTypes","$","_","Emulator","EmulatorView","getIndexByRowCol","getHighlightDefault","MARK_1","MARK_2","MARK_3","ScreenMapping","constructor","props","markAllCheckString","markListData","clearAllMarkChackString","state","id","setState","markList","elHighlight","text","innerHTML","textHighlight","i","length","isEmpty","mark1","row","col","mark2","mark3","html","elStr","markStringChackString","markType","highlight","newMarkList","setHighlight","getHighlight","console","log","replase","setHighlightList","highlightList","clearHighlightList","componentDidMount","args","apply","render","readOnly","defaultProps","propTypes","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport $ from \"jquery\";\nimport _ from \"lodash\";\n\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\n\nimport { getIndexByRowCol, getHighlightDefault } from \"../Emulator/controler\";\n\nconst MARK_1 = \"mark-1\";\nconst MARK_2 = \"mark-2\";\nconst MARK_3 = \"mark-3\";\n\nexport class ScreenMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n\n    this.markAllCheckString(this.props.highlight);\n  }\n\n  markAllCheckString = markListData => {\n    this.clearAllMarkChackString(this.state.id);\n    this.setState({\n      markList: markListData\n    });\n\n    const elHighlight = $(`.${this.state.id}.as400-highlight`);\n    const text = elHighlight[0].innerHTML;\n    let textHighlight = \"\";\n    for (let i = 0; i < text.length; i += 1) {\n      if (\n        !_.isEmpty(markListData.mark1) &&\n        i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col)\n      ) {\n        if (markListData.mark1.text.length < 2) {\n          textHighlight += `<as400-mark-1>${text[i]}</as400-mark-1>`;\n        } else {\n          textHighlight += `<as400-mark-1>${text[i]}`;\n        }\n      } else if (\n        !_.isEmpty(markListData.mark1) &&\n        i ===\n          getIndexByRowCol(markListData.mark1.row, markListData.mark1.col) +\n            markListData.mark1.text.length -\n            1\n      ) {\n        textHighlight += `${text[i]}</as400-mark-1>`;\n      } else if (\n        !_.isEmpty(markListData.mark2) &&\n        i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col)\n      ) {\n        if (markListData.mark2.text.length < 2) {\n          textHighlight += `<as400-mark-2>${text[i]}</as400-mark-2>`;\n        } else {\n          textHighlight += `<as400-mark-2>${text[i]}`;\n        }\n      } else if (\n        !_.isEmpty(markListData.mark2) &&\n        i ===\n          getIndexByRowCol(markListData.mark2.row, markListData.mark2.col) +\n            markListData.mark2.text.length -\n            1\n      ) {\n        textHighlight += `${text[i]}</as400-mark-2>`;\n      } else if (\n        !_.isEmpty(markListData.mark3) &&\n        i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col)\n      ) {\n        if (markListData.mark3.text.length < 2) {\n          textHighlight += `<as400-mark-3>${text[i]}</as400-mark-3>`;\n        } else {\n          textHighlight += `<as400-mark-3>${text[i]}`;\n        }\n      } else if (\n        !_.isEmpty(markListData.mark3) &&\n        i ===\n          getIndexByRowCol(markListData.mark3.row, markListData.mark3.col) +\n            markListData.mark3.text.length -\n            1\n      ) {\n        textHighlight += `${text[i]}</as400-mark-3>`;\n      } else {\n        textHighlight += text[i];\n      }\n    }\n\n    elHighlight.html(textHighlight);\n  };\n\n  clearAllMarkChackString = elStr => {\n    const elHighlight = $(`.${elStr}.as400-highlight`);\n    elHighlight.html(getHighlightDefault(24, 80));\n\n    this.setState({\n      markList: {}\n    });\n  };\n\n  markStringChackString = (markType, highlight) => {\n    let newMarkList = \"\";\n\n    const markList = this.state.markList;\n\n    switch (markType) {\n      case MARK_1:\n        newMarkList = {\n          ...markList,\n          mark1: highlight\n        };\n        break;\n      case MARK_2:\n        newMarkList = {\n          ...markList,\n          mark2: highlight\n        };\n        break;\n      case MARK_3:\n        newMarkList = {\n          ...markList,\n          mark3: highlight\n        };\n        break;\n\n      default:\n        newMarkList = markList;\n        break;\n    }\n\n    this.setState({ markList: newMarkList });\n\n    this.markAllCheckString(newMarkList);\n  };\n\n  setHighlight = (markType, highlight) => {\n    this.markStringChackString(markType, highlight);\n  };\n\n  getHighlight = markType => {\n    console.log(\"type: \", markType.replase(\"-\", \"\"));\n\n    console.log(\"markType: \", this.state.markList[markType.replase(\"-\", \"\")]);\n  };\n\n  setHighlightList = highlightList => {\n    this.markAllCheckString(highlightList);\n  };\n\n  clearHighlightList = () => {\n    this.clearAllMarkChackString(this.props.id);\n  };\n\n  render() {\n    console.log(\"render\");\n\n    const { id, readOnly } = this.props;\n    return <EmulatorView id={id} readOnly={readOnly} />;\n  }\n  // Set default props\n  static defaultProps = {\n    highlight: {}\n  };\n}\n\nScreenMapping.propTypes = {\n  highlight: PropTypes.object\n};\n\nexport default ScreenMapping;\n"]},"metadata":{},"sourceType":"module"}