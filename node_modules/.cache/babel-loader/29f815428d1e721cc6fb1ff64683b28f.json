{"ast":null,"code":"import _objectSpread from \"/Users/jutawuth/Git/SSQUARE/Component-AS400-React/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/components/FieldsMapping/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\nimport { getHighlightDefault, getSelectionRange, getStartSelection, markAllCheckStringOnScreen } from \"../Emulator/controler\";\nconst MARK_1 = \"mark-1\";\nexport class FieldsMapping extends Emulator {\n  constructor(...args) {\n    super(...args);\n\n    this.markAllCheckString = markListData => {\n      const id = this.state.id;\n      this.clearAllMarkChackString(id);\n      this.setState({\n        markList: markListData\n      });\n      markAllCheckStringOnScreen(id, markListData);\n    };\n\n    this.clearAllMarkChackString = elStr => {\n      const _this$state = this.state,\n            rowSize = _this$state.rowSize,\n            colSize = _this$state.colSize;\n      const elHighlight = $(`.${elStr}.as400-highlight`);\n      elHighlight.html(getHighlightDefault(rowSize, colSize));\n      this.setState({\n        markList: {}\n      });\n    };\n\n    this.markStringChackString = (markType, highlight) => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n      newMarkList = _objectSpread({}, markList, {\n        [markType.replace(\"-\", \"\")]: highlight\n      });\n      this.setState({\n        markList: newMarkList\n      });\n      this.markAllCheckString(newMarkList);\n    };\n\n    this.clearMarkString = markType => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n      const markData = {};\n      newMarkList = _objectSpread({}, markList, {\n        [markType.replace(\"-\", \"\")]: markData\n      });\n      this.setState({\n        markList: newMarkList\n      });\n      this.markAllCheckString(newMarkList);\n    };\n\n    this.onMouseUp = callbackFn => {\n      const id = this.state.id;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.mouseup(event => {\n        // console.log(`| ========== ${event.type} ========== | `);\n        callbackFn(event);\n        this.clearAllMarkChackString(id);\n      });\n    };\n\n    this.onDoubleClick = callbackFn => {\n      const id = this.state.id;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.dblclick(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        callbackFn(event);\n      });\n    };\n\n    this.onSelect = () => {\n      const _this$state2 = this.state,\n            id = _this$state2.id,\n            colSize = _this$state2.colSize;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.select(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        const start = event.target.selectionStart;\n        const end = event.target.selectionEnd;\n        const startPosition = getStartSelection(id, colSize);\n        const data = {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        };\n        this.setState({\n          lastSelection: {\n            text: getSelectionRange(id, start, end),\n            row: startPosition.row,\n            col: startPosition.col\n          }\n        });\n        this.markStringChackString(MARK_1, data);\n      });\n    };\n\n    this.getFieldHighlight = () => {\n      return this.state.markList[MARK_1.replace(\"-\", \"\")];\n    };\n\n    this.setFieldHighlight = highlight => {\n      this.markStringChackString(MARK_1, highlight);\n    };\n\n    this.clearFieldHighlight = () => {\n      return this.clearMarkString(MARK_1);\n    };\n\n    this.getLastSelection = () => {\n      return this.state.lastSelection;\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n    this.markAllCheckString(this.props.highlight);\n    const _this$props = this.props,\n          onDoubleClick = _this$props.onDoubleClick,\n          onMouseUp = _this$props.onMouseUp;\n    this.onSelect();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  render() {\n    const id = this.props.id;\n    return React.createElement(EmulatorView, {\n      id: id,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    });\n  } // Set default props\n\n\n}\nFieldsMapping.defaultProps = {\n  highlight: {}\n};\nFieldsMapping.propTypes = {\n  highlightList: PropTypes.object\n};\nexport default FieldsMapping;","map":{"version":3,"sources":["/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/components/FieldsMapping/index.jsx"],"names":["React","PropTypes","$","Emulator","EmulatorView","getHighlightDefault","getSelectionRange","getStartSelection","markAllCheckStringOnScreen","MARK_1","FieldsMapping","markAllCheckString","markListData","id","state","clearAllMarkChackString","setState","markList","elStr","rowSize","colSize","elHighlight","html","markStringChackString","markType","highlight","newMarkList","replace","clearMarkString","markData","onMouseUp","callbackFn","elScreen","mouseup","event","onDoubleClick","dblclick","onSelect","select","start","target","selectionStart","end","selectionEnd","startPosition","data","text","row","col","lastSelection","getFieldHighlight","setFieldHighlight","clearFieldHighlight","getLastSelection","componentDidMount","args","apply","props","render","defaultProps","propTypes","highlightList","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\n\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\n\nimport {\n  getHighlightDefault,\n  getSelectionRange,\n  getStartSelection,\n  markAllCheckStringOnScreen\n} from \"../Emulator/controler\";\n\nconst MARK_1 = \"mark-1\";\n\nexport class FieldsMapping extends Emulator {\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n\n    this.markAllCheckString(this.props.highlight);\n\n    const { onDoubleClick, onMouseUp } = this.props;\n\n    this.onSelect();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  markAllCheckString = markListData => {\n    const { id } = this.state;\n    this.clearAllMarkChackString(id);\n    this.setState({\n      markList: markListData\n    });\n\n    markAllCheckStringOnScreen(id, markListData);\n  };\n\n  clearAllMarkChackString = elStr => {\n    const { rowSize, colSize } = this.state;\n    const elHighlight = $(`.${elStr}.as400-highlight`);\n    elHighlight.html(getHighlightDefault(rowSize, colSize));\n\n    this.setState({\n      markList: {}\n    });\n  };\n\n  markStringChackString = (markType, highlight) => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: highlight\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  clearMarkString = markType => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n    const markData = {};\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: markData\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  onMouseUp = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.mouseup(event => {\n      // console.log(`| ========== ${event.type} ========== | `);\n      callbackFn(event);\n      this.clearAllMarkChackString(id);\n    });\n  };\n\n  onDoubleClick = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.dblclick(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n\n      callbackFn(event);\n    });\n  };\n\n  onSelect = () => {\n    const { id, colSize } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.select(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      const start = event.target.selectionStart;\n      const end = event.target.selectionEnd;\n      const startPosition = getStartSelection(id, colSize);\n\n      const data = {\n        text: getSelectionRange(id, start, end),\n        row: startPosition.row,\n        col: startPosition.col\n      };\n\n      this.setState({\n        lastSelection: {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        }\n      });\n\n      this.markStringChackString(MARK_1, data);\n    });\n  };\n\n  /**\n   * ==================\n   *  provide function\n   * ==================\n   */\n  getFieldHighlight = () => {\n    return this.state.markList[MARK_1.replace(\"-\", \"\")];\n  };\n\n  setFieldHighlight = highlight => {\n    this.markStringChackString(MARK_1, highlight);\n  };\n\n  clearFieldHighlight = () => {\n    return this.clearMarkString(MARK_1);\n  };\n\n  // getFieldHighlightList = () => {\n  //   return this.state.markList;\n  // };\n\n  // setFieldHighlightList = highlightList => {\n  //   this.markAllCheckString(highlightList);\n  // };\n\n  // clearFieldHighlightList = () => {\n  //   this.clearAllMarkChackString(this.props.id);\n  // };\n\n  getLastSelection = () => {\n    return this.state.lastSelection;\n  };\n\n  render() {\n    const { id } = this.props;\n    return <EmulatorView id={id} readOnly />;\n  }\n\n  // Set default props\n  static defaultProps = {\n    highlight: {}\n  };\n}\n\nFieldsMapping.propTypes = {\n  highlightList: PropTypes.object\n};\n\nexport default FieldsMapping;\n"]},"metadata":{},"sourceType":"module"}