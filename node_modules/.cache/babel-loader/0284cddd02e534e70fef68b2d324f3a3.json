{"ast":null,"code":"import $ from \"jquery\";\nexport const initScreen = (elStr, rowSize, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.attr(\"rows\", rowSize);\n  elScreen.attr(\"cols\", colSize);\n  const elScreenTemp = $(`.${elStr}.as400-screen-temp`);\n  elScreenTemp.attr(\"rows\", rowSize);\n  elScreenTemp.attr(\"cols\", colSize);\n  const elStyle = $(`.${elStr}.as400-style`);\n  elStyle.attr(\"rows\", rowSize);\n  elStyle.attr(\"cols\", colSize);\n  const elHighlight = $(`.${elStr}.as400-highlight`);\n  elHighlight.html(getHighlightDefault(rowSize, colSize));\n};\nexport const setAs400Screen = (elStr, data) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.val(data);\n};\nexport const setAs400Style = (elStr, text, styleParams) => {\n  const elStyle = $(`.${elStr}.as400-style`);\n  let style = styleParams;\n  let textStyle = \"\";\n\n  for (let i = 0; i < text.length; i += 1) {\n    const character = text[i];\n    const styleCharacter = style[i];\n\n    if (styleCharacter !== \".\" && !$.isEmptyObject(styleCharacter)) {\n      textStyle += character.replace(character, `<as400-${styleCharacter.toLowerCase()}-style>$&</as400-${styleCharacter.toLowerCase()}-style>`);\n    } else {\n      textStyle += character;\n    }\n  }\n\n  $(elStyle).html(textStyle);\n};\n\nconst getHighlightDefault = (rowSize, colSize) => {\n  let textHighlight = \"\";\n\n  for (let i = 0; i < rowSize; i += 1) {\n    for (let j = 0; j < colSize; j += 1) {\n      textHighlight += \".\";\n    }\n\n    textHighlight += \"\\n\";\n  }\n\n  return textHighlight;\n};\n\nconst getIndexByRowCol = (row, colSize) => (row - 1) * 80 + colSize + row - 2;\n\nconst setSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`)[0];\n  let start = selectionStart;\n  let end = selectionEnd;\n  start -= 1;\n  end -= 1; // elScreen.focus();\n\n  if (elScreen.setSelectionRange) {\n    elScreen.setSelectionRange(start, end);\n  } else if (elScreen.createTextRange) {\n    const range = elScreen.createTextRange();\n    range.collapse(true);\n    range.moveEnd(\"character\", end);\n    range.moveStart(\"character\", start);\n    range.select();\n  }\n};\n\nexport const clearHighlight = (elStr, markType) => {\n  const elHighlight = $(`.${elStr}.as400-highlight`);\n  let newHighlight = elHighlight.html();\n  newHighlight = newHighlight.replace(`<as400-${markType}>`, \"\").replace(`</as400-${markType}>`, \"\");\n  elHighlight.html(newHighlight);\n};\n\nconst getAS400Cursor = posStr => {\n  const posArr = posStr.split(\",\");\n  return {\n    row: parseInt(posArr[0]),\n    col: parseInt(posArr[1])\n  };\n};\n\nexport const setAS400Cursor = (elStr, data) => {\n  const pos = getAS400Cursor(data);\n  const index = getIndexByRowCol(pos.row, pos.col);\n  setSelectionRange(elStr, index, index);\n};\nexport const convertRowColNumber = posStr => {\n  const posArr = posStr.trim().split(\",\");\n  return {\n    row: posArr[0],\n    col: posArr[1]\n  };\n};\nexport const getRowNumberByIndex = (elStr, index) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  return elScreen.val().substr(0, index).split(\"\\n\").length - 1;\n};\nexport const getColNumberByIndex = (elStr, index, colSize) => {\n  const row = this.getRowNumberByIndex(elStr, index);\n  const col = (index - row) % colSize;\n\n  if (index === colSize * (row + 1) + row) {\n    return colSize;\n  }\n\n  return col;\n};\nexport const setIndexByRowCol = (elStr, row, col) => {\n  const index = getIndexByRowCol(row, col);\n  setSelectionRange(elStr, index, index);\n};\nexport const getStartSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const startIndex = elScreen.prop(\"selectionStart\");\n  const rowSelectionStartIndex = this.getRowNumberByIndex(elStr, startIndex) + 1;\n  const colSelectionStartIndex = this.getColNumberByIndex(elStr, startIndex, colSize) + 1;\n  return {\n    row: rowSelectionStartIndex,\n    col: colSelectionStartIndex\n  };\n};\nexport const getEndSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const endIndex = elScreen.prop(\"selectionEnd\");\n  const rowSelectionEndIndex = this.getRowNumberByIndex(elStr, endIndex) + 1;\n  const colSelectionEndIndex = this.getColNumberByIndex(elStr, endIndex, colSize) + 1;\n  return {\n    row: rowSelectionEndIndex,\n    col: colSelectionEndIndex\n  };\n};\nexport const getSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n\n  if (selectionStart !== selectionEnd) {\n    const selection = elScreen.val().substring(selectionStart, selectionEnd);\n    return selection;\n  }\n\n  return \"\";\n};","map":{"version":3,"sources":["/Users/jutawuth/git/emulator/src/components/Emulator/controler.js"],"names":["$","initScreen","elStr","rowSize","colSize","elScreen","attr","elScreenTemp","elStyle","elHighlight","html","getHighlightDefault","setAs400Screen","data","val","setAs400Style","text","styleParams","style","textStyle","i","length","character","styleCharacter","isEmptyObject","replace","toLowerCase","textHighlight","j","getIndexByRowCol","row","setSelectionRange","selectionStart","selectionEnd","start","end","createTextRange","range","collapse","moveEnd","moveStart","select","clearHighlight","markType","newHighlight","getAS400Cursor","posStr","posArr","split","parseInt","col","setAS400Cursor","pos","index","convertRowColNumber","trim","getRowNumberByIndex","substr","getColNumberByIndex","setIndexByRowCol","getStartSelection","startIndex","prop","rowSelectionStartIndex","colSelectionStartIndex","getEndSelection","endIndex","rowSelectionEndIndex","colSelectionEndIndex","getSelectionRange","selection","substring"],"mappings":"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","sourcesContent":["import $ from \"jquery\";\n\nexport const initScreen = (elStr, rowSize, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.attr(\"rows\", rowSize);\n  elScreen.attr(\"cols\", colSize);\n\n  const elScreenTemp = $(`.${elStr}.as400-screen-temp`);\n  elScreenTemp.attr(\"rows\", rowSize);\n  elScreenTemp.attr(\"cols\", colSize);\n\n  const elStyle = $(`.${elStr}.as400-style`);\n  elStyle.attr(\"rows\", rowSize);\n  elStyle.attr(\"cols\", colSize);\n\n  const elHighlight = $(`.${elStr}.as400-highlight`);\n  elHighlight.html(getHighlightDefault(rowSize, colSize));\n};\n\nexport const setAs400Screen = (elStr, data) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  elScreen.val(data);\n};\n\nexport const setAs400Style = (elStr, text, styleParams) => {\n  const elStyle = $(`.${elStr}.as400-style`);\n\n  let style = styleParams;\n\n  let textStyle = \"\";\n  for (let i = 0; i < text.length; i += 1) {\n    const character = text[i];\n    const styleCharacter = style[i];\n\n    if (styleCharacter !== \".\" && !$.isEmptyObject(styleCharacter)) {\n      textStyle += character.replace(\n        character,\n        `<as400-${styleCharacter.toLowerCase()}-style>$&</as400-${styleCharacter.toLowerCase()}-style>`\n      );\n    } else {\n      textStyle += character;\n    }\n  }\n\n  $(elStyle).html(textStyle);\n};\n\nconst getHighlightDefault = (rowSize, colSize) => {\n  let textHighlight = \"\";\n  for (let i = 0; i < rowSize; i += 1) {\n    for (let j = 0; j < colSize; j += 1) {\n      textHighlight += \".\";\n    }\n    textHighlight += \"\\n\";\n  }\n  return textHighlight;\n};\n\nconst getIndexByRowCol = (row, colSize) => (row - 1) * 80 + colSize + row - 2;\n\nconst setSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`)[0];\n\n  let start = selectionStart;\n  let end = selectionEnd;\n\n  start -= 1;\n  end -= 1;\n\n  // elScreen.focus();\n  if (elScreen.setSelectionRange) {\n    elScreen.setSelectionRange(start, end);\n  } else if (elScreen.createTextRange) {\n    const range = elScreen.createTextRange();\n    range.collapse(true);\n    range.moveEnd(\"character\", end);\n    range.moveStart(\"character\", start);\n    range.select();\n  }\n};\n\nexport const clearHighlight = (elStr, markType) => {\n  const elHighlight = $(`.${elStr}.as400-highlight`);\n  let newHighlight = elHighlight.html();\n\n  newHighlight = newHighlight\n    .replace(`<as400-${markType}>`, \"\")\n    .replace(`</as400-${markType}>`, \"\");\n\n  elHighlight.html(newHighlight);\n};\n\nconst getAS400Cursor = posStr => {\n  const posArr = posStr.split(\",\");\n\n  return {\n    row: parseInt(posArr[0]),\n    col: parseInt(posArr[1])\n  };\n};\n\nexport const setAS400Cursor = (elStr, data) => {\n  const pos = getAS400Cursor(data);\n\n  const index = getIndexByRowCol(pos.row, pos.col);\n\n  setSelectionRange(elStr, index, index);\n};\n\nexport const convertRowColNumber = posStr => {\n  const posArr = posStr.trim().split(\",\");\n  return {\n    row: posArr[0],\n    col: posArr[1]\n  };\n};\n\nexport const getRowNumberByIndex = (elStr, index) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  return (\n    elScreen\n      .val()\n      .substr(0, index)\n      .split(\"\\n\").length - 1\n  );\n};\n\nexport const getColNumberByIndex = (elStr, index, colSize) => {\n  const row = this.getRowNumberByIndex(elStr, index);\n  const col = (index - row) % colSize;\n\n  if (index === colSize * (row + 1) + row) {\n    return colSize;\n  }\n  return col;\n};\n\nexport const setIndexByRowCol = (elStr, row, col) => {\n  const index = getIndexByRowCol(row, col);\n  setSelectionRange(elStr, index, index);\n};\n\nexport const getStartSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const startIndex = elScreen.prop(\"selectionStart\");\n\n  const rowSelectionStartIndex =\n    this.getRowNumberByIndex(elStr, startIndex) + 1;\n  const colSelectionStartIndex =\n    this.getColNumberByIndex(elStr, startIndex, colSize) + 1;\n\n  return {\n    row: rowSelectionStartIndex,\n    col: colSelectionStartIndex\n  };\n};\n\nexport const getEndSelection = (elStr, colSize) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n  const endIndex = elScreen.prop(\"selectionEnd\");\n  const rowSelectionEndIndex = this.getRowNumberByIndex(elStr, endIndex) + 1;\n  const colSelectionEndIndex =\n    this.getColNumberByIndex(elStr, endIndex, colSize) + 1;\n\n  return {\n    row: rowSelectionEndIndex,\n    col: colSelectionEndIndex\n  };\n};\n\nexport const getSelectionRange = (elStr, selectionStart, selectionEnd) => {\n  const elScreen = $(`.${elStr}.as400-screen`);\n\n  if (selectionStart !== selectionEnd) {\n    const selection = elScreen.val().substring(selectionStart, selectionEnd);\n    return selection;\n  }\n  return \"\";\n};\n"]},"metadata":{},"sourceType":"module"}