{"ast":null,"code":"var _jsxFileName = \"/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/pages/FieldsMapping/index.jsx\";\nimport React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport FieldsMapping from \"../../components/FieldsMapping\";\nimport { setAs400Screen, setAs400Style, getAS400Cursor, setAS400Cursor, getIndexByRowCol, setSelectionRange, getStartSelection, getEndSelection } from \"../../components/Emulator/controler\";\nconst data = {\n  HEADER: {\n    tokenId: \"EWI112233445566\",\n    requestId: \"ABC123456789\",\n    deviceId: \"UUID9988776655\"\n  },\n  DATA: {\n    screen: {\n      rows: 24,\n      cols: 80\n    },\n    Text: \"                                   Sign On                                      \\n                                               System  . . . . . :   S101CD3M   \\n                                               Subsystem . . . . :   QINTER     \\n                                               Display . . . . . :   QPADEV003R \\n                                                                                \\n                User  . . . . . . . . . . . . . .                               \\n                Password  . . . . . . . . . . . .                               \\n                Program/procedure . . . . . . . .                               \\n                Menu  . . . . . . . . . . . . . .                               \\n                Current library . . . . . . . . .                               \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                        (C) COPYRIGHT IBM CORP. 1980, 2005.     \",\n    Style: \".................................RRRRRRRRRRRRR..................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n.........................................................UUUUUUUUUU.............\\n.........................................................HHHHHHHHHH.............\\n.........................................................UUUUUUUUUU.............\\n.........................................................UUUUUUUUUU.............\\n.........................................................UUUUUUUUUU.............\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\",\n    Cursor: \"5,53\"\n  }\n};\nconst id = \"flow3\";\nconst _data$DATA$screen = data.DATA.screen,\n      rows = _data$DATA$screen.rows,\n      cols = _data$DATA$screen.cols;\nconst _data$DATA = data.DATA,\n      text = _data$DATA.Text,\n      style = _data$DATA.Style,\n      cursor = _data$DATA.Cursor;\nconst highlightList = {\n  mark1: {\n    text: \"          \",\n    row: 6,\n    col: 58\n  },\n  mark1: {\n    text: \"          \",\n    row: 68,\n    col: 58\n  }\n};\n\nconst onDblClickHandler = event => {\n  // console.log(`| ========== ${event.type} ========== |`);\n  let eventKey = event.key;\n\n  if (event.keyCode >= 8 && event.keyCode < 48) {\n    eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n  }\n\n  const selected = getStartSelection(id, cols);\n  const dataForApi = {\n    HEADER: {\n      tokenId: \"EWI112233445566\",\n      requestId: \"ABC123456789\",\n      deviceId: \"UUID9988776655\" // requestCount: this.resultCount\n\n    },\n    DATA: {\n      Event: \"SELECTION\",\n      KeyValue: eventKey,\n      Cursor: `${selected.row},${selected.col}`\n    }\n  };\n  Axios({\n    method: \"post\",\n    url: \"http://localhost:8085/emulator\",\n    data: JSON.stringify(dataForApi),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    // handle success\n    const data = response.data.DATA;\n    setAs400Screen(id, data.Text);\n    setAs400Style(id, data.Text, data.Style);\n    setAS400Cursor(id, data.Cursor); //    clearAllMarkChackString(id);\n\n    const fields = data.Fields;\n    let selection = null;\n    const index = getAS400Cursor(data.Cursor);\n    fields.forEach(f => {\n      if (Math.abs(f.EndRow - f.StartRow) === 0) {\n        if (index.col >= f.StartCol && index.col <= f.EndCol && f.StartRow === index.row) {\n          selection = f;\n        }\n      }\n    });\n    const selectionStart = getIndexByRowCol(selection.StartRow, selection.StartCol);\n    const selectionEnd = getIndexByRowCol(selection.EndRow, selection.EndCol);\n    setSelectionRange(id, selectionStart, selectionEnd);\n  }).catch(response => {\n    // handle error\n    console.log(`response: ${response}`);\n  });\n};\n\nconst onMouseUpHandler = event => {\n  // console.log(`| ========== ${event.type} ========== | `);\n  if (event.keyCode === 9 || event.keyCode > 111 && event.keyCode !== 123) {\n    event.preventDefault();\n  }\n\n  let eventKey = event.key;\n  const selected = getStartSelection(id, cols);\n\n  if (event.keyCode >= 8 && event.keyCode < 48) {\n    eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n  }\n\n  const dataForApi = {\n    HEADER: {\n      tokenId: \"EWI112233445566\",\n      requestId: \"ABC123456789\",\n      deviceId: \"UUID9988776655\" // requestCount: this.resultCount\n\n    },\n    DATA: {\n      Event: \"KEYDOWN\",\n      KeyValue: eventKey,\n      Cursor: `${selected.row},${selected.col}`\n    }\n  };\n  Axios({\n    method: \"post\",\n    url: \"http://localhost:8085/emulator\",\n    data: JSON.stringify(dataForApi),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    // console.log(`| ========== ${event.type} ========== | `);\n    const startSelection = getStartSelection(id, cols);\n    const endSelection = getEndSelection(id, cols);\n    const flag = \"field\"; // const flag = 'list';\n\n    if (flag === \"list\") {\n      const selectionStart = getIndexByRowCol(startSelection.row, 0) + 1;\n      const selectionEnd = getIndexByRowCol(endSelection.row, cols) + 2;\n      setSelectionRange(id, selectionStart, selectionEnd);\n    }\n  }).catch(response => {\n    // handle error\n    console.log(`response: ${response}`);\n  });\n};\n\nclass FieldsMappingPage extends Component {\n  constructor(props) {\n    super(props);\n    this.smRef = React.createRef();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(FieldsMapping, {\n      id: id,\n      ref: this.smRef,\n      rows: rows,\n      cols: cols,\n      text: text,\n      style: style,\n      cursor: cursor,\n      highlight: highlightList,\n      onDoubleClick: onDblClickHandler,\n      onMouseUp: onMouseUpHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.smRef.current.setFieldHighlightList(highlightList),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"highlight list\"), React.createElement(\"button\", {\n      onClick: () => {\n        console.log(this.smRef.current.getFieldHighlightList());\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"get field marker\"), React.createElement(\"button\", {\n      onClick: () => this.smRef.current.clearFieldHighlightList(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"clear field list marker\"), React.createElement(\"button\", {\n      onClick: () => {\n        console.log(this.smRef.current.getFieldHighlight());\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"get field marker\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.smRef.current.clearFieldHighlight();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"clear field marker\"));\n  }\n\n}\n\nexport default FieldsMappingPage;","map":{"version":3,"sources":["/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/pages/FieldsMapping/index.jsx"],"names":["React","Component","Axios","FieldsMapping","setAs400Screen","setAs400Style","getAS400Cursor","setAS400Cursor","getIndexByRowCol","setSelectionRange","getStartSelection","getEndSelection","data","HEADER","tokenId","requestId","deviceId","DATA","screen","rows","cols","Text","Style","Cursor","id","text","style","cursor","highlightList","mark1","row","col","onDblClickHandler","event","eventKey","key","keyCode","toLowerCase","selected","dataForApi","Event","KeyValue","method","url","JSON","stringify","headers","then","response","fields","Fields","selection","index","forEach","f","Math","abs","EndRow","StartRow","StartCol","EndCol","selectionStart","selectionEnd","catch","console","log","onMouseUpHandler","preventDefault","startSelection","endSelection","flag","FieldsMappingPage","constructor","props","smRef","createRef","render","current","setFieldHighlightList","getFieldHighlightList","clearFieldHighlightList","getFieldHighlight","clearFieldHighlight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Axios from \"axios\";\n\nimport FieldsMapping from \"../../components/FieldsMapping\";\n\nimport {\n  setAs400Screen,\n  setAs400Style,\n  getAS400Cursor,\n  setAS400Cursor,\n  getIndexByRowCol,\n  setSelectionRange,\n  getStartSelection,\n  getEndSelection\n} from \"../../components/Emulator/controler\";\n\nconst data = {\n  HEADER: {\n    tokenId: \"EWI112233445566\",\n    requestId: \"ABC123456789\",\n    deviceId: \"UUID9988776655\"\n  },\n  DATA: {\n    screen: { rows: 24, cols: 80 },\n    Text:\n      \"                                   Sign On                                      \\n                                               System  . . . . . :   S101CD3M   \\n                                               Subsystem . . . . :   QINTER     \\n                                               Display . . . . . :   QPADEV003R \\n                                                                                \\n                User  . . . . . . . . . . . . . .                               \\n                Password  . . . . . . . . . . . .                               \\n                Program/procedure . . . . . . . .                               \\n                Menu  . . . . . . . . . . . . . .                               \\n                Current library . . . . . . . . .                               \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                                                                \\n                                        (C) COPYRIGHT IBM CORP. 1980, 2005.     \",\n    Style:\n      \".................................RRRRRRRRRRRRR..................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n.........................................................UUUUUUUUUU.............\\n.........................................................HHHHHHHHHH.............\\n.........................................................UUUUUUUUUU.............\\n.........................................................UUUUUUUUUU.............\\n.........................................................UUUUUUUUUU.............\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\\n................................................................................\",\n    Cursor: \"5,53\"\n  }\n};\n\nconst id = \"flow3\";\nconst { rows, cols } = data.DATA.screen;\nconst { Text: text, Style: style, Cursor: cursor } = data.DATA;\nconst highlightList = {\n  mark1: { text: \"          \", row: 6, col: 58 },\n  mark1: { text: \"          \", row: 68, col: 58 }\n};\n\nconst onDblClickHandler = event => {\n  // console.log(`| ========== ${event.type} ========== |`);\n  let eventKey = event.key;\n  if (event.keyCode >= 8 && event.keyCode < 48) {\n    eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n  }\n  const selected = getStartSelection(id, cols);\n  const dataForApi = {\n    HEADER: {\n      tokenId: \"EWI112233445566\",\n      requestId: \"ABC123456789\",\n      deviceId: \"UUID9988776655\"\n      // requestCount: this.resultCount\n    },\n    DATA: {\n      Event: \"SELECTION\",\n      KeyValue: eventKey,\n      Cursor: `${selected.row},${selected.col}`\n    }\n  };\n\n  Axios({\n    method: \"post\",\n    url: \"http://localhost:8085/emulator\",\n    data: JSON.stringify(dataForApi),\n    headers: { \"Content-Type\": \"application/json\" }\n  })\n    .then(response => {\n      // handle success\n      const data = response.data.DATA;\n\n      setAs400Screen(id, data.Text);\n      setAs400Style(id, data.Text, data.Style);\n      setAS400Cursor(id, data.Cursor);\n\n      //    clearAllMarkChackString(id);\n\n      const fields = data.Fields;\n      let selection = null;\n\n      const index = getAS400Cursor(data.Cursor);\n      fields.forEach(f => {\n        if (Math.abs(f.EndRow - f.StartRow) === 0) {\n          if (\n            index.col >= f.StartCol &&\n            index.col <= f.EndCol &&\n            f.StartRow === index.row\n          ) {\n            selection = f;\n          }\n        }\n      });\n\n      const selectionStart = getIndexByRowCol(\n        selection.StartRow,\n        selection.StartCol\n      );\n      const selectionEnd = getIndexByRowCol(selection.EndRow, selection.EndCol);\n\n      setSelectionRange(id, selectionStart, selectionEnd);\n    })\n    .catch(response => {\n      // handle error\n      console.log(`response: ${response}`);\n    });\n};\n\nconst onMouseUpHandler = event => {\n  // console.log(`| ========== ${event.type} ========== | `);\n  if (event.keyCode === 9 || (event.keyCode > 111 && event.keyCode !== 123)) {\n    event.preventDefault();\n  }\n\n  let eventKey = event.key;\n  const selected = getStartSelection(id, cols);\n  if (event.keyCode >= 8 && event.keyCode < 48) {\n    eventKey = `[' + ${eventKey.toLowerCase()} + ']`;\n  }\n  const dataForApi = {\n    HEADER: {\n      tokenId: \"EWI112233445566\",\n      requestId: \"ABC123456789\",\n      deviceId: \"UUID9988776655\"\n      // requestCount: this.resultCount\n    },\n    DATA: {\n      Event: \"KEYDOWN\",\n      KeyValue: eventKey,\n      Cursor: `${selected.row},${selected.col}`\n    }\n  };\n\n  Axios({\n    method: \"post\",\n    url: \"http://localhost:8085/emulator\",\n    data: JSON.stringify(dataForApi),\n    headers: { \"Content-Type\": \"application/json\" }\n  })\n    .then(response => {\n      // console.log(`| ========== ${event.type} ========== | `);\n      const startSelection = getStartSelection(id, cols);\n      const endSelection = getEndSelection(id, cols);\n\n      const flag = \"field\";\n      // const flag = 'list';\n      if (flag === \"list\") {\n        const selectionStart = getIndexByRowCol(startSelection.row, 0) + 1;\n        const selectionEnd = getIndexByRowCol(endSelection.row, cols) + 2;\n\n        setSelectionRange(id, selectionStart, selectionEnd);\n      }\n    })\n    .catch(response => {\n      // handle error\n      console.log(`response: ${response}`);\n    });\n};\n\nclass FieldsMappingPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.smRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <div>\n        <FieldsMapping\n          id={id}\n          ref={this.smRef}\n          rows={rows}\n          cols={cols}\n          text={text}\n          style={style}\n          cursor={cursor}\n          highlight={highlightList}\n          onDoubleClick={onDblClickHandler}\n          onMouseUp={onMouseUpHandler}\n        />\n        <button\n          onClick={() =>\n            this.smRef.current.setFieldHighlightList(highlightList)\n          }\n        >\n          highlight list\n        </button>\n        <button\n          onClick={() => {\n            console.log(this.smRef.current.getFieldHighlightList());\n          }}\n        >\n          get field marker\n        </button>\n        <button onClick={() => this.smRef.current.clearFieldHighlightList()}>\n          clear field list marker\n        </button>\n        {/* <button\n          onClick={() => {\n            const highlight = this.smRef.current.getLastSelection();\n            this.smRef.current.setFieldHighlight(highlight);\n          }}\n        >\n          mark field\n        </button> */}\n        <button\n          onClick={() => {\n            console.log(this.smRef.current.getFieldHighlight());\n          }}\n        >\n          get field marker\n        </button>\n        <button\n          onClick={() => {\n            this.smRef.current.clearFieldHighlight();\n          }}\n        >\n          clear field marker\n        </button>\n      </div>\n    );\n  }\n}\nexport default FieldsMappingPage;\n"]},"metadata":{},"sourceType":"module"}