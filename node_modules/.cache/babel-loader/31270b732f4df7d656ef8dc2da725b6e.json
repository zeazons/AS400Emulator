{"ast":null,"code":"import _objectSpread from \"/Users/jutawuth/Git/SSQUARE/Component-AS400-React/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/components/ScreenMapping/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport $ from \"jquery\";\nimport _ from \"lodash\";\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\nimport { getIndexByRowCol, getHighlightDefault, getSelectionRange, setSelectionRange, getStartSelection, getEndSelection } from \"../Emulator/controler\";\nexport class ScreenMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.markAllCheckString = markListData => {\n      this.clearAllMarkChackString(this.state.id);\n      this.setState({\n        markList: markListData\n      });\n      const elHighlight = $(`.${this.state.id}.as400-highlight`);\n      const text = elHighlight[0].innerHTML;\n      let textHighlight = \"\";\n\n      for (let i = 0; i < text.length; i += 1) {\n        if (!_.isEmpty(markListData.mark1) && i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col)) {\n          if (markListData.mark1.text.length < 2) {\n            textHighlight += `<as400-mark-1>${text[i]}</as400-mark-1>`;\n          } else {\n            textHighlight += `<as400-mark-1>${text[i]}`;\n          }\n        } else if (!_.isEmpty(markListData.mark1) && i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col) + markListData.mark1.text.length - 1) {\n          textHighlight += `${text[i]}</as400-mark-1>`;\n        } else if (!_.isEmpty(markListData.mark2) && i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col)) {\n          if (markListData.mark2.text.length < 2) {\n            textHighlight += `<as400-mark-2>${text[i]}</as400-mark-2>`;\n          } else {\n            textHighlight += `<as400-mark-2>${text[i]}`;\n          }\n        } else if (!_.isEmpty(markListData.mark2) && i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col) + markListData.mark2.text.length - 1) {\n          textHighlight += `${text[i]}</as400-mark-2>`;\n        } else if (!_.isEmpty(markListData.mark3) && i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col)) {\n          if (markListData.mark3.text.length < 2) {\n            textHighlight += `<as400-mark-3>${text[i]}</as400-mark-3>`;\n          } else {\n            textHighlight += `<as400-mark-3>${text[i]}`;\n          }\n        } else if (!_.isEmpty(markListData.mark3) && i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col) + markListData.mark3.text.length - 1) {\n          textHighlight += `${text[i]}</as400-mark-3>`;\n        } else {\n          textHighlight += text[i];\n        }\n      }\n\n      elHighlight.html(textHighlight);\n    };\n\n    this.clearAllMarkChackString = elStr => {\n      const _this$state = this.state,\n            rowSize = _this$state.rowSize,\n            colSize = _this$state.colSize;\n      const elHighlight = $(`.${elStr}.as400-highlight`);\n      elHighlight.html(getHighlightDefault(rowSize, colSize));\n      this.setState({\n        markList: {}\n      });\n    };\n\n    this.markStringChackString = (markType, highlight) => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n      newMarkList = _objectSpread({}, markList, {\n        [markType.replace(\"-\", \"\")]: highlight\n      });\n      this.setState({\n        markList: newMarkList\n      });\n      this.markAllCheckString(newMarkList);\n    };\n\n    this.clearMarkString = markType => {\n      let newMarkList = \"\";\n      const markList = this.state.markList;\n      const markData = {};\n      newMarkList = _objectSpread({}, markList, {\n        [markType.replace(\"-\", \"\")]: markData\n      });\n      this.setState({\n        markList: newMarkList\n      });\n      this.markAllCheckString(newMarkList);\n    };\n\n    this.onMouseUp = callbackFn => {\n      const id = this.state.id;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.mouseup(event => {\n        // console.log(`| ========== ${event.type} ========== | `);\n        callbackFn(event);\n        this.clearAllMarkChackString(id);\n      });\n    };\n\n    this.onKeyDown = () => {\n      const _this$state2 = this.state,\n            id = _this$state2.id,\n            colSize = _this$state2.colSize;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.keydown(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        const startSelection = getStartSelection(id, colSize);\n        const endSelection = getEndSelection(id, colSize);\n        const flag = \"field\"; // const flag = 'list';\n\n        if (flag === \"list\") {\n          const selectionStart = getIndexByRowCol(startSelection.row, 0) + 1;\n          const selectionEnd = getIndexByRowCol(endSelection.row, colSize) + 2;\n          setSelectionRange(id, selectionStart, selectionEnd);\n        }\n      });\n    };\n\n    this.onDoubleClick = callbackFn => {\n      const id = this.state.id;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.dblclick(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        callbackFn(event);\n      });\n    };\n\n    this.onSelect = () => {\n      const _this$state3 = this.state,\n            id = _this$state3.id,\n            colSize = _this$state3.colSize;\n      const elScreen = $(`.${id}.as400-screen`);\n      elScreen.select(event => {\n        // console.log(`| ========== ${event.type} ========== |`);\n        const start = event.target.selectionStart;\n        const end = event.target.selectionEnd;\n        const startPosition = getStartSelection(id, colSize);\n        this.setState({\n          lastSelection: {\n            text: getSelectionRange(id, start, end),\n            row: startPosition.row,\n            col: startPosition.col\n          }\n        });\n      });\n    };\n\n    this.getHighlight = markType => {\n      return this.state.markList[markType.replace(\"-\", \"\")];\n    };\n\n    this.setHighlight = (markType, highlight) => {\n      this.markStringChackString(markType, highlight);\n    };\n\n    this.clearHighlight = markType => {\n      return this.clearMarkString(markType);\n    };\n\n    this.getHighlightList = () => {\n      return this.state.markList;\n    };\n\n    this.setHighlightList = highlightList => {\n      this.markAllCheckString(highlightList);\n    };\n\n    this.clearHighlightList = () => {\n      this.clearAllMarkChackString(this.props.id);\n    };\n\n    this.getLastSelection = () => {\n      return this.state.lastSelection;\n    };\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList,\n      lastSelection: {\n        startIndex: 0,\n        endIndex: 0\n      },\n      colSize: props.cols\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n    this.markAllCheckString(this.props.highlight);\n    const _this$props = this.props,\n          onDoubleClick = _this$props.onDoubleClick,\n          onMouseUp = _this$props.onMouseUp;\n    this.onSelect();\n    this.onKeyDown();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          id = _this$props2.id,\n          readOnly = _this$props2.readOnly;\n    return React.createElement(EmulatorView, {\n      id: id,\n      readOnly: readOnly,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    });\n  } // Set default props\n\n\n}\nScreenMapping.defaultProps = {\n  highlight: {}\n};\nScreenMapping.propTypes = {\n  highlightList: PropTypes.object\n};\nexport default ScreenMapping;","map":{"version":3,"sources":["/Users/jutawuth/Git/SSQUARE/Component-AS400-React/src/components/ScreenMapping/index.jsx"],"names":["React","PropTypes","$","_","Emulator","EmulatorView","getIndexByRowCol","getHighlightDefault","getSelectionRange","setSelectionRange","getStartSelection","getEndSelection","ScreenMapping","constructor","props","markAllCheckString","markListData","clearAllMarkChackString","state","id","setState","markList","elHighlight","text","innerHTML","textHighlight","i","length","isEmpty","mark1","row","col","mark2","mark3","html","elStr","rowSize","colSize","markStringChackString","markType","highlight","newMarkList","replace","clearMarkString","markData","onMouseUp","callbackFn","elScreen","mouseup","event","onKeyDown","keydown","startSelection","endSelection","flag","selectionStart","selectionEnd","onDoubleClick","dblclick","onSelect","select","start","target","end","startPosition","lastSelection","getHighlight","setHighlight","clearHighlight","getHighlightList","setHighlightList","highlightList","clearHighlightList","getLastSelection","startIndex","endIndex","cols","componentDidMount","args","apply","render","readOnly","defaultProps","propTypes","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport $ from \"jquery\";\nimport _ from \"lodash\";\n\nimport Emulator from \"../Emulator/index\";\nimport EmulatorView from \"../Emulator/EmulatorView\";\n\nimport {\n  getIndexByRowCol,\n  getHighlightDefault,\n  getSelectionRange,\n  setSelectionRange,\n  getStartSelection,\n  getEndSelection\n} from \"../Emulator/controler\";\n\nexport class ScreenMapping extends Emulator {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: props.id,\n      markList: props.highlightList,\n      lastSelection: {\n        startIndex: 0,\n        endIndex: 0\n      },\n      colSize: props.cols\n    };\n  }\n\n  componentDidMount(...args) {\n    super.componentDidMount.apply(this, args);\n\n    this.markAllCheckString(this.props.highlight);\n\n    const { onDoubleClick, onMouseUp } = this.props;\n\n    this.onSelect();\n    this.onKeyDown();\n    this.onMouseUp(onMouseUp);\n    this.onDoubleClick(onDoubleClick);\n  }\n\n  markAllCheckString = markListData => {\n    this.clearAllMarkChackString(this.state.id);\n    this.setState({\n      markList: markListData\n    });\n\n    const elHighlight = $(`.${this.state.id}.as400-highlight`);\n    const text = elHighlight[0].innerHTML;\n    let textHighlight = \"\";\n    for (let i = 0; i < text.length; i += 1) {\n      if (\n        !_.isEmpty(markListData.mark1) &&\n        i === getIndexByRowCol(markListData.mark1.row, markListData.mark1.col)\n      ) {\n        if (markListData.mark1.text.length < 2) {\n          textHighlight += `<as400-mark-1>${text[i]}</as400-mark-1>`;\n        } else {\n          textHighlight += `<as400-mark-1>${text[i]}`;\n        }\n      } else if (\n        !_.isEmpty(markListData.mark1) &&\n        i ===\n          getIndexByRowCol(markListData.mark1.row, markListData.mark1.col) +\n            markListData.mark1.text.length -\n            1\n      ) {\n        textHighlight += `${text[i]}</as400-mark-1>`;\n      } else if (\n        !_.isEmpty(markListData.mark2) &&\n        i === getIndexByRowCol(markListData.mark2.row, markListData.mark2.col)\n      ) {\n        if (markListData.mark2.text.length < 2) {\n          textHighlight += `<as400-mark-2>${text[i]}</as400-mark-2>`;\n        } else {\n          textHighlight += `<as400-mark-2>${text[i]}`;\n        }\n      } else if (\n        !_.isEmpty(markListData.mark2) &&\n        i ===\n          getIndexByRowCol(markListData.mark2.row, markListData.mark2.col) +\n            markListData.mark2.text.length -\n            1\n      ) {\n        textHighlight += `${text[i]}</as400-mark-2>`;\n      } else if (\n        !_.isEmpty(markListData.mark3) &&\n        i === getIndexByRowCol(markListData.mark3.row, markListData.mark3.col)\n      ) {\n        if (markListData.mark3.text.length < 2) {\n          textHighlight += `<as400-mark-3>${text[i]}</as400-mark-3>`;\n        } else {\n          textHighlight += `<as400-mark-3>${text[i]}`;\n        }\n      } else if (\n        !_.isEmpty(markListData.mark3) &&\n        i ===\n          getIndexByRowCol(markListData.mark3.row, markListData.mark3.col) +\n            markListData.mark3.text.length -\n            1\n      ) {\n        textHighlight += `${text[i]}</as400-mark-3>`;\n      } else {\n        textHighlight += text[i];\n      }\n    }\n\n    elHighlight.html(textHighlight);\n  };\n\n  clearAllMarkChackString = elStr => {\n    const { rowSize, colSize } = this.state;\n    const elHighlight = $(`.${elStr}.as400-highlight`);\n    elHighlight.html(getHighlightDefault(rowSize, colSize));\n\n    this.setState({\n      markList: {}\n    });\n  };\n\n  markStringChackString = (markType, highlight) => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: highlight\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  clearMarkString = markType => {\n    let newMarkList = \"\";\n    const markList = this.state.markList;\n    const markData = {};\n\n    newMarkList = {\n      ...markList,\n      [markType.replace(\"-\", \"\")]: markData\n    };\n\n    this.setState({ markList: newMarkList });\n    this.markAllCheckString(newMarkList);\n  };\n\n  onMouseUp = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.mouseup(event => {\n      // console.log(`| ========== ${event.type} ========== | `);\n      callbackFn(event);\n      this.clearAllMarkChackString(id);\n    });\n  };\n\n  onKeyDown = () => {\n    const { id, colSize } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.keydown(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      const startSelection = getStartSelection(id, colSize);\n      const endSelection = getEndSelection(id, colSize);\n\n      const flag = \"field\";\n      // const flag = 'list';\n      if (flag === \"list\") {\n        const selectionStart = getIndexByRowCol(startSelection.row, 0) + 1;\n        const selectionEnd = getIndexByRowCol(endSelection.row, colSize) + 2;\n\n        setSelectionRange(id, selectionStart, selectionEnd);\n      }\n    });\n  };\n\n  onDoubleClick = callbackFn => {\n    const { id } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.dblclick(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n\n      callbackFn(event);\n    });\n  };\n\n  onSelect = () => {\n    const { id, colSize } = this.state;\n    const elScreen = $(`.${id}.as400-screen`);\n\n    elScreen.select(event => {\n      // console.log(`| ========== ${event.type} ========== |`);\n      const start = event.target.selectionStart;\n      const end = event.target.selectionEnd;\n      const startPosition = getStartSelection(id, colSize);\n\n      this.setState({\n        lastSelection: {\n          text: getSelectionRange(id, start, end),\n          row: startPosition.row,\n          col: startPosition.col\n        }\n      });\n    });\n  };\n\n  /**\n   * ==================\n   *  provide function\n   * ==================\n   */\n  getHighlight = markType => {\n    return this.state.markList[markType.replace(\"-\", \"\")];\n  };\n\n  setHighlight = (markType, highlight) => {\n    this.markStringChackString(markType, highlight);\n  };\n\n  clearHighlight = markType => {\n    return this.clearMarkString(markType);\n  };\n\n  getHighlightList = () => {\n    return this.state.markList;\n  };\n\n  setHighlightList = highlightList => {\n    this.markAllCheckString(highlightList);\n  };\n\n  clearHighlightList = () => {\n    this.clearAllMarkChackString(this.props.id);\n  };\n\n  getLastSelection = () => {\n    return this.state.lastSelection;\n  };\n\n  render() {\n    const { id, readOnly } = this.props;\n    return <EmulatorView id={id} readOnly={readOnly} />;\n  }\n\n  // Set default props\n  static defaultProps = {\n    highlight: {}\n  };\n}\n\nScreenMapping.propTypes = {\n  highlightList: PropTypes.object\n};\n\nexport default ScreenMapping;\n"]},"metadata":{},"sourceType":"module"}